{"file":"kul-badge.kul-button.kul-image.kul-list.entry.js","mappings":"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","names":["__classPrivateFieldGet","__classPrivateFieldSet"],"sources":["src/components/kul-badge/kul-badge-declarations.ts","src/components/kul-badge/kul-badge.scss?tag=kul-badge&encapsulation=shadow","src/components/kul-badge/kul-badge.tsx","src/components/kul-button/kul-button-declarations.ts","src/components/kul-button/kul-button.scss?tag=kul-button&encapsulation=shadow","src/components/kul-button/kul-button.tsx","src/components/kul-image/kul-image-declarations.ts","src/components/kul-image/kul-image.scss?tag=kul-image&encapsulation=shadow","src/components/kul-image/kul-image.tsx","src/components/kul-list/kul-list-declarations.ts","src/components/kul-list/kul-list.scss?tag=kul-list&encapsulation=shadow","src/components/kul-list/kul-list.tsx"],"sourcesContent":["import { KulEventPayload } from \"../../types/GenericTypes\";\nimport { KulImagePropsInterface } from \"../kul-image/kul-image-declarations\";\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulBadgeEvent = \"click\" | \"ready\" | \"unmount\";\nexport interface KulBadgeEventPayload\n  extends KulEventPayload<\"KulBadge\", KulBadgeEvent> {}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulBadgeProps {\n  kulImageProps = \"The props of the image displayed inside the badge.\",\n  kulLabel = \"The text displayed inside the badge.\",\n  kulStyle = \"Custom style of the component.\",\n}\nexport interface KulBadgePropsInterface {\n  kulImageProps?: KulImagePropsInterface;\n  kulLabel?: string;\n  kulStyle?: string;\n}\n","@import \"./styles/kul-badge-main.scss\";\n@import \"./styles/kul-badge-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from \"@stencil/core\";\n\nimport {\n  KulBadgeEvent,\n  KulBadgeEventPayload,\n  KulBadgeProps,\n} from \"./kul-badge-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { KulThemeColorValues } from \"../../managers/kul-theme/kul-theme-declarations\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\nimport { KulImagePropsInterface } from \"../kul-image/kul-image-declarations\";\n\n@Component({\n  tag: \"kul-badge\",\n  styleUrl: \"kul-badge.scss\",\n  shadow: true,\n})\nexport class KulBadge {\n  /**\n   * References the root HTML element of the component (<kul-badge>).\n   */\n  @Element() rootElement: HTMLKulBadgeElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * The props of the image displayed inside the badge.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulImageProps: KulImagePropsInterface = null;\n  /**\n   * The text displayed inside the badge.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: false }) kulLabel = \"\";\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-badge-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulBadgeEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulBadgeEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulBadgeProps, descriptions);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    let imageEl: HTMLElement = null;\n    if (!this.kulLabel && this.kulImageProps) {\n      if (!this.kulImageProps.kulColor) {\n        this.kulImageProps.kulColor = `var(${KulThemeColorValues.TEXT_ON_PRIMARY})`;\n      }\n      imageEl = <kul-image {...this.kulImageProps}></kul-image>;\n    }\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID} onClick={(e) => this.onKulEvent(e, \"click\")}>\n          {this.kulLabel}\n          {imageEl}\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n","import { KulDataDataset } from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulButtonEvent =\n  | \"blur\"\n  | \"click\"\n  | \"focus\"\n  | \"kul-event\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulButtonEventPayload\n  extends KulEventPayload<\"KulButton\", KulButtonEvent> {\n  value: string;\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulButtonProps {\n  kulData = \"Actual data of the button, used to render dropdown buttons.\",\n  kulDisabled = \"When true, the component is disabled.\",\n  kulIcon = \"Specifies an icon to display.\",\n  kulIconOff = \"Icon to be used for the off state when the button is toggable.\",\n  kulLabel = \"Defines text to display on the button.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulShowSpinner = \"When true, a spinner will be shown on the button.\",\n  kulStyle = \"Sets a custom CSS style for the component.\",\n  kulStyling = 'Defines the button appearance. Possible values are \"flat\", \"floating\", \"icon\", \"outlined\", and \"raised\". The default is \"raised\".',\n  kulToggable = \"Makes the button toggable between an on and off state.\",\n  kulTrailingIcon = \"If set, displays an icon after the text.\",\n  kulType = \"Defines the button type attribute.\",\n  kulValue = \"If true, the button is marked as checked.\",\n}\nexport interface KulButtonPropsInterface {\n  kulData?: KulDataDataset;\n  kulDisabled?: boolean;\n  kulIcon?: string;\n  kulIconOff?: string;\n  kulLabel?: string;\n  kulRipple?: boolean;\n  kulShowSpinner?: boolean;\n  kulStyle?: string;\n  kulStyling?: KulButtonStyling;\n  kulToggable?: boolean;\n  kulTrailingIcon?: boolean;\n  kulType?: \"button\" | \"submit\" | \"reset\";\n  kulValue?: boolean;\n}\nexport type KulButtonStyling =\n  | \"flat\"\n  | \"floating\"\n  | \"icon\"\n  | \"outlined\"\n  | \"raised\";\n/*-------------------------------------------------*/\n/*                    S t a t e                    */\n/*-------------------------------------------------*/\nexport type KulButtonState = \"off\" | \"on\";\n","@import \"./styles/kul-button-main.scss\";\n@import \"./styles/kul-button-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  Fragment,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\n\nimport {\n  KulButtonEventPayload,\n  KulButtonEvent,\n  KulButtonProps,\n  KulButtonState,\n  KulButtonStyling,\n} from \"./kul-button-declarations\";\nimport {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { KulDynamicPositionPlacement } from \"../../managers/kul-dynamic-position/kul-dynamic-position-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { KulManagerClickCb } from \"../../managers/kul-manager/kul-manager-declarations\";\nimport {\n  KulDataCyAttributes,\n  type GenericObject,\n} from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport {\n  KUL_DROPDOWN_CLASS,\n  KUL_DROPDOWN_CLASS_VISIBLE,\n  KUL_STYLE_ID,\n  KUL_WRAPPER_ID,\n} from \"../../variables/GenericVariables\";\nimport { KulImagePropsInterface } from \"../kul-image/kul-image-declarations\";\nimport { KulListEventPayload } from \"../kul-list/kul-list-declarations\";\n\n@Component({\n  tag: \"kul-button\",\n  styleUrl: \"kul-button.scss\",\n  shadow: true,\n})\nexport class KulButton {\n  /**\n   * References the root HTML element of the component (<kul-button>).\n   */\n  @Element() rootElement: HTMLKulButtonElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The value of the component (\"on\" or \"off\").\n   * @default \"\"\n   *\n   * @see KulButtonState - For a list of possible states.\n   */\n  @State() value: KulButtonState = \"off\";\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * Actual data of the button, used to render dropdown buttons.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * Defaults at false. When set to true, the component is disabled.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulDisabled = false;\n  /**\n   * When set, the button will show this icon.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulIcon = \"\";\n  /**\n   * When set, the icon button off state will show this icon. Otherwise, an outlined version of the icon prop will be displayed.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulIconOff = \"\";\n  /**\n   * When set, the button will show this text.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulLabel = \"\";\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * When set to true, the button show a spinner received in slot.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulShowSpinner = false;\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * Defines the style of the button. This property controls the visual appearance of the button.\n   *\n   * @default \"raised\"\n   *\n   * @see KulButtonStyling - For a list of available styles.\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyling: KulButtonStyling =\n    \"raised\";\n  /**\n   * When set to true, the icon button will be toggable on/off.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulToggable = false;\n  /**\n   * When set, the icon will be shown after the text.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulTrailingIcon = false;\n  /**\n   * Sets the type of the button.\n   * @default \"button\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulType:\n    | \"button\"\n    | \"reset\"\n    | \"submit\" = \"button\";\n  /**\n   * When set to true, the icon button state will be on.\n   * @default false\n   */\n  @Prop({ mutable: false }) kulValue = false;\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #clickCb: KulManagerClickCb;\n  #dropdown: HTMLButtonElement;\n  #dropdownRippleSurface: HTMLDivElement;\n  #list: HTMLKulListElement;\n  #kulManager = kulManagerInstance();\n  #rippleSurface: HTMLDivElement;\n  #timeout: NodeJS.Timeout;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted for various button interactions like click, focus, blur.\n   */\n  @Event({\n    eventName: \"kul-button-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulButtonEventPayload>;\n\n  onKulEvent(\n    e: Event | CustomEvent,\n    eventType: KulButtonEvent,\n    isDropdown = false,\n  ) {\n    switch (eventType) {\n      case \"click\":\n        this.#updateState(this.#isOn() ? \"off\" : \"on\");\n        break;\n      case \"pointerdown\":\n        if (this.kulRipple) {\n          this.#kulManager.theme.ripple.trigger(\n            e as PointerEvent,\n            isDropdown ? this.#dropdownRippleSurface : this.#rippleSurface,\n          );\n        }\n        break;\n    }\n\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      value: this.value,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's properties and descriptions.\n   * @param {boolean} descriptions - When true, includes descriptions for each property.\n   * @returns {Promise<GenericObject>} Promise resolved with an object containing the component's properties.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulButtonProps, descriptions);\n  }\n  /**\n   * Used to retrieve the component's current state.\n   * @returns {Promise<KulButtonState>} Promise resolved with the current state of the component.\n   */\n  @Method()\n  async getValue(): Promise<KulButtonState> {\n    return this.value;\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Temporarily sets a different label/icon combination, falling back to their previous value after a timeout.\n   * @param {string} label - Temporary label to display.\n   * @param {string} icon - Temporary icon to display.\n   * @param {number} timeout - Time in ms to wait before restoring previous values.\n   * @returns {Promise<void>}\n   */\n  async setMessage(\n    label: string = \"Copied!\",\n    icon: string = \"check\",\n    timeout: number = 1000,\n  ): Promise<void> {\n    if (this.#timeout) {\n      return;\n    }\n\n    const oldIcon = this.kulIcon;\n    const oldLabel = this.kulLabel;\n\n    requestAnimationFrame(() => {\n      this.kulLabel = label;\n      this.kulIcon = icon;\n    });\n\n    this.#timeout = setTimeout(() => {\n      this.kulLabel = oldLabel;\n      this.kulIcon = oldIcon;\n      this.#timeout = null;\n    }, timeout);\n  }\n  /**\n   * Sets the component's state.\n   * @param {KulButtonState} value - The new state to be set on the component.\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setValue(value: KulButtonState): Promise<void> {\n    this.#updateState(value);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #listManager() {\n    return {\n      close: () => {\n        this.#kulManager.dynamicPosition.stop(this.#list);\n        this.#kulManager.removeClickCallback(this.#clickCb);\n      },\n      isOpened: () => {\n        return this.#list.classList.contains(KUL_DROPDOWN_CLASS_VISIBLE);\n      },\n      open: () => {\n        if (this.#kulManager.dynamicPosition.isRegistered(this.#list)) {\n          this.#kulManager.dynamicPosition.changeAnchor(\n            this.#list,\n            this.#dropdown,\n          );\n        } else {\n          this.#kulManager.dynamicPosition.register(\n            this.#list,\n            this.#dropdown,\n            0,\n            KulDynamicPositionPlacement.AUTO,\n            true,\n          );\n        }\n        this.#kulManager.dynamicPosition.start(this.#list);\n        if (!this.#clickCb) {\n          this.#clickCb = {\n            cb: () => {\n              this.#listManager().close();\n            },\n            el: this.#list,\n          };\n        }\n        this.#kulManager.addClickCallback(this.#clickCb, true);\n      },\n      toggle: () => {\n        if (this.#listManager().isOpened()) {\n          this.#listManager().close();\n        } else {\n          this.#listManager().open();\n        }\n      },\n    };\n  }\n\n  #isDropdown() {\n    return this.kulData?.nodes?.[0]?.children?.length;\n  }\n\n  #isOn() {\n    return this.value === \"on\" ? true : false;\n  }\n\n  #updateState(value: KulButtonState) {\n    if (\n      this.kulToggable &&\n      !this.kulDisabled &&\n      (value === \"off\" || value === \"on\")\n    ) {\n      this.value = value;\n    }\n  }\n\n  #prepIcon(image: KulImagePropsInterface) {\n    return this.kulIcon ? (\n      <kul-image\n        class={`button__icon kul-icon ${this.kulShowSpinner ? \"button__icon--hidden\" : \"\"}`}\n        {...image}\n      />\n    ) : undefined;\n  }\n\n  #prepLabel(className: { [className: string]: boolean }) {\n    return <span class={className}>{this.kulLabel}</span>;\n  }\n\n  #prepNode(node: KulDataNode): VNode {\n    const currentNode = <div>{node.value}</div>;\n\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const childrenNodes = node.children.map((childNode) =>\n        this.#prepNode(childNode),\n      );\n      return (\n        <Fragment>\n          {currentNode}\n          {childrenNodes}\n        </Fragment>\n      );\n    } else {\n      return currentNode;\n    }\n  }\n\n  #prepRipple(isDropdown = false) {\n    return this.kulRipple ? (\n      <div\n        ref={(el) => {\n          if (el && this.kulRipple) {\n            if (isDropdown) {\n              this.#dropdownRippleSurface = el;\n            } else {\n              this.#rippleSurface = el;\n            }\n          }\n        }}\n      ></div>\n    ) : undefined;\n  }\n\n  #prepSpinner() {\n    return this.kulShowSpinner ? (\n      <div class=\"button__spinner-container\">\n        <slot name=\"spinner\"></slot>\n      </div>\n    ) : undefined;\n  }\n\n  #normalizedStyling() {\n    return this.kulStyling\n      ? (this.kulStyling.toLowerCase() as KulButtonStyling)\n      : \"raised\";\n  }\n\n  #renderButton(): VNode[] {\n    const buttonStyling = this.#normalizedStyling();\n\n    const image: KulImagePropsInterface = {\n      kulColor: this.kulDisabled\n        ? `var(--kul_button_disabled_color)`\n        : `var(--kul_button_primary_color)`,\n      kulValue: this.kulIcon,\n      kulSizeX: buttonStyling === \"floating\" ? \"1.75em\" : \"1.475em\",\n      kulSizeY: buttonStyling === \"floating\" ? \"1.75em\" : \"1.475em\",\n    };\n\n    const className: Record<string, boolean> = {\n      button: true,\n      \"button--disabled\": this.kulDisabled ? true : false,\n      [`button--${buttonStyling}`]: true,\n      \"button--no-label\":\n        !this.kulLabel || this.kulLabel === \" \" ? true : false,\n      \"button--with-spinner\": this.kulShowSpinner,\n    };\n\n    const labelClassName: Record<string, boolean> = {\n      button__label: true,\n      \"content--hidden\":\n        this.kulShowSpinner && !this.kulDisabled ? true : false,\n    };\n\n    const styleSpinnerContainer: Record<string, string> = {\n      \"--kul_button_spinner_height\": image.kulSizeY,\n    };\n\n    return [\n      <button\n        aria-label={this.rootElement.title}\n        class={className}\n        disabled={this.kulDisabled}\n        onBlur={(e) => this.onKulEvent(e, \"blur\")}\n        onClick={(e) => this.onKulEvent(e, \"click\")}\n        onFocus={(e) => this.onKulEvent(e, \"focus\")}\n        onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\")}\n        style={styleSpinnerContainer}\n        type={this.kulType ? this.kulType : \"button\"}\n      >\n        {this.#prepRipple()}\n        {this.kulTrailingIcon\n          ? [this.#prepLabel(labelClassName), this.#prepIcon(image)]\n          : [this.#prepIcon(image), this.#prepLabel(labelClassName)]}\n        {this.#prepSpinner()}\n      </button>,\n      this.#renderDropdown(image, buttonStyling),\n    ];\n  }\n\n  #renderIconButton(): VNode[] {\n    const isLarge = this.rootElement.classList.contains(\"large\");\n    const isOn = this.#isOn();\n\n    const image: KulImagePropsInterface = {\n      kulColor: this.kulDisabled\n        ? `var(--kul_button_disabled_color)`\n        : `var(--kul_button_primary_color)`,\n      kulSizeX: isLarge ? \"calc(1.75em * 1.5)\" : \"1.75em\",\n      kulSizeY: isLarge ? \"calc(1.75em * 1.5)\" : \"1.75em\",\n    };\n\n    const className: Record<string, boolean> = {\n      \"icon-button\": true,\n      \"button--disabled\": this.kulDisabled ? true : false,\n      \"icon-button--on\": this.kulToggable && isOn ? true : false,\n      toggable: this.kulToggable ? true : false,\n      \"icon-button--with-spinner\": this.kulShowSpinner ? true : false,\n    };\n\n    const styleSpinnerContainer: Record<string, string> = {\n      \"--kul_button_spinner_height\": image.kulSizeY,\n      \"--kul_button_spinner_width\": image.kulSizeX,\n    };\n\n    const iconOff: string = this.kulIconOff\n      ? this.kulIconOff\n      : this.kulIcon + \"_border\";\n\n    return [\n      <button\n        aria-label={this.rootElement.title}\n        class={className}\n        disabled={this.kulDisabled}\n        onBlur={(e) => this.onKulEvent(e, \"blur\")}\n        onClick={(e) => this.onKulEvent(e, \"click\")}\n        onFocus={(e) => this.onKulEvent(e, \"focus\")}\n        onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\")}\n        style={styleSpinnerContainer}\n        value={this.value}\n        type={this.kulType ? this.kulType : \"button\"}\n      >\n        {this.#prepRipple()}\n        <kul-image\n          class=\"icon-button__icon\"\n          {...image}\n          kulValue={this.kulToggable && !isOn ? iconOff : this.kulIcon}\n        />\n        {this.#prepSpinner()}\n      </button>,\n      this.#renderDropdown(image, \"icon\"),\n    ];\n  }\n\n  #renderDropdown(image: KulImagePropsInterface, styling: string) {\n    if (!this.#isDropdown()) {\n      return;\n    }\n\n    const className: Record<string, boolean> = {\n      button: true,\n      [`button--${styling}`]: true,\n      [\"button--dropdown\"]: true,\n      \"button--disabled\": this.kulDisabled ? true : false,\n    };\n\n    const eventHandler = (e: CustomEvent<KulListEventPayload>) => {\n      if (e.detail.eventType === \"click\") {\n        this.onKulEvent(e, \"kul-event\");\n        this.#listManager().close();\n      }\n    };\n\n    return (\n      <button\n        class={className}\n        data-cy={KulDataCyAttributes.DROPDOWN_BUTTON}\n        disabled={this.kulDisabled}\n        onClick={() => {\n          this.#listManager().toggle();\n        }}\n        onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\", true)}\n        ref={(el) => {\n          if (el) {\n            this.#dropdown = el;\n          }\n        }}\n      >\n        {this.#prepRipple(true)}\n        <kul-image {...image} kulValue={\"--kul-dropdown-icon\"} />\n        <kul-list\n          class={KUL_DROPDOWN_CLASS}\n          data-cy={KulDataCyAttributes.DROPDOWN_MENU}\n          kulData={{ nodes: this.kulData.nodes[0].children }}\n          onKul-list-event={eventHandler}\n          ref={(el) => (this.#list = el)}\n        ></kul-list>\n      </button>\n    );\n  }\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    if (this.kulValue) {\n      this.value = \"on\";\n    }\n    const firstNode = this.kulData?.nodes?.[0];\n    if (firstNode) {\n      if (!this.kulIcon) {\n        this.kulIcon = firstNode.icon;\n      }\n      if (!this.kulLabel) {\n        this.kulLabel = this.#kulManager.data.cell.stringify(firstNode.value);\n      }\n    }\n\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    if (this.#rippleSurface) {\n      this.#kulManager.theme.ripple.setup(this.#rippleSurface);\n    }\n    if (this.#dropdownRippleSurface) {\n      this.#kulManager.theme.ripple.setup(this.#dropdownRippleSurface);\n    }\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    const buttonStyling = this.#normalizedStyling();\n\n    const isIconButton: boolean = !!(\n      buttonStyling === \"icon\" ||\n      (buttonStyling === \"raised\" &&\n        this.kulIcon &&\n        (this.kulLabel === null || this.kulLabel === undefined))\n    );\n\n    if (!this.kulLabel && !this.kulIcon && !this.kulData) {\n      this.#kulManager.debug.logs.new(this, \"Empty button.\", \"informational\");\n      return;\n    }\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          {isIconButton ? this.#renderIconButton() : this.#renderButton()}\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    if (this.#list) {\n      this.#kulManager.dynamicPosition.unregister([this.#list]);\n    }\n    this.#kulManager.theme.unregister(this);\n  }\n}\n","import { KulEventPayload } from \"../../types/GenericTypes\";\nimport { KulBadgePropsInterface } from \"../kul-badge/kul-badge-declarations\";\n\n//#region Events\nexport type KulImageEvent =\n  | \"click\"\n  | \"contextmenu\"\n  | \"error\"\n  | \"load\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulImageEventPayload\n  extends KulEventPayload<\"KulImage\", KulImageEvent> {}\n//#endregion\n\n//#region Props\nexport enum KulImageProps {\n  kulBadgeProps = \"Sets the props to show a badge.\",\n  kulColor = \"The color of the icon, defaults to the CSS variable --kul-icon-color.\",\n  kulShowSpinner = \"When set to true, a spinner will be displayed until the image finished loading. Not compatible with SVGs.\",\n  kulSizeX = \"The width of the icon, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).\",\n  kulSizeY = \"The height of the icon, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).\",\n  kulStyle = \"Custom style of the component.\",\n  kulValue = \"Defines the source URL of the image. This property is used to set the image resource that the component should display.\",\n}\nexport interface KulImagePropsInterface {\n  kulBadgeProps?: KulBadgePropsInterface;\n  kulColor?: string;\n  kulShowSpinner?: boolean;\n  kulSizeX?: string;\n  kulSizeY?: string;\n  kulStyle?: string;\n  kulValue?: string;\n}\n//#endregion\n","@import \"./styles/kul-image-main.scss\";\n@import \"./styles/kul-image-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  getAssetPath,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport {\n  KulImageEvent,\n  KulImageEventPayload,\n  KulImageProps,\n} from \"./kul-image-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { KulThemeColorValues } from \"../../managers/kul-theme/kul-theme-declarations\";\nimport type { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport {\n  CSS_VAR_PREFIX,\n  KUL_STYLE_ID,\n  KUL_WRAPPER_ID,\n} from \"../../variables/GenericVariables\";\nimport { KulBadgePropsInterface } from \"../kul-badge/kul-badge-declarations\";\n\n@Component({\n  tag: \"kul-image\",\n  assetsDirs: [\"assets/svg\"],\n  styleUrl: \"kul-image.scss\",\n  shadow: true,\n})\nexport class KulImage {\n  /**\n   * References the root HTML element of the component (<kul-image>).\n   */\n  @Element() rootElement: HTMLKulImageElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The selected element.\n   * @default false\n   */\n  @State() error = false;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * This property is used to attach a badge to the component.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulBadgeProps: KulBadgePropsInterface = null;\n  /**\n   * Specifies the color of the icon using a CSS variable. This property is used to set the color of the component's icon.\n   * @default KulThemeColorValues.ICON\n   *\n   * @see KulThemeColorValues - For a list of available CSS variable names for color.\n   */\n  @Prop({ mutable: true, reflect: true })\n  kulColor = `var(${KulThemeColorValues.ICON})`;\n  /**\n   * Controls the display of a loading indicator. When enabled, a spinner is shown until the image finishes loading. This property is not compatible with SVG images.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulShowSpinner = false;\n  /**\n   * Sets the width of the icon. This property accepts any valid CSS measurement value (e.g., px, %, vh, etc.) and defaults to 100%.\n   * @default '100%'\n   */\n  @Prop({ mutable: true, reflect: true }) kulSizeX = \"100%\";\n  /**\n   * Sets the height of the icon. This property accepts any valid CSS measurement value (e.g., px, %, vh, etc.) and defaults to 100%.\n   * @default '100%'\n   */\n  @Prop({ mutable: true, reflect: true }) kulSizeY = \"100%\";\n  /**\n   * Customizes the style of the component. This property allows you to apply a custom CSS style to the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * Defines the source URL of the image. This property is used to set the image resource that the component should display.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulValue = \"\";\n\n  /*-------------------------------------------------*/\n  /*        I n t e r n a l   V a r i a b l e s      */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-image-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulImageEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulImageEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      id: this.rootElement.id,\n      originalEvent: e,\n      eventType,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*                 W a t c h e r s                 */\n  /*-------------------------------------------------*/\n\n  @Watch(\"kulValue\")\n  async resetState() {\n    this.error = false;\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulImageProps, descriptions);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  createIcon(): VNode {\n    const className = {\n      image__icon: true,\n    };\n    const style = {\n      [\"--kul_image_background\"]: this.kulColor\n        ? this.kulColor\n        : `var(${KulThemeColorValues.ICON})`,\n      [\"--kul_image_mask\"]: \"\",\n    };\n    const isThemeIcon = this.kulValue.indexOf(CSS_VAR_PREFIX) > -1;\n    if (isThemeIcon) {\n      const themeIcon = this.kulValue.replace(\"--\", \"\");\n      className[\"kul-icon\"] = true;\n      className[themeIcon] = true;\n    }\n    const icon = this.error\n      ? \"broken_image\"\n      : isThemeIcon\n        ? this.#kulManager.theme.list[this.#kulManager.theme.name].icons[\n            this.kulValue\n          ]\n        : this.kulValue;\n    style[\"--kul_image_mask\"] =\n      `url('${getAssetPath(`./assets/svg/${icon}.svg`)}') no-repeat center`;\n\n    return <div class={className} style={style}></div>;\n  }\n\n  createImage(): VNode {\n    return (\n      <img\n        onError={(e) => {\n          this.error = true;\n          this.onKulEvent(e, \"error\");\n        }}\n        onLoad={(e) => {\n          this.resetState();\n          this.onKulEvent(e, \"load\");\n        }}\n        src={this.kulValue}\n      ></img>\n    );\n  }\n\n  isResourceUrl(): boolean {\n    return !!(\n      this.kulValue &&\n      (this.kulValue.indexOf(\".\") > -1 ||\n        this.kulValue.indexOf(\"/\") > -1 ||\n        this.kulValue.indexOf(\"\\\\\") > -1)\n    );\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    if (!this.kulValue) {\n      this.#kulManager.debug.logs.new(this, \"Empty image.\");\n      return;\n    }\n\n    let el: VNode;\n    let feedback: HTMLElement;\n    const isUrl = this.isResourceUrl();\n    let spinnerLayout: number;\n    let style = {\n      \"--kul_image_height\": this.kulSizeY ? this.kulSizeY : \"auto\",\n      \"--kul_image_width\": this.kulSizeX ? this.kulSizeX : \"100%\",\n    };\n\n    if (isUrl && !this.error) {\n      el = this.createImage();\n    } else {\n      el = this.createIcon();\n    }\n\n    if (this.kulShowSpinner && isUrl) {\n      spinnerLayout = 14;\n      feedback = (\n        <div class=\"spinner\" title=\"Image not loaded yet...\">\n          <kul-spinner\n            kulActive={true}\n            kulDimensions=\"3px\"\n            kulLayout={spinnerLayout}\n          ></kul-spinner>\n        </div>\n      );\n    }\n\n    return (\n      <Host style={style}>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        {feedback}\n        <div id={KUL_WRAPPER_ID}>\n          <div\n            class=\"image\"\n            onClick={(e) => {\n              this.onKulEvent(e, \"click\");\n            }}\n          >\n            {el}\n            {this.kulBadgeProps ? (\n              <kul-badge {...this.kulBadgeProps}></kul-badge>\n            ) : undefined}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n","import {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulListEvent =\n  | \"blur\"\n  | \"click\"\n  | \"delete\"\n  | \"focus\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulListEventPayload\n  extends KulEventPayload<\"KulList\", KulListEvent> {\n  node: KulDataNode;\n}\n//#endregion\n\n//#region Props\nexport enum KulListProps {\n  kulData = \"The actual data of the list.\",\n  kulEmptyLabel = \"Text displayed when the list is empty.\",\n  kulEnableDeletions = \"Defines whether items can be removed from the list or not.\",\n  kulNavigation = \"When true, enables items' navigation through arrow keys.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulSelectable = \"Defines whether items are selectable or not.\",\n  kulStyle = \"Custom style of the component.\",\n}\nexport interface KulListPropsInterface {\n  kulData?: KulDataDataset;\n  kulEmptyLabel?: string;\n  kulEnableDeletions?: boolean;\n  kulNavigation?: boolean;\n  kulRipple?: boolean;\n  kulSelectable?: boolean;\n  kulStyle?: string;\n}\n//#endregion\n","@import \"./styles/kul-list-main.scss\";\n@import \"./styles/kul-list-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  getAssetPath,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from \"@stencil/core\";\n\nimport {\n  KulListEvent,\n  KulListEventPayload,\n  KulListProps,\n} from \"./kul-list-declarations\";\nimport {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { KulLanguageGeneric } from \"../../managers/kul-language/kul-language-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject, KulDataCyAttributes } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-list\",\n  styleUrl: \"kul-list.scss\",\n  shadow: true,\n})\nexport class KulList {\n  /**\n   * References the root HTML element of the component (<kul-list>).\n   */\n  @Element() rootElement: HTMLKulListElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The focused list item.\n   * @default undefined\n   */\n  @State() focused: number;\n  /**\n   * The selected list items.\n   * @default undefined\n   */\n  @State() selected: number;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * The data of the list.\n   * @default []\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * Text displayed when the list is empty.\n   * @default \"\"\n   */\n  @Prop() kulEmptyLabel = \"\";\n  /**\n   * Defines whether items can be removed from the list or not.\n   * @default false\n   */\n  @Prop() kulEnableDeletions = false;\n  /**\n   * When true, enables items' navigation through arrow keys.\n   * @default true\n   */\n  @Prop() kulNavigation = true;\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * Defines whether items are selectable or not.\n   * @default true\n   */\n  @Prop() kulSelectable = true;\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n  #listItems: HTMLDivElement[] = [];\n  #rippleSurface: HTMLElement[] = [];\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-list-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulListEventPayload>;\n\n  onKulEvent(\n    e: Event | CustomEvent,\n    eventType: KulListEvent,\n    node?: KulDataNode,\n    index = 0,\n  ) {\n    switch (eventType) {\n      case \"blur\":\n        this.focused = null;\n        break;\n      case \"click\":\n        this.focused = index;\n        this.#handleSelection(index);\n        break;\n      case \"delete\":\n        if (index > -1) {\n          this.kulData.nodes.splice(index, 1);\n          this.refresh();\n        }\n        break;\n      case \"focus\":\n        this.focused = index;\n        break;\n      case \"pointerdown\":\n        if (this.kulRipple) {\n          this.#kulManager.theme.ripple.trigger(\n            e as PointerEvent,\n            this.#rippleSurface[index],\n          );\n        }\n        break;\n    }\n\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      node,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*                L i s t e n e r s                */\n  /*-------------------------------------------------*/\n\n  @Listen(\"keydown\")\n  listenKeydown(e: KeyboardEvent) {\n    if (this.kulNavigation) {\n      switch (e.key) {\n        case \"ArrowDown\":\n          e.preventDefault();\n          e.stopPropagation();\n          this.focusNext();\n          break;\n        case \"ArrowUp\":\n          e.preventDefault();\n          e.stopPropagation();\n          this.focusPrevious();\n          break;\n        case \"Enter\":\n          e.preventDefault();\n          e.stopPropagation();\n          this.#handleSelection(this.focused);\n          break;\n      }\n    }\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Focuses the next element of the list.\n   */\n  @Method()\n  async focusNext(): Promise<void> {\n    if (\n      isNaN(this.focused) ||\n      this.focused === null ||\n      this.focused === undefined\n    ) {\n      this.focused = this.selected;\n    } else {\n      this.focused++;\n    }\n    if (this.focused > this.#listItems.length - 1) {\n      this.focused = 0;\n    }\n    this.#listItems[this.focused].focus();\n  }\n  /**\n   * Focuses the previous element of the list.\n   */\n  @Method()\n  async focusPrevious(): Promise<void> {\n    if (\n      isNaN(this.focused) ||\n      this.focused === null ||\n      this.focused === undefined\n    ) {\n      this.focused = this.selected;\n    } else {\n      this.focused--;\n    }\n    if (this.focused < 0) {\n      this.focused = this.#listItems.length - 1;\n    }\n    this.#listItems[this.focused].focus();\n  }\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulListProps, descriptions);\n  }\n  /**\n   * Returns the selected node.\n   * @returns {Promise<KulListNode>} Selected node.\n   */\n  @Method()\n  async getSelected(): Promise<KulDataNode> {\n    return this.kulData.nodes[this.selected];\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Calls handleSelection private method to select the given item.\n   * @param {number} index - Zero-based index of the item that must be selected, when not provided the list will attempt to select the focused element.\n   */\n  @Method()\n  async selectNode(index?: number): Promise<void> {\n    if (index === undefined) {\n      index = this.focused;\n    }\n    this.#handleSelection(index);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #handleSelection(index: number): void {\n    if (\n      this.kulSelectable &&\n      index !== null &&\n      index !== undefined &&\n      !isNaN(index)\n    ) {\n      this.selected = index;\n    }\n  }\n\n  #prepDeleteIcon(node: KulDataNode) {\n    const path = getAssetPath(`./assets/svg/clear.svg`);\n    const style = {\n      mask: `url('${path}') no-repeat center`,\n      webkitMask: `url('${path}') no-repeat center`,\n    };\n    return (\n      <div\n        class=\"delete\"\n        data-cy={KulDataCyAttributes.BUTTON}\n        onClick={(e) => {\n          const index = this.kulData?.nodes?.indexOf(node);\n          this.onKulEvent(e, \"delete\", node, index);\n        }}\n      >\n        <div class=\"delete__icon\" key={node.id + \"_delete\"} style={style}></div>\n      </div>\n    );\n  }\n\n  #prepIcon(node: KulDataNode) {\n    const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n    const style = {\n      mask: `url('${path}') no-repeat center`,\n      webkitMask: `url('${path}') no-repeat center`,\n    };\n    return <div class=\"node__icon\" style={style}></div>;\n  }\n\n  #prepNode(node: KulDataNode, index: number) {\n    const isFocused =\n      this.focused === this.kulData.nodes.findIndex((n) => n.id === node.id);\n    const isSelected =\n      this.selected === this.kulData.nodes.findIndex((n) => n.id === node.id);\n    const className = {\n      node: true,\n      \"node--focused\": isFocused,\n      \"node--has-description\": !!node.description,\n      \"node--selected\": isSelected,\n    };\n    return (\n      <li class=\"list-item\">\n        {this.kulEnableDeletions ? this.#prepDeleteIcon(node) : null}\n        <div\n          aria-selected={isSelected}\n          aria-checked={isSelected}\n          class={className}\n          data-cy={KulDataCyAttributes.NODE}\n          data-index={index.toString()}\n          onBlur={(e) => this.onKulEvent(e, \"blur\", node, index)}\n          onClick={(e) => this.onKulEvent(e, \"click\", node, index)}\n          onFocus={(e) => this.onKulEvent(e, \"focus\", node, index)}\n          onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\", node, index)}\n          ref={(el) => {\n            if (el) {\n              this.#listItems.push(el);\n            }\n          }}\n          role={\"option\"}\n          tabindex={isSelected ? \"0\" : \"-1\"}\n        >\n          <div\n            ref={(el) => {\n              if (this.kulRipple && el) {\n                this.#rippleSurface.push(el);\n              }\n            }}\n          ></div>\n          {node.icon ? this.#prepIcon(node) : null}\n          <span class=\"node__text\">\n            {this.#prepTitle(node)}\n            {this.#prepSubtitle(node)}\n          </span>\n        </div>\n      </li>\n    );\n  }\n\n  #prepSubtitle(node: KulDataNode) {\n    return node.description ? (\n      <div class=\"node__subtitle\">{node.description}</div>\n    ) : undefined;\n  }\n\n  #prepTitle(node: KulDataNode) {\n    return String(node.value).valueOf() ? (\n      <div class=\"node__title\">{String(node.value).valueOf()}</div>\n    ) : undefined;\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    if (this.#rippleSurface?.length) {\n      this.#rippleSurface.forEach((el) => {\n        this.#kulManager.theme.ripple.setup(el);\n      });\n    }\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    const isEmpty = !!!this.kulData?.nodes?.length;\n    this.#listItems = [];\n    const className = {\n      list: true,\n      \"list--empty\": isEmpty,\n      \"list--selectable\": this.kulSelectable,\n    };\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          {isEmpty ? (\n            <div class=\"empty-data\">\n              <div class=\"empty-data__text\">\n                {this.kulEmptyLabel ||\n                  this.#kulManager.language.translate(\n                    KulLanguageGeneric.EMPTY_DATA,\n                  )}\n              </div>\n            </div>\n          ) : (\n            <ul\n              aria-multiselectable={\"false\"}\n              class={className}\n              role={\"listbox\"}\n            >\n              {this.kulData.nodes.map((item, index) =>\n                this.#prepNode(item, index),\n              )}\n            </ul>\n          )}\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n"],"version":3}