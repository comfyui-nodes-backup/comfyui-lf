{"file":"kul-spinner.entry.js","mappings":"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","names":[],"sources":["src/components/kul-spinner/kul-spinner-declarations.ts","src/components/kul-spinner/layouts/kul-spinner-layouts.tsx","src/components/kul-spinner/kul-spinner.scss?tag=kul-spinner&encapsulation=shadow","src/components/kul-spinner/kul-spinner.tsx"],"sourcesContent":["import { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulSpinnerEvent = \"ready\" | \"unmount\";\nexport interface KulSpinnerEventPayload\n  extends KulEventPayload<\"KulSpinner\", KulSpinnerEvent> {}\n//#endregion\n\n//#region Props\nexport enum KulSpinnerProps {\n  kulActive = \"Specifies if the spinner is animating.\",\n  kulBarVariant = \"Controls if the component displays as a bar or a spinner.\",\n  kulDimensions = \"Defines the width and height of the spinner. In the bar variant, it specifies only the height.\",\n  kulFader = \"Applies a blending modal over the component to darken or lighten the view, based on the theme.\",\n  kulFaderTimeout = \"Duration needed for the fader to become active.\",\n  kulFullScreen = \"Fills the entire viewport when enabled.\",\n  kulLayout = \"Selects the spinner layout.\",\n  kulStyle = \"Sets a custom style for the component.\",\n  kulTimeout = \"Duration for the progress bar to fill up (in milliseconds).\",\n}\nexport interface KulSpinnerPropsInterface {\n  kulActive: boolean;\n  kulBarVariant: boolean;\n  kulDimensions: string;\n  kulFader: boolean;\n  kulFaderTimeout: number;\n  kulFullScreen: boolean;\n  kulLayout: number;\n  kulStyle: string;\n  kulTimeout?: number;\n}\n//#endregion\n","import { h, VNode } from \"@stencil/core\";\n\n//#region Spinner configs\nexport const SPINNER_CONFIGS: {\n  [key: number]: { className: string; elements: () => VNode[] };\n} = {\n  7: {\n    className: \"spinner-v7\",\n    elements: () =>\n      Array(6)\n        .fill(0)\n        .map(() => <div class=\"sk-spinner-v7-dot\"></div>),\n  },\n  9: {\n    className: \"spinner-v9\",\n    elements: () => [\n      <div class=\"sk-spinner-v9-bounce1\"></div>,\n      <div class=\"sk-spinner-v9-bounce2\"></div>,\n    ],\n  },\n  10: {\n    className: \"spinner-v10\",\n    elements: () => [\n      <div class=\"sk-spinner-v10-cube1\"></div>,\n      <div class=\"sk-spinner-v10-cube2\"></div>,\n    ],\n  },\n  12: {\n    className: \"spinner-v12\",\n    elements: () => [\n      <div class=\"sk-spinner-v12-dot1\"></div>,\n      <div class=\"sk-spinner-v12-dot2\"></div>,\n    ],\n  },\n  13: {\n    className: \"spinner-v13\",\n    elements: () =>\n      Array(9)\n        .fill(0)\n        .map((_, i) => (\n          <div class={`sk-spinner-v13-cube sk-spinner-v13-cube${i + 1}`}></div>\n        )),\n  },\n  14: {\n    className: \"spinner-v14\",\n    elements: () =>\n      Array(12)\n        .fill(0)\n        .map((_, i) => (\n          <div\n            class={`sk-spinner-v14-circle${i + 1} sk-spinner-v14-circle`}\n          ></div>\n        )),\n  },\n};\n//#endregion\n\n//#region Bar configs\nexport const BAR_SPINNER_CONFIGS: {\n  [key: number]: {\n    className: string;\n    elements: (progress?: number) => VNode[];\n  };\n} = {\n  1: {\n    className: \"spinner-bar-v1\",\n    elements: () => [],\n  },\n  2: {\n    className: \"spinner-bar-v2\",\n    elements: () => [],\n  },\n  3: {\n    className: \"spinner-bar-v3\",\n    elements: (progress: number) => [\n      <div class=\"progress-bar\" style={{ width: `${progress}%` }}></div>,\n    ],\n  },\n};\n//#endregion\n","@import \"styles/kul-spinner-main.scss\";\n@import \"styles/kul-spinner-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport {\n  KulSpinnerEvent,\n  KulSpinnerEventPayload,\n  KulSpinnerProps,\n} from \"./kul-spinner-declarations\";\nimport {\n  BAR_SPINNER_CONFIGS,\n  SPINNER_CONFIGS,\n} from \"./layouts/kul-spinner-layouts\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-spinner\",\n  styleUrl: \"kul-spinner.scss\",\n  shadow: true,\n})\nexport class KulSpinner {\n  //#region Root\n  /**\n   * References the root HTML element of the component (<kul-spinner>).\n   */\n  @Element() rootElement: HTMLKulSpinnerElement;\n  //#endregion\n  //#region States\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * Progress percentage for the progress bar.\n   */\n  @State() kulProgress = 0;\n  //#endregion\n  //#region Props\n  /**\n   * Specifies if the spinner is animating.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulActive = false;\n  /**\n   * Controls if the component displays as a bar or a spinner.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulBarVariant = false;\n  /**\n   * Defines the width and height of the spinner. In the bar variant, it specifies only the height.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulDimensions = \"\";\n  /**\n   * Applies a blending modal over the component to darken or lighten the view, based on the theme.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulFader = false;\n  /**\n   * Duration needed for the fader to become active.\n   * @default 3500\n   */\n  @Prop({ mutable: true, reflect: true }) kulFaderTimeout = 3500;\n  /**\n   * Fills the entire viewport when enabled.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulFullScreen = false;\n  /**\n   * Selects the spinner layout.\n   * @default 1\n   */\n  @Prop({ mutable: true, reflect: true }) kulLayout = 1;\n  /**\n   * Sets a custom style for the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * Duration for the progress bar to fill up (in milliseconds).\n   * @default undefined\n   */\n  @Prop({ mutable: true, reflect: true }) kulTimeout: number;\n  //#endregion\n  //#region Internal variables\n  #kulManager = kulManagerInstance();\n  #progressAnimationFrame: number;\n  //#endregion\n  //#region Watchers\n  @Watch(\"kulTimeout\")\n  kulTimeoutChanged(newValue: number, oldValue: number) {\n    if (newValue !== oldValue && this.kulBarVariant) {\n      this.#startProgressBar();\n    }\n  }\n  @Watch(\"kulBarVariant\")\n  kulBarVariantChanged(newValue: boolean) {\n    if (newValue && this.kulTimeout) {\n      this.#startProgressBar();\n    } else {\n      this.kulProgress = 0;\n      cancelAnimationFrame(this.#progressAnimationFrame);\n    }\n  }\n  //#endregion\n  //#region Event\n  @Event({\n    eventName: \"kul-spinner-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulSpinnerEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulSpinnerEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      id: this.rootElement.id,\n      originalEvent: e,\n      eventType,\n    });\n  }\n  //#endregion\n  //#region Public methods\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulSpinnerProps, descriptions);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n  //#endregion\n  //#region Lifecycle hooks\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n\n    if (this.kulBarVariant && this.kulTimeout) {\n      this.#startProgressBar();\n    }\n  }\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n  componentDidUpdate() {\n    const root = this.rootElement.shadowRoot;\n    if (root) {\n      root\n        .querySelector(\"#loading-wrapper-master\")\n        .classList.remove(\"loading-wrapper-big-wait\");\n    }\n  }\n  componentDidRender() {\n    const root = this.rootElement.shadowRoot;\n\n    if (root) {\n      if (this.kulFader) {\n        setTimeout(() => {\n          root\n            .querySelector(\"#loading-wrapper-master\")\n            .classList.add(\"loading-wrapper-big-wait\");\n        }, this.kulFaderTimeout);\n      }\n    }\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    let masterClass = \"\";\n    let wrapperClass = \"\";\n    let spinnerClass = \"\";\n    let spinnerEl: VNode[] = [];\n    let elStyle = undefined;\n\n    if (this.kulBarVariant) {\n      wrapperClass = \"loading-wrapper-master-bar\";\n      const barConfig = BAR_SPINNER_CONFIGS[this.kulLayout];\n      if (barConfig) {\n        spinnerClass = barConfig.className;\n        spinnerEl = barConfig.elements(this.kulProgress);\n      } else {\n        spinnerClass = \"spinner-bar-v\" + this.kulLayout;\n      }\n    } else {\n      masterClass += \" spinner-version\";\n      wrapperClass = \"loading-wrapper-master-spinner\";\n\n      const config = SPINNER_CONFIGS[this.kulLayout];\n      if (config) {\n        spinnerClass = config.className;\n        spinnerEl = config.elements();\n      } else {\n        spinnerClass = \"spinner-v\" + this.kulLayout;\n      }\n    }\n\n    if (!this.kulFullScreen) {\n      elStyle = {\n        height: \"100%\",\n        width: \"100%\",\n      };\n    }\n\n    if (this.kulDimensions) {\n      elStyle = {\n        ...elStyle,\n        fontSize: this.kulDimensions,\n      };\n    } else if (!this.kulBarVariant) {\n      elStyle = {\n        ...elStyle,\n        fontSize: \"16px\",\n      };\n    } else {\n      elStyle = {\n        ...elStyle,\n        fontSize: \"3px\",\n      };\n    }\n\n    return (\n      <Host style={elStyle}>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID} style={elStyle}>\n          <div id=\"loading-wrapper-master\" class={masterClass} style={elStyle}>\n            <div id={wrapperClass} style={elStyle}>\n              <div class={spinnerClass}>{spinnerEl}</div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n    cancelAnimationFrame(this.#progressAnimationFrame);\n  }\n  //#region Private methods\n  #startProgressBar() {\n    this.kulProgress = 0;\n    const startTime = Date.now();\n    const duration = this.kulTimeout;\n\n    const updateProgress = () => {\n      const elapsed = Date.now() - startTime;\n      this.kulProgress = Math.min((elapsed / duration) * 100, 100);\n      if (this.kulProgress < 100) {\n        this.#progressAnimationFrame = requestAnimationFrame(updateProgress);\n      } else {\n        cancelAnimationFrame(this.#progressAnimationFrame);\n      }\n    };\n\n    this.#progressAnimationFrame = requestAnimationFrame(updateProgress);\n  }\n  //#endregion\n}\n"],"version":3}