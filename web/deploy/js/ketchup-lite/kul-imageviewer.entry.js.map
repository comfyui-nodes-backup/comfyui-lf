{"file":"kul-imageviewer.entry.js","mappings":"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","names":[],"sources":["src/components/kul-imageviewer/kul-imageviewer-declarations.ts","src/components/kul-imageviewer/helpers/kul-imageviewer-actions.tsx","src/components/kul-imageviewer/helpers/kul-imageviewer-components.tsx","src/components/kul-imageviewer/kul-imageviewer.scss?tag=kul-imageviewer&encapsulation=shadow","src/components/kul-imageviewer/kul-imageviewer.tsx"],"sourcesContent":["import { VNode } from '@stencil/core';\nimport {\n    KulDataCell,\n    KulDataDataset,\n    KulDataGenericCell,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulManager } from '../../managers/kul-manager/kul-manager';\nimport { KulEventPayload } from '../../types/GenericTypes';\nimport { KulImageviewer } from './kul-imageviewer';\nimport { KulMasonrySelectedShape } from '../kul-masonry/kul-masonry-declarations';\n\n//#region Adapter\nexport interface KulImageviewerAdapter {\n    actions: KulImageviewerAdapterActions;\n    components: KulImageviewerAdapterComponents;\n    get: KulImageviewerAdapterGetters;\n    set: KulImageviewerAdapterSetters;\n}\nexport interface KulImageviewerAdapterActions {\n    clearHistory: (\n        adapter: KulImageviewerAdapter,\n        index?: number\n    ) => Promise<void>;\n    clearSelection: (adapter: KulImageviewerAdapter) => Promise<void>;\n    delete: (adapter: KulImageviewerAdapter) => Promise<void>;\n    findImage: (\n        adapter: KulImageviewerAdapter\n    ) => Partial<KulDataCell<'image'>>;\n    load: (adapter: KulImageviewerAdapter) => Promise<void>;\n    redo: (adapter: KulImageviewerAdapter) => Promise<void>;\n    save: (adapter: KulImageviewerAdapter) => Promise<void>;\n    undo: (adapter: KulImageviewerAdapter) => Promise<void>;\n    updateValue: (shape: KulDataGenericCell, value: string) => void;\n}\nexport interface KulImageviewerAdapterComponents {\n    jsx: KulImageviewerAdapterJsx;\n    refs: KulImageviewerAdapterRefs;\n}\nexport interface KulImageviewerAdapterJsx {\n    clearHistory: (adapter: KulImageviewerAdapter) => VNode;\n    delete: (adapter: KulImageviewerAdapter) => VNode;\n    image: (adapter: KulImageviewerAdapter) => VNode;\n    load: (adapter: KulImageviewerAdapter) => VNode;\n    masonry: (adapter: KulImageviewerAdapter) => VNode;\n    redo: (adapter: KulImageviewerAdapter) => VNode;\n    save: (adapter: KulImageviewerAdapter) => VNode;\n    textfield: (adapter: KulImageviewerAdapter) => VNode;\n    tree: (adapter: KulImageviewerAdapter) => VNode;\n    undo: (adapter: KulImageviewerAdapter) => VNode;\n}\nexport interface KulImageviewerAdapterRefs {\n    clearHistory: HTMLKulButtonElement;\n    delete: HTMLKulButtonElement;\n    image: HTMLKulImageElement;\n    load: HTMLKulButtonElement;\n    masonry: HTMLKulMasonryElement;\n    redo: HTMLKulButtonElement;\n    save: HTMLKulButtonElement;\n    textfield: HTMLKulTextfieldElement;\n    tree: HTMLKulTreeElement;\n    undo: HTMLKulButtonElement;\n}\nexport interface KulImageviewerAdapterGetters {\n    imageviewer: () => KulImageviewer;\n    manager: () => KulManager;\n    state: {\n        currentShape: () => { shape: KulMasonrySelectedShape; value: string };\n        history: {\n            current: () => KulMasonrySelectedShape[];\n            currentSnapshot: () => {\n                shape: KulMasonrySelectedShape;\n                value: string;\n            };\n            full: () => KulImageviewerHistory;\n            index: () => number;\n        };\n    };\n}\nexport interface KulImageviewerAdapterSetters {\n    state: {\n        currentShape: (node: KulMasonrySelectedShape) => void;\n        history: {\n            clear: (index?: number) => void;\n            index: (index: number) => void;\n            new: (shape: KulMasonrySelectedShape, isSnapshot?: boolean) => void;\n        };\n    };\n}\n//#endregion\n//#region Events\nexport type KulImageviewerEvent = 'kul-event' | 'ready' | 'unmount';\nexport interface KulImageviewerEventPayload\n    extends KulEventPayload<'KulImageviewer', KulImageviewerEvent> {}\n//#endregion\n//#region State\nexport type KulImageviewerHistory = {\n    [index: number]: Array<KulMasonrySelectedShape>;\n};\n//#endregion\n//#region Props\nexport enum KulImageviewerProps {\n    kulData = 'Actual data of the image viewer.',\n    kulLoadCallback = 'Callback invoked when the load button is clicked.',\n    kulStyle = 'Sets a custom CSS style for the component.',\n    kulValue = 'Configuration parameters of the detail view.',\n}\nexport interface KulImageviewerPropsInterface {\n    kulData?: KulDataDataset;\n    kulLoadCallback?: KulImageviewerLoadCallback;\n    kulStyle?: string;\n    kulValue?: KulDataDataset;\n}\nexport type KulImageviewerLoadCallback = (\n    imageviewer: KulImageviewer,\n    dir: string\n) => Promise<void>;\n//#endregion\n","import { KulDataCell } from '../../../managers/kul-data/kul-data-declarations';\nimport { KulImageviewerAdapterActions } from '../kul-imageviewer-declarations';\n\nexport const ACTIONS: KulImageviewerAdapterActions = {\n    async clearHistory(adapter, index = null) {\n        const history = adapter.set.state.history;\n\n        if (index === null) {\n            history.clear();\n            adapter.actions.clearSelection(adapter);\n        } else {\n            history.clear(index);\n        }\n    },\n    async clearSelection(adapter) {\n        const stateSetter = adapter.set.state;\n\n        stateSetter.currentShape({});\n        stateSetter.history.index(null);\n        adapter.components.refs.masonry.setSelectedShape(null);\n    },\n    async delete(adapter) {\n        const getters = adapter.get;\n\n        const imageviewer = getters.imageviewer();\n        const dataset = getters.imageviewer().kulData;\n        const manager = getters.manager();\n\n        const currentSelectedShape = getters.state.currentShape();\n        await adapter.actions.clearHistory(\n            adapter,\n            currentSelectedShape.shape.index\n        );\n\n        const cell = adapter.actions.findImage(adapter);\n        const node = manager.data.node.findNodeByCell(dataset, cell);\n        manager.data.node.pop(dataset.nodes, node);\n        imageviewer.kulData = { ...dataset };\n\n        await adapter.actions.clearSelection(adapter);\n    },\n    findImage(adapter) {\n        const imageviewer = adapter.get.imageviewer();\n        const manager = adapter.get.manager();\n\n        const currentSelectedShape = adapter.get.state.currentShape();\n        const cells = manager.data.cell.shapes.getAll(\n            imageviewer.kulData,\n            false\n        );\n\n        return cells['image'].find(\n            (c) =>\n                c.value === currentSelectedShape.value ||\n                c.kulValue === currentSelectedShape.value\n        );\n    },\n    async load(adapter) {\n        const imageviewer = adapter.get.imageviewer();\n        const refs = adapter.components.refs;\n        const textfield = refs.textfield;\n\n        try {\n            await imageviewer.kulLoadCallback(\n                imageviewer,\n                await textfield.getValue()\n            );\n            adapter.actions.clearHistory(adapter);\n        } catch (error) {\n            console.error('Load operation failed:', error);\n        }\n    },\n    async redo(adapter) {\n        const currentHistory = adapter.get.state.history.current();\n        const index = adapter.get.state.history.index();\n        if (currentHistory && index < currentHistory.length - 1) {\n            adapter.set.state.history.index(index + 1);\n        }\n    },\n    async save(adapter) {\n        const currentSelectedShape = adapter.get.state.currentShape();\n        if (!currentSelectedShape) {\n            return;\n        }\n        const imageviewer = adapter.get.imageviewer();\n        const index = currentSelectedShape.shape.index;\n        const shape = currentSelectedShape.shape.shape;\n\n        const currentSnapshot = adapter.get.state.history.currentSnapshot();\n        const value = currentSnapshot.value;\n\n        const cell = adapter.actions.findImage(adapter);\n        cell.value = value;\n        cell.kulValue = value;\n\n        adapter.actions.updateValue(shape, value);\n        await adapter.actions.clearHistory(adapter, index);\n\n        imageviewer.kulData = { ...imageviewer.kulData };\n    },\n    async undo(adapter) {\n        const index = adapter.get.state.history.index();\n        if (index > 0) {\n            const newIndex = index - 1;\n            adapter.set.state.history.index(newIndex);\n        }\n    },\n    updateValue(shape, value) {\n        const s = shape as Partial<KulDataCell<'image'>>;\n        shape.value = value;\n        if (s.kulValue) {\n            s.kulValue = value;\n        }\n    },\n};\n","import { h } from '@stencil/core';\nimport {\n    KulImageviewerAdapter,\n    KulImageviewerAdapterComponents,\n} from '../kul-imageviewer-declarations';\nimport { KulTreeEventPayload } from '../../kul-tree/kul-tree-declarations';\nimport { KulButtonEventPayload } from '../../kul-button/kul-button-declarations';\nimport { KulMasonryEventPayload } from '../../kul-masonry/kul-masonry-declarations';\nimport { KulTextfieldEventPayload } from '../../kul-textfield/kul-textfield-declarations';\nimport { KulImageEventPayload } from '../../kul-image/kul-image-declarations';\nimport {\n    KulDataCyAttributes,\n    KulGenericEvent,\n} from '../../../types/GenericTypes';\n\nexport const COMPONENTS: KulImageviewerAdapterComponents = {\n    jsx: {\n        clearHistory: (adapter) => prepClearHistory(adapter),\n        delete: (adapter) => prepDelete(adapter),\n        image: (adapter) => prepImage(adapter),\n        load: (adapter) => prepLoad(adapter),\n        masonry: (adapter) => prepMasonry(adapter),\n        redo: (adapter) => prepRedo(adapter),\n        save: (adapter) => prepSave(adapter),\n        textfield: (adapter) => prepTextfield(adapter),\n        tree: (adapter) => prepTree(adapter),\n        undo: (adapter) => prepUndo(adapter),\n    },\n    refs: {\n        clearHistory: null,\n        delete: null,\n        image: null,\n        load: null,\n        masonry: null,\n        redo: null,\n        save: null,\n        textfield: null,\n        tree: null,\n        undo: null,\n    },\n};\n\n// #region Clear history\nconst prepClearHistory = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__clear-history': true,\n        'kul-danger': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                const index = adapter.get.state.currentShape().shape.index;\n                await adapter.actions.clearHistory(adapter, index);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    const hasHistory = !!(adapter.get.state.history.current()?.length > 1);\n    const isDisabled = !hasHistory;\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulDisabled={isDisabled}\n            kulIcon=\"layers_clear\"\n            kulLabel=\"Clear history\"\n            kulStyling=\"flat\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.clearHistory = el;\n                }\n            }}\n        >\n            <kul-spinner\n                kulActive={true}\n                kulDimensions=\"2px\"\n                kulLayout={1}\n                slot=\"spinner\"\n            ></kul-spinner>\n        </kul-button>\n    );\n};\n// #endregion\n// #region Delete\nconst prepDelete = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__delete': true,\n        'kul-danger': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                await adapter.actions.delete(adapter);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulIcon=\"delete-empty\"\n            kulLabel=\"Delete image\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.delete = el;\n                }\n            }}\n        >\n            <kul-spinner\n                kulActive={true}\n                kulDimensions=\"2px\"\n                kulLayout={1}\n                slot=\"spinner\"\n            ></kul-spinner>\n        </kul-button>\n    );\n};\n// #endregion\n// #region Image\nconst prepImage = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__image': true,\n        'kul-fit': true,\n    };\n    const eventHandler = (e: CustomEvent<KulImageEventPayload>) => {\n        imageviewer.onKulEvent(e, 'kul-event');\n    };\n\n    const currentSnapshot = adapter.get.state.history.currentSnapshot();\n    if (!currentSnapshot) {\n        return;\n    }\n\n    return (\n        <kul-image\n            class={className}\n            kulValue={currentSnapshot.value}\n            onKul-image-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.image = el;\n                }\n            }}\n        ></kul-image>\n    );\n};\n// #endregion\n// #region Load\nconst prepLoad = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'navigation-grid__button': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                await adapter.actions.load(adapter);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulIcon=\"find_replace\"\n            kulLabel=\"Load\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.load = el;\n                }\n            }}\n        >\n            <kul-spinner\n                kulActive={true}\n                kulDimensions=\"2px\"\n                kulLayout={1}\n                slot=\"spinner\"\n            ></kul-spinner>\n        </kul-button>\n    );\n};\n// #endregion\n// #region Masonry\nconst prepMasonry = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'navigation-grid__masonry': true,\n    };\n    const eventHandler = (e: CustomEvent<KulMasonryEventPayload>) => {\n        const { eventType, originalEvent, selectedShape } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'kul-event':\n                const orig = originalEvent as KulGenericEvent;\n                switch (orig.detail.eventType) {\n                    case 'click':\n                        const currentShape = adapter.get.state.currentShape();\n                        if (\n                            currentShape?.shape?.index === selectedShape.index\n                        ) {\n                            adapter.actions.clearSelection(adapter);\n                        } else {\n                            adapter.set.state.currentShape(selectedShape);\n\n                            const currentHistory =\n                                adapter.get.state.history.current();\n                            adapter.set.state.history.index(\n                                currentHistory ? currentHistory.length - 1 : 0\n                            );\n                            adapter.set.state.history.new(selectedShape);\n                        }\n                        break;\n                }\n        }\n    };\n\n    return (\n        <kul-masonry\n            class={className}\n            kulData={imageviewer.kulData}\n            kulSelectable={true}\n            onKul-masonry-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.masonry = el;\n                }\n            }}\n        ></kul-masonry>\n    );\n};\n// #endregion\n// #region Redo\nconst prepRedo = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__redo': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                await adapter.actions.redo(adapter);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    const currentHistory = adapter.get.state.history.current();\n    const index = adapter.get.state.history.index();\n    const hasHistory = !!currentHistory?.length;\n    const isDisabled = !(hasHistory && index < currentHistory.length - 1);\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulDisabled={isDisabled}\n            kulIcon=\"redo\"\n            kulLabel=\"Redo\"\n            kulStyling=\"flat\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.redo = el;\n                }\n            }}\n        ></kul-button>\n    );\n};\n// #endregion\n// #region Save\nconst prepSave = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__commit-changes': true,\n        'kul-success': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                await adapter.actions.save(adapter);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    const hasHistory = !!(adapter.get.state.history.current()?.length > 1);\n    const isDisabled = !hasHistory;\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulDisabled={isDisabled}\n            kulIcon=\"save\"\n            kulLabel=\"Save snapshot\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.save = el;\n                }\n            }}\n        >\n            <kul-spinner\n                kulActive={true}\n                kulDimensions=\"2px\"\n                kulLayout={1}\n                slot=\"spinner\"\n            ></kul-spinner>\n        </kul-button>\n    );\n};\n// #endregion\n// #region Textfield\nconst prepTextfield = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'navigation-grid__textfield': true,\n    };\n    const eventHandler = (e: CustomEvent<KulTextfieldEventPayload>) => {\n        imageviewer.onKulEvent(e, 'kul-event');\n    };\n\n    return (\n        <kul-textfield\n            class={className}\n            kulIcon=\"folder\"\n            kulLabel=\"Directory\"\n            kulStyling=\"flat\"\n            onKul-textfield-event-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.textfield = el;\n                }\n            }}\n        ></kul-textfield>\n    );\n};\n// #endregion\n// #region Tree\nconst prepTree = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__tree': true,\n    };\n    const eventHandler = (e: CustomEvent<KulTreeEventPayload>) => {\n        imageviewer.onKulEvent(e, 'kul-event');\n    };\n\n    return (\n        <kul-tree\n            class={className}\n            data-cy={KulDataCyAttributes.INPUT}\n            kulAccordionLayout={true}\n            kulData={imageviewer.kulValue}\n            kulSelectable={true}\n            onKul-tree-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.tree = el;\n                }\n            }}\n        ></kul-tree>\n    );\n};\n// #endregion\n// #region Undo\nconst prepUndo = (adapter: KulImageviewerAdapter) => {\n    const imageviewer = adapter.get.imageviewer();\n    const className = {\n        'details-grid__undo': true,\n        'kul-full-width': true,\n    };\n    const eventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n        const { comp, eventType } = e.detail;\n        imageviewer.onKulEvent(e, 'kul-event');\n\n        switch (eventType) {\n            case 'click':\n                requestAnimationFrame(() => (comp.kulShowSpinner = true));\n                await adapter.actions.undo(adapter);\n                requestAnimationFrame(() => (comp.kulShowSpinner = false));\n                break;\n        }\n    };\n\n    const currentHistory = adapter.get.state.history.current();\n    const index = adapter.get.state.history.index();\n    const hasHistory = !!currentHistory?.length;\n    const isDisabled = !(hasHistory && index > 0);\n\n    return (\n        <kul-button\n            class={className}\n            data-cy={KulDataCyAttributes.BUTTON}\n            kulDisabled={isDisabled}\n            kulIcon=\"undo\"\n            kulLabel=\"Undo\"\n            kulStyling=\"flat\"\n            onKul-button-event={eventHandler}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.refs.undo = el;\n                }\n            }}\n        ></kul-button>\n    );\n};\n// #endregion\n","@import './styles/kul-imageviewer-main.scss';\n@import './styles/kul-imageviewer-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport { type GenericObject } from '../../types/GenericTypes';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport {\n    KulDataCell,\n    KulDataDataset,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport {\n    KulImageviewerAdapter,\n    KulImageviewerAdapterRefs,\n    KulImageviewerEvent,\n    KulImageviewerEventPayload,\n    KulImageviewerHistory,\n    KulImageviewerLoadCallback,\n    KulImageviewerProps,\n} from './kul-imageviewer-declarations';\nimport { ACTIONS } from './helpers/kul-imageviewer-actions';\nimport { COMPONENTS } from './helpers/kul-imageviewer-components';\nimport { KulMasonrySelectedShape } from '../kul-masonry/kul-masonry-declarations';\n\n@Component({\n    tag: 'kul-imageviewer',\n    styleUrl: 'kul-imageviewer.scss',\n    shadow: true,\n})\nexport class KulImageviewer {\n    /**\n     * References the root HTML element of the component (<kul-imageviewer>).\n     */\n    @Element() rootElement: HTMLKulImageviewerElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Currently selected image.\n     */\n    @State() currentShape: KulMasonrySelectedShape = {};\n    /**\n     * The history index of the image displayed in the preview.\n     */\n    @State() historyIndex = null;\n    /**\n     * Currently selected image.\n     */\n    @State() history: KulImageviewerHistory = {};\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * Actual data of the image viewer.\n     * @default {}\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = {};\n    /**\n     * Callback invoked when the load button is clicked.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulLoadCallback: KulImageviewerLoadCallback = null;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulStyle = '';\n    /**\n     * Configuration parameters of the detail view.\n     * @default {}\n     */\n    @Prop({ mutable: true }) kulValue: KulDataDataset = {};\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n    #stringify = this.#kulManager.data.cell.stringify;\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes event emitted.\n     */\n    @Event({\n        eventName: 'kul-imageviewer-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulImageviewerEventPayload>;\n\n    onKulEvent(e: Event | CustomEvent, eventType: KulImageviewerEvent) {\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Appends a new snapshot to the current shape's history by duplicating it with an updated value.\n     * It has no effect when the current shape is not set.\n     */\n    @Method()\n    async addSnapshot(value: string): Promise<void> {\n        if (!this.currentShape || !Object.keys(this.currentShape)?.length) {\n            return;\n        }\n        const newShape: KulMasonrySelectedShape = JSON.parse(\n            JSON.stringify(this.currentShape)\n        );\n        this.#adapter.actions.updateValue(newShape.shape, value);\n        this.#adapter.set.state.history.new(newShape, true);\n    }\n    /**\n     * Clears the history related to the shape identified by the index.\n     * When index is not provided, it clear the full history.\n     */\n    @Method()\n    async clearHistory(index: number = null): Promise<void> {\n        await this.#adapter.actions.clearHistory(this.#adapter, index);\n    }\n    /**\n     * Clears the currently selected shape.\n     */\n    @Method()\n    async clearSelection(): Promise<void> {\n        await this.#adapter.actions.clearSelection(this.#adapter);\n    }\n    /**\n     * This method is used to retrieve the references to the subcomponents.\n     */\n    @Method()\n    async getComponents(): Promise<KulImageviewerAdapterRefs> {\n        return this.#adapter.components.refs;\n    }\n    /**\n     * Fetches the current snapshot.\n     * @returns {Promise<{shape: KulMasonrySelectedShape; value: string;}>} A promise that resolves with the current snapshot's object.\n     */\n    @Method()\n    async getCurrentSnapshot(): Promise<{\n        shape: KulMasonrySelectedShape;\n        value: string;\n    }> {\n        return this.#adapter.get.state.history.currentSnapshot();\n    }\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's properties and descriptions.\n     * @param {boolean} descriptions - When true, includes descriptions for each property.\n     * @returns {Promise<GenericObject>} Promise resolved with an object containing the component's properties.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulImageviewerProps, descriptions);\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Clears the full history and clears the current selection.\n     */\n    @Method()\n    async reset(): Promise<void> {\n        await this.#adapter.actions.clearHistory(this.#adapter);\n        await this.#adapter.actions.clearSelection(this.#adapter);\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #adapter: KulImageviewerAdapter = {\n        actions: ACTIONS,\n        components: COMPONENTS,\n        get: {\n            imageviewer: () => this,\n            manager: () => this.#kulManager,\n            state: {\n                currentShape: () =>\n                    this.#getSelectedShapeValue(this.currentShape),\n                history: {\n                    current: () => this.history[this.currentShape.index],\n                    currentSnapshot: () => {\n                        if (this.historyIndex === null) {\n                            return;\n                        }\n\n                        const snapshot =\n                            this.history[this.currentShape.index][\n                                this.historyIndex\n                            ];\n\n                        return this.#getSelectedShapeValue(snapshot);\n                    },\n                    full: () => this.history,\n                    index: () => this.historyIndex,\n                },\n            },\n        },\n        set: {\n            state: {\n                currentShape: (node) => (this.currentShape = node),\n                history: {\n                    clear: (index = null) => {\n                        if (index !== null) {\n                            this.history[index] = [this.history[index][0]];\n                            if (this.historyIndex === 0) {\n                                this.refresh();\n                            } else {\n                                this.historyIndex = 0;\n                            }\n                        } else {\n                            this.history = {};\n                            this.historyIndex = null;\n                        }\n                    },\n                    index: (index) => (this.historyIndex = index),\n                    new: (selectedShape, isSnapshot = false) => {\n                        const historyByIndex =\n                            this.history?.[selectedShape.index] || [];\n\n                        if (this.historyIndex < historyByIndex.length - 1) {\n                            historyByIndex.splice(this.historyIndex + 1);\n                        }\n\n                        if (historyByIndex?.length && !isSnapshot) {\n                            historyByIndex[0] = selectedShape;\n                            return;\n                        }\n\n                        historyByIndex.push(selectedShape);\n                        this.history[selectedShape.index] = historyByIndex;\n                        this.historyIndex = historyByIndex.length - 1;\n                    },\n                },\n            },\n        },\n    };\n\n    #getSelectedShapeValue(selectedShape: KulMasonrySelectedShape) {\n        if (selectedShape.index !== undefined) {\n            const value =\n                selectedShape.shape.value ||\n                (selectedShape.shape as Partial<KulDataCell<'image'>>).kulValue;\n            return {\n                shape: selectedShape,\n                value: this.#stringify(value),\n            };\n        }\n    }\n\n    #prepDetails(): VNode {\n        const jsx = this.#adapter.components.jsx;\n        return (\n            <div class=\"details-grid\">\n                {jsx.image(this.#adapter)}\n                <div class=\"details-grid__actions\">\n                    {jsx.delete(this.#adapter)}\n                    {jsx.clearHistory(this.#adapter)}\n                    {jsx.undo(this.#adapter)}\n                    {jsx.redo(this.#adapter)}\n                    {jsx.save(this.#adapter)}\n                </div>\n                {jsx.tree(this.#adapter)}\n                <div class=\"details-grid__settings\">\n                    <slot name=\"settings\"></slot>\n                </div>\n            </div>\n        );\n    }\n\n    #prepImageviewer(): VNode {\n        const className = {\n            'main-grid': true,\n            'main-grid--has-selection':\n                !!this.#adapter.get.state.currentShape(),\n        };\n\n        return (\n            <div class={className}>\n                {this.#prepNavigation()}\n                {this.#prepDetails()}\n            </div>\n        );\n    }\n\n    #prepNavigation(): VNode {\n        return (\n            <div class=\"navigation-grid\">\n                {this.#adapter.components.jsx.textfield(this.#adapter)}\n                {this.#adapter.components.jsx.load(this.#adapter)}\n                {this.#adapter.components.jsx.masonry(this.#adapter)}\n            </div>\n        );\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class=\"imageviewer\">{this.#prepImageviewer()}</div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n}\n"],"version":3}