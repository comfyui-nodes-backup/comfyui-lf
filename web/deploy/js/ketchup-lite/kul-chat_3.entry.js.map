{"file":"kul-chat.kul-chip.kul-tabbar.entry.js","mappings":"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","names":[],"sources":["src/components/kul-chat/kul-chat-declarations.ts","src/components/kul-chat/settings/kul-chat-settings.tsx","src/components/kul-chat/chat/kul-chat-input.tsx","src/components/kul-chat/chat/kul-chat-messages.tsx","src/components/kul-chat/chat/kul-chat-chat.tsx","src/components/kul-chat/kul-chat.scss?tag=kul-chat&encapsulation=shadow","src/components/kul-chat/kul-chat.tsx","src/components/kul-chip/kul-chip-declarations.ts","src/components/kul-chip/kul-chip.scss?tag=kul-chip&encapsulation=shadow","src/components/kul-chip/kul-chip.tsx","src/components/kul-tabbar/kul-tabbar-declarations.ts","src/components/kul-tabbar/kul-tabbar.scss?tag=kul-tabbar&encapsulation=shadow","src/components/kul-tabbar/kul-tabbar.tsx"],"sourcesContent":["import { KulEventPayload } from '../../types/GenericTypes';\nimport { KulLLMChoiceMessage } from '../../managers/kul-llm/kul-llm-declarations';\nimport { KulManager } from '../../managers/kul-manager/kul-manager';\n\n/*-------------------------------------------------*/\n/*                  A d a p t e r                  */\n/*-------------------------------------------------*/\nexport interface KulChatAdapter {\n    actions: {\n        delete: (message: KulLLMChoiceMessage) => void;\n        disableInteractivity: (shouldDisable: boolean) => void;\n        regenerate: (message: KulLLMChoiceMessage) => void;\n        send: () => void;\n        stt: () => void;\n        updateTokenCount: () => Promise<void>;\n    };\n    components: {\n        buttons: {\n            clear: HTMLKulButtonElement;\n            send: HTMLKulButtonElement;\n            settings: HTMLKulButtonElement;\n            stt: HTMLKulButtonElement;\n        };\n        progressbar: HTMLKulProgressbarElement;\n        spinner: HTMLKulSpinnerElement;\n        textareas: {\n            prompt: HTMLKulTextfieldElement;\n            system: HTMLKulTextfieldElement;\n        };\n    };\n    emit: { event: (eventType: KulChatEvent, e?: Event) => void };\n    get: {\n        history: () => KulChatHistory;\n        manager: () => KulManager;\n        props: {\n            contextWindow: () => number;\n            endpointUrl: () => string;\n            maxTokens: () => number;\n            pollingInterval: () => number;\n            system: () => string;\n            temperature: () => number;\n        };\n        status: {\n            connection: (status: KulChatStatus) => void;\n            toolbarMessage: () => KulLLMChoiceMessage;\n            view: () => KulChatView;\n        };\n    };\n    set: {\n        props: {\n            contextWindow: (value: number) => void;\n            endpointUrl: (value: string) => void;\n            maxTokens: (value: number) => void;\n            pollingInterval: (value: number) => void;\n            system: (value: string) => void;\n            temperature: (value: number) => void;\n        };\n        status: {\n            connection: (status: KulChatStatus) => void;\n            toolbarMessage: (message: KulLLMChoiceMessage) => void;\n            view: (view: KulChatView) => void;\n        };\n    };\n}\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulChatEvent =\n    | 'config'\n    | 'polling'\n    | 'ready'\n    | 'unmount'\n    | 'update';\nexport interface KulChatEventPayload\n    extends KulEventPayload<'KulChat', KulChatEvent> {\n    history: string;\n    status: KulChatStatus;\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulChatProps {\n    kulContextWindow = 'How many tokens the context window can handle, used to calculate the occupied space.',\n    kulEndpointUrl = 'URL of the endpoint where the LLM is hosted.',\n    kulLayout = 'Sets the layout of the chat.',\n    kulMaxTokens = \"Maximum number of tokens allowed in the LLM's answer.\",\n    kulPollingInterval = 'How often the component checks whether the LLM endpoint is online or not.',\n    kulSeed = \"Seed value for the LLM's answer generation.\",\n    kulStyle = 'Custom style of the component.',\n    kulSystem = 'System message for the LLM.',\n    kulTemperature = 'Sets the creative boundaries of the LLM.',\n    kulValue = 'Initial history of the chat.',\n}\nexport interface KulChatPropsInterface {\n    kulContextWindow?: number;\n    kulEndpointUrl?: string;\n    kulLayout?: KulChatLayout;\n    kulMaxTokens?: number;\n    kulPollingInterval?: number;\n    kulSeed?: number;\n    kulStyle?: string;\n    kulSystem?: string;\n    kulTemperature?: number;\n    kulValue?: KulChatHistory;\n}\nexport type KulChatLayout = 'bottom-textarea' | 'top-textarea';\n/*-------------------------------------------------*/\n/*                    S t a t e                    */\n/*-------------------------------------------------*/\nexport type KulChatHistory = KulLLMChoiceMessage[];\nexport type KulChatStatus = 'connecting' | 'offline' | 'ready';\nexport type KulChatView = 'chat' | 'settings';\n","import { Fragment, h } from '@stencil/core';\nimport { KulChatAdapter } from '../kul-chat-declarations';\nimport { KulButtonEventPayload } from '../../kul-button/kul-button-declarations';\nimport { KulTextfieldEventPayload } from '../../kul-textfield/kul-textfield-declarations';\n\nexport const OPTIONS_IDS = {\n    contextWindow: 'context-option',\n    endpointUrl: 'endpoint-option',\n    maxTokens: 'maxtokens-option',\n    polling: 'polling-option',\n    system: 'system-option',\n    temperature: 'temperature-option',\n};\n\nexport const prepSettings = (adapter: KulChatAdapter) => {\n    return (\n        <Fragment>\n            {prepButton(adapter)}\n            <div class=\"settings__options\">{prepFields(adapter)}</div>\n            <kul-textfield\n                id={OPTIONS_IDS.system}\n                class=\"settings__system kul-full-height\"\n                kulLabel=\"System prompt\"\n                kulStyling=\"textarea\"\n                kulValue={adapter.get.props.system()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.textareas.system = el;\n                    }\n                }}\n            ></kul-textfield>\n        </Fragment>\n    );\n};\n\nconst prepButton = (adapter: KulChatAdapter) => {\n    return (\n        <kul-button\n            class=\"kul-full-width\"\n            kulIcon=\"arrow_back\"\n            kulLabel=\"Back\"\n            onKul-button-event={backEventHandler.bind(\n                backEventHandler,\n                adapter\n            )}\n        ></kul-button>\n    );\n};\n\nconst prepFields = (adapter: KulChatAdapter) => {\n    return (\n        <Fragment>\n            <kul-textfield\n                id={OPTIONS_IDS.contextWindow}\n                kulHtmlAttributes={{\n                    min: 10,\n                    step: 100,\n                    type: 'number',\n                }}\n                kulIcon=\"data_usage\"\n                kulLabel=\"Context window length\"\n                kulValue={String(adapter.get.props.contextWindow()).valueOf()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n            ></kul-textfield>\n            <kul-textfield\n                id={OPTIONS_IDS.temperature}\n                kulHtmlAttributes={{\n                    min: 0,\n                    step: 0.1,\n                    type: 'number',\n                }}\n                kulIcon=\"thermometer\"\n                kulLabel=\"Temperature\"\n                kulValue={String(adapter.get.props.temperature()).valueOf()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n            ></kul-textfield>\n            <kul-textfield\n                id={OPTIONS_IDS.endpointUrl}\n                kulIcon=\"http\"\n                kulLabel=\"Endpoint URL\"\n                kulValue={adapter.get.props.endpointUrl()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n            ></kul-textfield>\n            <kul-textfield\n                id={OPTIONS_IDS.maxTokens}\n                kulHtmlAttributes={{\n                    min: 10,\n                    step: 100,\n                    type: 'number',\n                }}\n                kulIcon=\"plus_one\"\n                kulLabel=\"Max tokens count\"\n                kulValue={String(adapter.get.props.maxTokens()).valueOf()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n            ></kul-textfield>\n            <kul-textfield\n                id={OPTIONS_IDS.polling}\n                kulHtmlAttributes={{\n                    min: 10,\n                    step: 10,\n                    type: 'number',\n                }}\n                kulIcon=\"timer\"\n                kulLabel=\"Polling interval\"\n                kulValue={String(adapter.get.props.pollingInterval()).valueOf()}\n                onKul-textfield-event={textfieldEventHandler.bind(\n                    textfieldEventHandler,\n                    adapter\n                )}\n            ></kul-textfield>\n        </Fragment>\n    );\n};\n\nconst backEventHandler = (\n    adapter: KulChatAdapter,\n    e: CustomEvent<KulButtonEventPayload>\n) => {\n    const { eventType } = e.detail;\n\n    switch (eventType) {\n        case 'click':\n            adapter.emit.event('config');\n            adapter.set.status.view('chat');\n            break;\n    }\n};\n\nconst textfieldEventHandler = (\n    adapter: KulChatAdapter,\n    e: CustomEvent<KulTextfieldEventPayload>\n) => {\n    const { eventType, id, value } = e.detail;\n\n    switch (eventType) {\n        case 'change':\n            switch (id) {\n                case OPTIONS_IDS.contextWindow:\n                    adapter.set.props.contextWindow(parseInt(value));\n                    break;\n                case OPTIONS_IDS.endpointUrl:\n                    adapter.set.props.endpointUrl(value);\n                    break;\n                case OPTIONS_IDS.maxTokens:\n                    adapter.set.props.maxTokens(parseInt(value));\n                    break;\n                case OPTIONS_IDS.polling:\n                    adapter.set.props.pollingInterval(parseInt(value));\n                    break;\n                case OPTIONS_IDS.system:\n                    adapter.set.props.system(value);\n                    break;\n                case OPTIONS_IDS.temperature:\n                    adapter.set.props.temperature(parseFloat(value));\n                    break;\n            }\n            break;\n    }\n};\n","import { h } from '@stencil/core';\nimport { KulChatAdapter } from '../kul-chat-declarations';\nimport { KulButtonEventPayload } from '../../kul-button/kul-button-declarations';\nimport { KulProgressbarEventPayload } from '../../kul-progressbar/kul-progressbar-declarations';\n\nexport const prepInputArea = (adapter: KulChatAdapter) => {\n    return (\n        <div class=\"chat__request__input\">\n            <kul-button\n                class=\"chat__request__input__button kul-full-height\"\n                id=\"settings-button\"\n                kulIcon=\"settings\"\n                kulStyling=\"flat\"\n                onKul-button-event={buttonEventHandler.bind(\n                    buttonEventHandler,\n                    adapter\n                )}\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.buttons.settings = el;\n                    }\n                }}\n            ></kul-button>\n            <kul-textfield\n                class=\"chat__request__input__textarea\"\n                kulFullWidth={true}\n                kulLabel=\"What's on your mind?\"\n                kulStyling=\"textarea\"\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.textareas.prompt = el;\n                    }\n                }}\n            ></kul-textfield>\n            {prepProgressBar(adapter)}\n        </div>\n    );\n};\n\nexport const prepButtons = (adapter: KulChatAdapter) => {\n    return (\n        <div class=\"chat__request__buttons\">\n            <kul-button\n                id=\"clear-button\"\n                kulLabel=\"Clear\"\n                kulStyling={'flat'}\n                onKul-button-event={buttonEventHandler.bind(\n                    buttonEventHandler,\n                    adapter\n                )}\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.buttons.clear = el;\n                    }\n                }}\n                title=\"Clear the textarea.\"\n            ></kul-button>\n            <kul-button\n                id=\"stt-button\"\n                class=\"chat__request__buttons__stt\"\n                kulIcon=\"keyboard_voice\"\n                kulStyling={'icon'}\n                onKul-button-event={buttonEventHandler.bind(\n                    buttonEventHandler,\n                    adapter\n                )}\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.buttons.stt = el;\n                    }\n                }}\n                title=\"Activate Speech To Text with your browser's API (if supported).\"\n            >\n                <kul-spinner\n                    kulActive={true}\n                    kulDimensions=\"0.6em\"\n                    kulLayout={6}\n                    slot=\"spinner\"\n                ></kul-spinner>\n            </kul-button>\n            <kul-button\n                id=\"send-button\"\n                kulIcon=\"check\"\n                kulLabel=\"Send\"\n                onKul-button-event={buttonEventHandler.bind(\n                    buttonEventHandler,\n                    adapter\n                )}\n                ref={(el) => {\n                    if (el) {\n                        adapter.components.buttons.send = el;\n                    }\n                }}\n                title=\"Send your prompt (CTRL+Enter).\"\n            >\n                <kul-spinner\n                    kulActive={true}\n                    kulDimensions=\"0.6em\"\n                    slot=\"spinner\"\n                ></kul-spinner>\n            </kul-button>\n        </div>\n    );\n};\n\nconst prepProgressBar = (adapter: KulChatAdapter) => {\n    const cssClass = {\n        chat__request__input__progressbar: true,\n        ['kul-animated']: true,\n        ['kul-striped']: true,\n    };\n    return (\n        <kul-progressbar\n            class={cssClass}\n            kulCenteredLabel={true}\n            kulIcon=\"data_usage\"\n            kulLabel=\"Context window\"\n            onKul-progressbar-event={progressbarEventHandler.bind(\n                progressbarEventHandler,\n                adapter\n            )}\n            ref={(el) => {\n                if (el) {\n                    adapter.components.progressbar = el;\n                }\n            }}\n        ></kul-progressbar>\n    );\n};\n\nconst buttonEventHandler = async (\n    adapter: KulChatAdapter,\n    e: CustomEvent<KulButtonEventPayload>\n) => {\n    const { eventType, id } = e.detail;\n    const textarea = adapter.components.textareas.prompt;\n\n    switch (eventType) {\n        case 'click':\n            switch (id) {\n                case 'clear-button':\n                    await textarea.setValue('');\n                    await textarea.setFocus();\n                    break;\n                case 'send-button':\n                    adapter.actions.send();\n                    break;\n                case 'settings-button':\n                    adapter.set.status.view('settings');\n                    break;\n                case 'stt-button':\n                    adapter.actions.stt();\n                    break;\n            }\n    }\n};\n\nconst progressbarEventHandler = async (\n    adapter: KulChatAdapter,\n    e: CustomEvent<KulProgressbarEventPayload>\n) => {\n    const { eventType } = e.detail;\n\n    switch (eventType) {\n        case 'ready':\n            adapter.actions.updateTokenCount();\n            break;\n    }\n};\n","import { h, VNode } from '@stencil/core';\nimport { KulChatAdapter } from '../kul-chat-declarations';\nimport { KulLLMChoiceMessage } from '../../../managers/kul-llm/kul-llm-declarations';\n\nexport const prepMessages = (adapter: KulChatAdapter) => {\n    const elements: VNode[] = [];\n    const history = adapter.get.history();\n    const toolbarMessage = adapter.get.status.toolbarMessage();\n\n    if (history?.length > 0) {\n        history.forEach((m) => {\n            const element = (\n                <div\n                    class={`chat__messages__container chat__messages__container--${m.role}`}\n                    onPointerEnter={() => adapter.set.status.toolbarMessage(m)}\n                    onPointerLeave={() =>\n                        adapter.set.status.toolbarMessage(null)\n                    }\n                >\n                    <div\n                        class={`chat__messages__content chat__messages__content--${m.role}`}\n                    >\n                        {prepContent(m)}\n                    </div>\n                    {m === toolbarMessage ? prepToolbar(adapter, m) : null}\n                </div>\n            );\n            elements.push(element);\n        });\n    } else {\n        elements.push(\n            <div class=\"chat__messages__empty\">Your chat history is empty!</div>\n        );\n    }\n\n    return elements;\n};\n\nexport const prepToolbar = (\n    adapter: KulChatAdapter,\n    m: KulLLMChoiceMessage\n) => {\n    const cssClass = 'chat__messages__toolbar__button kul-slim';\n    return (\n        <div class=\"chat__messages__toolbar\">\n            <kul-button\n                class={cssClass + ' kul-danger'}\n                kulIcon=\"delete\"\n                onClick={() => adapter.actions.delete(m)}\n                title=\"Remove this message from history.\"\n            ></kul-button>\n            <kul-button\n                class={cssClass}\n                kulIcon=\"content_copy\"\n                onClick={() => navigator.clipboard.writeText(m.content)}\n                title=\"Copy text to clipboard.\"\n            ></kul-button>\n            {m.role === 'user' ? (\n                <kul-button\n                    class={cssClass}\n                    kulIcon=\"refresh\"\n                    onClick={() => adapter.actions.regenerate(m)}\n                    title=\"Regenerate answer to this question.\"\n                ></kul-button>\n            ) : null}\n        </div>\n    );\n};\n\nexport const prepContent = (message: KulLLMChoiceMessage): VNode[] => {\n    const elements: VNode[] = [];\n    const messageContent = message.content;\n\n    const codeBlockRegex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\n    let lastIndex = 0;\n\n    let match: RegExpExecArray | null;\n    while ((match = codeBlockRegex.exec(messageContent)) !== null) {\n        if (match.index > lastIndex) {\n            const textPart = messageContent.slice(lastIndex, match.index);\n            elements.push(<div class=\"paragraph\">{textPart}</div>);\n        }\n\n        const language = match[1] ? match[1].trim() : 'text';\n        const codePart = match[2].trim();\n\n        elements.push(\n            <kul-code\n                class={'code'}\n                kulLanguage={language}\n                kulValue={codePart}\n            ></kul-code>\n        );\n\n        lastIndex = match.index + match[0].length;\n    }\n\n    if (lastIndex < messageContent.length) {\n        const remainingText = messageContent.slice(lastIndex);\n        elements.push(<div class=\"paragraph\">{remainingText}</div>);\n    }\n\n    return elements;\n};\n","import { Fragment, h } from '@stencil/core';\nimport { KulChatAdapter } from '../kul-chat-declarations';\nimport { prepButtons, prepInputArea } from './kul-chat-input';\nimport { prepMessages } from './kul-chat-messages';\n\nexport const prepChat = (adapter: KulChatAdapter) => {\n    return (\n        <Fragment>\n            <div class=\"chat__request\">\n                {prepInputArea(adapter)}\n                {prepButtons(adapter)}\n            </div>\n            <div class={`chat__messages`}>{prepMessages(adapter)}</div>\n            <div class=\"chat__spinner-bar\">\n                <kul-spinner\n                    kulBarVariant={true}\n                    ref={(el) => {\n                        if (el) {\n                            adapter.components.spinner = el;\n                        }\n                    }}\n                ></kul-spinner>\n            </div>\n        </Fragment>\n    );\n};\n","@import './styles/kul-chat-main.scss';\n@import './styles/kul-chat-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    Fragment,\n    h,\n    Host,\n    Listen,\n    Method,\n    Prop,\n    State,\n    VNode,\n    Watch,\n} from '@stencil/core';\nimport {\n    KulChatAdapter,\n    KulChatEvent,\n    KulChatEventPayload,\n    KulChatHistory,\n    KulChatLayout,\n    KulChatProps,\n    KulChatStatus,\n    KulChatView,\n} from './kul-chat-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { GenericObject } from '../../types/GenericTypes';\nimport { prepSettings } from './settings/kul-chat-settings';\nimport { prepChat } from './chat/kul-chat-chat';\nimport {\n    KulLLMChoiceMessage,\n    KulLLMRequest,\n} from '../../managers/kul-llm/kul-llm-declarations';\n\n@Component({\n    tag: 'kul-chat',\n    styleUrl: 'kul-chat.scss',\n    shadow: true,\n})\nexport class KulChat {\n    /**\n     * References the root HTML element of the component (<kul-chat>).\n     */\n    @Element() rootElement: HTMLKulChatElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * History of the messages.\n     */\n    @State() history: KulChatHistory = [];\n    /**\n     * State of the connection.\n     */\n    @State() status: KulChatStatus = 'connecting';\n    /**\n     * Message currently hovered (to display toolbar)\n     */\n    @State() toolbarMessage: KulLLMChoiceMessage;\n    /**\n     * State of the connection.\n     */\n    @State() view: KulChatView = 'chat';\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * How many tokens the context window can handle, used to calculate the occupied space.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulContextWindow = 8192;\n    /**\n     * Enables customization of the component's style.\n     * @default \"\" - No custom style applied by default.\n     */\n    @Prop({ mutable: true }) kulEndpointUrl = 'http://localhost:5001';\n    /**\n     * Sets the layout of the chat.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulLayout: KulChatLayout =\n        'top-textarea';\n    /**\n     * The maximum amount of tokens allowed in the LLM's answer.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulMaxTokens = 250;\n    /**\n     * How often the component checks whether the LLM endpoint is online or not.\n     * @default 10000\n     */\n    @Prop({ mutable: false }) kulPollingInterval = 10000;\n    /**\n     * The seed of the LLM's answer.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulSeed = -1;\n    /**\n     * Enables customization of the component's style.\n     * @default \"\" - No custom style applied by default.\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    /**\n     * System message for the LLM.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulSystem =\n        'You are a helpful and cheerful assistant eager to help the user out with his tasks.';\n    /**\n     * Sets the creative boundaries of the LLM.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulTemperature = 0.7;\n    /**\n     * Sets the initial history of the chat.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulValue: KulChatHistory = [];\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n    #statusinterval: NodeJS.Timeout;\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes event emitted.\n     */\n    @Event({\n        eventName: 'kul-chat-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulChatEventPayload>;\n\n    onKulEvent(e: Event | CustomEvent, eventType: KulChatEvent) {\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            history: JSON.stringify(this.history) || '',\n            status: this.status,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*                L i s t e n e r s                */\n    /*-------------------------------------------------*/\n\n    @Listen('keydown')\n    listenKeydown(e: KeyboardEvent) {\n        switch (e.key) {\n            case 'Enter':\n                if (e.ctrlKey) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.#adapter.actions.send();\n                }\n                break;\n            default:\n                e.stopPropagation();\n        }\n    }\n\n    /*-------------------------------------------------*/\n    /*                 W a t c h e r s                 */\n    /*-------------------------------------------------*/\n\n    @Watch('kulSystem')\n    async updateTokensCount() {\n        const progressbar = this.#adapter.components.progressbar;\n        const system = this.#adapter.components.textareas.system;\n        if (!this.kulContextWindow || !progressbar) {\n            return;\n        }\n        let count = this.kulSystem ? this.kulSystem.length / 4 : 0;\n        this.history.forEach((m) => (count += m.content.length));\n        const estimated = count / 4;\n        const value = (estimated / this.kulContextWindow) * 100;\n        requestAnimationFrame(() => {\n            if (progressbar) {\n                if (value > 90) {\n                    progressbar.classList.add('kul-danger');\n                } else {\n                    progressbar.classList.remove('kul-danger');\n                }\n                progressbar.kulValue = value;\n                progressbar.title = `Estimated tokens used: ${estimated}/${this.kulContextWindow}`;\n            }\n            if (system) {\n                system.setValue(this.kulSystem);\n            }\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Retrieves the debug information reflecting the current state of the component.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Returns the full history as a string.\n     * @returns {Promise<string>} Full history of the chat.\n     */\n    @Method()\n    async getHistory(): Promise<string> {\n        try {\n            return JSON.stringify(this.history);\n        } catch {\n            return '';\n        }\n    }\n    /**\n     * Returns the last message as a string.\n     * @returns {Promise<string>} The last message of the history.\n     */\n    @Method()\n    async getLastMessage(): Promise<string> {\n        return this.history?.slice(-1)?.[0]?.content ?? '';\n    }\n    /**\n     * Retrieves the properties of the component, with optional descriptions.\n     * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n     * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulChatProps, descriptions);\n    }\n    /**\n     * Triggers a re-render of the component to reflect any state changes.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Sets the history of the component through a string.\n     */\n    @Method()\n    async setHistory(history: string): Promise<void> {\n        try {\n            const cb = () => (this.history = JSON.parse(history));\n            this.#updateHistory(cb);\n        } catch {}\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #adapter: KulChatAdapter = {\n        actions: {\n            delete: (m) => {\n                const index = this.history.indexOf(m);\n                if (index !== -1) {\n                    const cb = () => this.history.splice(index, 1);\n                    this.#updateHistory(cb);\n                    this.refresh();\n                }\n            },\n            disableInteractivity: (shouldDisable) => {\n                this.#adapter.components.buttons.send.kulShowSpinner =\n                    shouldDisable;\n                this.#adapter.components.textareas.prompt.kulDisabled =\n                    shouldDisable;\n                this.#adapter.components.buttons.stt.kulDisabled =\n                    shouldDisable;\n            },\n            regenerate: (m) => {\n                const index = this.history.indexOf(m);\n                if (index !== -1) {\n                    const cb = () =>\n                        (this.history = this.history.slice(0, index + 1));\n                    this.#updateHistory(cb);\n                    this.#sendPrompt();\n                }\n            },\n            send: async () => {\n                const textarea = this.#adapter.components.textareas.prompt;\n                await textarea.setBlur();\n                const prompt = await textarea.getValue();\n                if (prompt) {\n                    const newMessage: KulLLMChoiceMessage = {\n                        role: 'user',\n                        content: prompt,\n                    };\n                    const cb = () =>\n                        (this.history = [...this.history, newMessage]);\n                    this.#updateHistory(cb);\n                    this.#sendPrompt();\n                }\n            },\n            stt: () =>\n                this.#kulManager.llm.speechToText(\n                    this.#adapter.components.textareas.prompt,\n                    this.#adapter.components.buttons.stt\n                ),\n            updateTokenCount: async () => this.updateTokensCount(),\n        },\n        components: {\n            buttons: {\n                clear: null,\n                send: null,\n                settings: null,\n                stt: null,\n            },\n            progressbar: null,\n            spinner: null,\n            textareas: { prompt: null, system: null },\n        },\n        emit: {\n            event: (eventType, e = new CustomEvent(eventType)) => {\n                this.onKulEvent(e, eventType);\n            },\n        },\n        get: {\n            history: () => this.history,\n            manager: () => this.#kulManager,\n            status: {\n                connection: () => this.status,\n                toolbarMessage: () => this.toolbarMessage,\n                view: () => this.view,\n            },\n            props: {\n                contextWindow: () => this.kulContextWindow,\n                endpointUrl: () => this.kulEndpointUrl,\n                maxTokens: () => this.kulMaxTokens,\n                pollingInterval: () => this.kulPollingInterval,\n                system: () => this.kulSystem,\n                temperature: () => this.kulTemperature,\n            },\n        },\n        set: {\n            props: {\n                contextWindow: (value) => (this.kulContextWindow = value),\n                endpointUrl: (value) => (this.kulEndpointUrl = value),\n                maxTokens: (value) => (this.kulMaxTokens = value),\n                pollingInterval: (value) => (this.kulPollingInterval = value),\n                system: (value) => (this.kulSystem = value),\n                temperature: (value) => (this.kulTemperature = value),\n            },\n            status: {\n                connection: (status) => (this.status = status),\n                toolbarMessage: (element) => (this.toolbarMessage = element),\n                view: (view) => (this.view = view),\n            },\n        },\n    };\n\n    async #checkLLMStatus() {\n        if (this.status === 'offline') {\n            this.status = 'connecting';\n        }\n        try {\n            const response = await this.#kulManager.llm.poll(\n                this.kulEndpointUrl\n            );\n\n            if (!response.ok) {\n                this.status = 'offline';\n            } else {\n                this.status = 'ready';\n            }\n        } catch (error) {\n            this.status = 'offline';\n        }\n        this.onKulEvent(new CustomEvent('polling'), 'polling');\n    }\n\n    #prepConnecting: () => VNode[] = () => {\n        return (\n            <Fragment>\n                <div class=\"spinner\">\n                    <kul-spinner\n                        kulActive={true}\n                        kulLayout={6}\n                        kulDimensions=\"7px\"\n                    />\n                </div>\n                <div class=\"chat__title\">Just a moment.</div>\n                <div class=\"chat__text\">Contacting your LLM endpoint...</div>\n            </Fragment>\n        );\n    };\n\n    #prepOffline: () => VNode[] = () => {\n        return (\n            <Fragment>\n                <div class=\"chat__error\">\n                    <kul-image\n                        kulValue=\"hotel\"\n                        kulSizeX=\"4em\"\n                        kulSizeY=\"4em\"\n                    ></kul-image>\n                    <div class=\"chat__title\">Zzz...</div>\n                    <div class=\"chat__text\">\n                        The LLM endpoint seems to be offline!\n                    </div>\n                </div>\n                <kul-button\n                    class=\"chat__config kul-full-width\"\n                    kulIcon=\"wrench\"\n                    kulLabel=\"Configuration\"\n                    kulStyling=\"flat\"\n                    onKul-button-event={(e) => {\n                        const { eventType } = e.detail;\n                        switch (eventType) {\n                            case 'click':\n                                this.#adapter.set.status.view('settings');\n                                break;\n                        }\n                    }}\n                ></kul-button>\n            </Fragment>\n        );\n    };\n\n    async #sendPrompt() {\n        const disabler = this.#adapter.actions.disableInteractivity;\n        const textarea = this.#adapter.components.textareas.prompt;\n        this.#adapter.components.spinner.kulActive = true;\n        requestAnimationFrame(() => disabler(true));\n\n        const request: KulLLMRequest = {\n            temperature: this.kulTemperature,\n            max_tokens: this.kulMaxTokens,\n            seed: this.kulSeed,\n            messages: this.history.map((msg) => ({\n                role: msg.role,\n                content: msg.content,\n            })),\n        };\n\n        if (this.kulSystem) {\n            request.messages.unshift({\n                role: 'system',\n                content: this.kulSystem,\n            });\n        }\n\n        try {\n            const response = await this.#kulManager.llm.fetch(\n                request,\n                this.kulEndpointUrl\n            );\n            const message = response.choices?.[0]?.message?.content;\n            const llmMessage: KulLLMChoiceMessage = {\n                role: 'assistant',\n                content: message,\n            };\n            const cb = () => this.history.push(llmMessage);\n            this.#updateHistory(cb);\n            await this.refresh();\n            disabler(false);\n            this.#adapter.components.spinner.kulActive = false;\n            await textarea.setValue('');\n            await textarea.setFocus();\n        } catch (error) {\n            console.error('Error calling LLM:', error);\n            const cb = () => this.history.pop();\n            this.#updateHistory(cb);\n        }\n    }\n\n    #updateHistory(cb: () => unknown) {\n        cb();\n        this.#adapter.actions.updateTokenCount();\n        this.onKulEvent(new CustomEvent('update'), 'update');\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n        if (this.kulValue) {\n            try {\n                const parsedValue =\n                    typeof this.kulValue === 'string'\n                        ? JSON.parse(this.kulValue)\n                        : this.kulValue;\n                const cb = () => (this.history = parsedValue);\n                this.#updateHistory(cb);\n            } catch (error) {\n                this.#kulManager.debug.logs.new(\n                    this,\n                    \"Couldn't set value for chat history\",\n                    'warning'\n                );\n            }\n        }\n    }\n\n    componentDidLoad() {\n        this.#statusinterval = setInterval(() => {\n            this.#checkLLMStatus();\n        }, this.kulPollingInterval);\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#checkLLMStatus();\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        return (\n            <Host>\n                {this.kulStyle && (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                )}\n                <div id={KUL_WRAPPER_ID}>\n                    <div\n                        class={`${this.view} ${this.view}--${this.kulLayout} ${this.view}--${this.status}`}\n                    >\n                        {this.view === 'settings'\n                            ? prepSettings(this.#adapter)\n                            : this.status === 'ready'\n                              ? prepChat(this.#adapter)\n                              : this.status === 'connecting'\n                                ? this.#prepConnecting()\n                                : this.#prepOffline()}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        clearInterval(this.#statusinterval);\n        this.#kulManager.theme.unregister(this);\n    }\n}\n","import {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulEventPayload } from '../../types/GenericTypes';\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulChipEvent =\n    | 'blur'\n    | 'click'\n    | 'delete'\n    | 'focus'\n    | 'pointerdown'\n    | 'ready'\n    | 'unmount';\nexport interface KulChipEventPayload\n    extends KulEventPayload<'KulChip', KulChipEvent> {\n    node: KulDataNode;\n    selectedNodes: Set<KulDataNode>;\n}\n/*-------------------------------------------------*/\n/*                 I n t e r n a l                 */\n/*-------------------------------------------------*/\nexport interface KulChipEventArguments {\n    expansion?: boolean;\n    node?: KulDataNode;\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulChipProps {\n    kulData = 'The data of the chip chip.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulStyle = 'Custom style of the component.',\n    kulStyling = 'Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".',\n}\nexport interface KulChipPropsInterface {\n    kulData?: KulDataDataset;\n    kulRipple?: boolean;\n    kulStyle?: string;\n    kulStyling?: KulChipStyling;\n}\nexport type KulChipStyling = 'choice' | 'filter' | 'input' | 'standard';\n","@import './styles/kul-chip-main.scss';\n@import './styles/kul-chip-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    getAssetPath,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport {\n    KulChipEvent,\n    KulChipEventArguments,\n    KulChipEventPayload,\n    KulChipProps,\n    KulChipStyling,\n} from './kul-chip-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject, KulDataCyAttributes } from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\n\n@Component({\n    tag: 'kul-chip',\n    styleUrl: 'kul-chip.scss',\n    shadow: true,\n})\nexport class KulChip {\n    /**\n     * References the root HTML element of the component (<kul-chip>).\n     */\n    @Element() rootElement: HTMLKulChipElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Set of expanded nodes.\n     */\n    @State() expandedNodes: Set<KulDataNode> = new Set();\n    /**\n     * Children of a collapsed node.\n     */\n    @State() hiddenNodes: Set<KulDataNode> = new Set();\n    /**\n     * The selected chip items.\n     * @default []\n     */\n    @State() selectedNodes: Set<KulDataNode> = new Set();\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * The data of the chip list.\n     * @default []\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulStyle = '';\n    /**\n     * Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulStyling: KulChipStyling = 'standard';\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #nodeItems: VNode[] = [];\n    #kulManager = kulManagerInstance();\n    #rippleSurface: HTMLElement[] = [];\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes event emitted.\n     */\n    @Event({\n        eventName: 'kul-chip-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulChipEventPayload>;\n\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulChipEvent,\n        args?: KulChipEventArguments\n    ) {\n        const { expansion, node } = args || {};\n        switch (eventType) {\n            case 'click':\n                if (expansion && this.#hasChildren(node)) {\n                    if (this.expandedNodes.has(node)) {\n                        this.expandedNodes.delete(node);\n                    } else {\n                        this.expandedNodes.add(node);\n                    }\n                    this.expandedNodes = new Set(this.expandedNodes);\n                } else if (node) {\n                    if (this.selectedNodes.has(node)) {\n                        this.selectedNodes.delete(node);\n                    } else {\n                        this.selectedNodes.add(node);\n                    }\n                    this.selectedNodes = new Set(this.selectedNodes);\n                }\n                break;\n            case 'delete':\n                const nodeIndex = this.kulData?.nodes?.indexOf(node);\n                if (nodeIndex > -1) {\n                    this.kulData.nodes.splice(nodeIndex, 1);\n                    this.refresh();\n                }\n                break;\n            case 'pointerdown':\n                if (this.kulRipple && this.#isClickable()) {\n                    this.#kulManager.theme.ripple.trigger(\n                        e as PointerEvent,\n                        this.#rippleSurface[node.id]\n                    );\n                }\n                break;\n        }\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            node,\n            selectedNodes: this.selectedNodes,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's props values.\n     * @param {boolean} descriptions - When provided and true, the result will be the chip of props with their description.\n     * @returns {Promise<GenericObject>} Chip of props as object, each key will be a prop.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulChipProps, descriptions);\n    }\n    /**\n     * Returns the selected nodes.\n     * @returns {Promise<KulDataNode[]>} Selected nodes.\n     */\n    @Method()\n    async getSelectedNodes(): Promise<Set<KulDataNode>> {\n        return this.selectedNodes;\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Selects one or more nodes in the chip component.\n     * @param {KulDataNode[] | string[]} nodes - An array of KulDataNode objects or node IDs to be selected.\n     * @returns {Promise<void>}\n     */\n    @Method()\n    async setSelectedNodes(\n        nodes: (KulDataNode[] | string[]) & Array<any>\n    ): Promise<void> {\n        const nodesToAdd: Set<KulDataNode> = new Set();\n\n        const isStringArray =\n            Array.isArray(nodes) &&\n            nodes.every((item) => typeof item === 'string');\n\n        this.kulData?.nodes?.forEach((n: KulDataNode) => {\n            if (isStringArray) {\n                if (typeof n.id === 'string' && nodes.includes(n.id)) {\n                    nodesToAdd.add(n);\n                }\n            } else {\n                if (nodes.includes(n)) {\n                    nodesToAdd.add(n);\n                }\n            }\n        });\n        this.selectedNodes = nodesToAdd;\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #hasChildren(node: KulDataNode) {\n        return !!(node.children && node.children.length);\n    }\n\n    #hasIconOnly(node: KulDataNode) {\n        return !!(node.icon && !node.value);\n    }\n\n    #isChoice() {\n        return this.kulStyling === 'choice';\n    }\n\n    #isClickable() {\n        return this.kulStyling === 'choice' || this.kulStyling === 'filter';\n    }\n\n    #isExpanded(node: KulDataNode) {\n        return this.expandedNodes.has(node);\n    }\n\n    #isFilter() {\n        return this.kulStyling === 'filter';\n    }\n\n    #isInput() {\n        return this.kulStyling === 'input';\n    }\n\n    #isSelected(node: KulDataNode) {\n        return this.selectedNodes.has(node);\n    }\n\n    #prepChip(node: KulDataNode, i: number) {\n        const className = {\n            chip: true,\n            'chip--only-icon': this.#hasIconOnly(node),\n            'chip--selected': this.#isSelected(node),\n        };\n        return (\n            <div\n                class={className}\n                data-value={node.id}\n                onClick={(e) => {\n                    this.onKulEvent(e, 'click', { node });\n                }}\n                role=\"row\"\n                title={node.description ?? ''}\n            >\n                {this.#prepRipple(node)}\n                <span class=\"indent\"></span>\n                {this.#prepIcons(node)}\n                <span\n                    role=\"button\"\n                    tabindex={i}\n                    class=\"chip__primary-action\"\n                    data-cy={KulDataCyAttributes.INPUT}\n                    onBlur={(e) => {\n                        this.onKulEvent(e, 'blur', { node });\n                    }}\n                    onFocus={(e) => {\n                        this.onKulEvent(e, 'focus', { node });\n                    }}\n                >\n                    <span class=\"chip__text\">{node.value}</span>\n                </span>\n                {this.#isInput() && this.#prepDeleteIcon(node)}\n            </div>\n        );\n    }\n\n    #prepChipSet() {\n        const elements: VNode[] = [];\n\n        const nodeCount = this.kulData?.nodes?.length;\n        for (let i = 0; nodeCount && i < nodeCount; i++) {\n            this.#nodeItems = [];\n            const node = this.kulData.nodes[i];\n            this.#prepNode(node, 0);\n            elements.push(<div class=\"node\">{this.#nodeItems}</div>);\n        }\n\n        return elements;\n    }\n\n    #prepDeleteIcon(node: KulDataNode) {\n        const path = getAssetPath(`./assets/svg/clear.svg`);\n        const style = {\n            mask: `url('${path}') no-repeat center`,\n            webkitMask: `url('${path}') no-repeat center`,\n        };\n        return (\n            <div\n                class=\"chip__icon chip__icon--trailing\"\n                data-cy={KulDataCyAttributes.BUTTON}\n                key={node.id + '_delete'}\n                onClick={(e) => {\n                    this.onKulEvent(e, 'delete', { node });\n                }}\n                style={style}\n            ></div>\n        );\n    }\n\n    #prepIcons(node: KulDataNode) {\n        const icons: VNode[] = [];\n\n        const className = {\n            chip__icon: true,\n            'chip__icon--leading': true,\n            'chip__icon--leading-hidden':\n                this.kulStyling === 'filter' && this.#isSelected(node),\n        };\n\n        if (node.icon) {\n            const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n            const style = {\n                mask: `url('${path}') no-repeat center`,\n                webkitMask: `url('${path}') no-repeat center`,\n            };\n            icons.push(<div class={className} style={style}></div>);\n        }\n\n        if (this.#isFilter()) {\n            icons.push(\n                <span class=\"chip__checkmark\">\n                    <svg class=\"chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n                        <path\n                            class=\"chip__checkmark-path\"\n                            fill=\"none\"\n                            stroke=\"black\"\n                            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n                        />\n                    </svg>\n                </span>\n            );\n        }\n\n        return icons;\n    }\n\n    #prepNode(node: KulDataNode, indent: number) {\n        const className = {\n            'chip-wrapper': true,\n            'chip-wrapper--hidden-children':\n                this.#hasChildren(node) && !this.#showChildren(node),\n        };\n        const indentStyle = {\n            ['--kul_chip_indent_offset']: indent.toString(),\n        };\n\n        this.#nodeItems.push(\n            <div class={className}>\n                <div class=\"indent\" style={indentStyle}></div>\n                {this.#hasChildren(node) ? (\n                    <div\n                        class={`node__expand ${this.#isExpanded(node) ? 'node__expand--expanded' : ''}`}\n                        onClick={(e) => {\n                            this.onKulEvent(e, 'click', {\n                                expansion: true,\n                                node,\n                            });\n                        }}\n                    ></div>\n                ) : indent ? (\n                    <div class={`node__expand node__expand--placeholder`}></div>\n                ) : null}\n                {this.#prepChip(node, indent)}\n            </div>\n        );\n\n        if (this.#showChildren(node)) {\n            for (let index = 0; index < node.children.length; index++) {\n                if (node.children[index]) {\n                    this.#prepNode(node.children[index], indent + 1);\n                }\n            }\n        }\n    }\n\n    #prepRipple(node: KulDataNode) {\n        if (this.kulRipple && this.#isClickable()) {\n            return (\n                <div\n                    onPointerDown={(e) =>\n                        this.onKulEvent(e, 'pointerdown', { node })\n                    }\n                    ref={(el) => {\n                        if (el && this.kulRipple) {\n                            this.#rippleSurface[node.id] = el;\n                        }\n                    }}\n                ></div>\n            );\n        }\n    }\n\n    #showChildren(node: KulDataNode) {\n        return this.expandedNodes.has(node);\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        if (this.#rippleSurface?.length) {\n            this.#rippleSurface.forEach((el) => {\n                this.#kulManager.theme.ripple.setup(el);\n            });\n        }\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        if (Object.keys(this.#rippleSurface).length) {\n            for (const key in this.#rippleSurface) {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        this.#rippleSurface,\n                        key\n                    )\n                ) {\n                    const surface = this.#rippleSurface[key];\n                    this.#kulManager.theme.ripple.setup(surface);\n                }\n            }\n        }\n\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        this.#nodeItems = [];\n        const className = {\n            'chip-set': true,\n            'chip-set--choice': this.#isChoice(),\n            'chip-set--filter': this.#isFilter(),\n            'chip-set--input': this.#isInput(),\n        };\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class={className} role=\"grid\">\n                        {this.#prepChipSet()}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n}\n","import {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulEventPayload } from '../../types/GenericTypes';\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulTabbarEvent = 'click' | 'pointerdown' | 'ready' | 'unmount';\nexport interface KulTabbarEventPayload\n    extends KulEventPayload<'KulTabbar', KulTabbarEvent> {\n    index?: number;\n    node?: KulDataNode;\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulTabbarProps {\n    kulData = 'Actual data of the component.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulStyle = 'Custom style of the component.',\n    kulValue = \"Sets the initial selected node's index.\",\n}\nexport interface KulTabbarPropsInterface {\n    kulData?: KulDataDataset;\n    kulRipple?: boolean;\n    kulStyle?: string;\n    kulValue?: number;\n}\n/*-------------------------------------------------*/\n/*                    S t a t e                    */\n/*-------------------------------------------------*/\nexport interface KulTabbarState {\n    index?: number;\n    node?: KulDataNode;\n}\n","@import './styles/kul-tabbar-main.scss';\n@import './styles/kul-tabbar-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulTabbarEventPayload,\n    KulTabbarEvent,\n    KulTabbarProps,\n    KulTabbarState,\n} from './kul-tabbar-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject, KulDataCyAttributes } from '../../types/GenericTypes';\nimport { KulScrollOnHoverElement } from '../../managers/kul-scroll-on-hover/kul-scroll-on-hover-declarations';\nimport { KulThemeColorValues } from '../../managers/kul-theme/kul-theme-declarations';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\n\n@Component({\n    tag: 'kul-tabbar',\n    styleUrl: 'kul-tabbar.scss',\n    shadow: true,\n})\nexport class KulTabbar {\n    /**\n     * References the root HTML element of the component (<kul-tabbar>).\n     */\n    @Element() rootElement: HTMLKulTabbarElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * The node currently selected.\n     */\n    @State() value: KulTabbarState = null;\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * Actual data of the component.\n     * @default null\n     */\n    @Prop() kulData: KulDataDataset = null;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    /**\n     * Sets the initial selected node's index.\n     * @default null\n     */\n    @Prop({ mutable: false, reflect: true }) kulValue: number | string = 0;\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n    #rippleSurface: HTMLElement[];\n    #scrollArea: KulScrollOnHoverElement;\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes events emitted.\n     */\n    @Event({\n        eventName: 'kul-tabbar-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulTabbarEventPayload>;\n\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulTabbarEvent,\n        index = 0,\n        node?: KulDataNode\n    ) {\n        if (eventType === 'pointerdown') {\n            if (this.kulRipple) {\n                this.#kulManager.theme.ripple.trigger(\n                    e as PointerEvent,\n                    this.#rippleSurface[index]\n                );\n            }\n        }\n        if (eventType === 'click') {\n            this.value = {\n                index,\n                node,\n            };\n        }\n\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            node,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Retrieves the debug information reflecting the current state of the component.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Retrieves the properties of the component, with optional descriptions.\n     * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n     * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulTabbarProps, descriptions);\n    }\n    /**\n     * Returns the selected node and its index.\n     * @returns {Promise<KulTabbarState>} Selected node and its index.\n     */\n    @Method()\n    async getValue(): Promise<KulTabbarState> {\n        return this.value;\n    }\n    /**\n     * Triggers a re-render of the component to reflect any state changes.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Sets the value of the component based on the provided argument.\n     * @param {number | string} value - The index of the node or the id of the node.\n     * @returns {Promise<KulTabbarState>} The newly set value.\n     */\n    @Method()\n    async setValue(value: number | string): Promise<KulTabbarState> {\n        let index: number;\n        let node: KulDataNode;\n\n        if (typeof value === 'number') {\n            index = value;\n            node = this.kulData.nodes[index];\n        } else if (typeof value === 'string') {\n            index = this.kulData.nodes.findIndex((node) => node.id === value);\n            node = this.kulData.nodes[index];\n        }\n\n        this.value = {\n            index,\n            node,\n        };\n\n        return this.value;\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        try {\n            if (this.kulValue !== null) {\n                if (typeof this.kulValue === 'number') {\n                    this.value = {\n                        index: this.kulValue,\n                        node: this.kulData.nodes[this.kulValue],\n                    };\n                }\n                if (typeof this.kulValue === 'string') {\n                    const node = this.kulData.nodes.find(\n                        (node) => node.id === this.kulValue\n                    );\n                    this.value = {\n                        index: this.kulData.nodes.indexOf(node),\n                        node,\n                    };\n                }\n            }\n        } catch (error) {\n            this.#kulManager.debug.logs.new(\n                this,\n                'Something went wrong while setting the initial selected value.',\n                'warning'\n            );\n        }\n\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        if (this.#scrollArea) {\n            this.#kulManager.scrollOnHover.register(this.#scrollArea);\n        }\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        if (this.#rippleSurface?.length) {\n            this.#rippleSurface.forEach((el) => {\n                this.#kulManager.theme.ripple.setup(el);\n            });\n        }\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        if (!this.#kulManager.data.node.exists(this.kulData)) {\n            return;\n        }\n\n        this.#rippleSurface = [];\n        const nodes = this.kulData.nodes;\n        const elements: Array<VNode> = [];\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const isActive = node === this.value?.node;\n            const tabClass: Record<string, boolean> = {\n                tab: true,\n                'tab--active': isActive ? true : false,\n            };\n\n            elements.push(\n                <button\n                    aria-selected={isActive ? true : false}\n                    class={tabClass}\n                    data-cy={KulDataCyAttributes.BUTTON}\n                    onClick={(e) => {\n                        this.onKulEvent(e, 'click', i, node);\n                    }}\n                    onPointerDown={(e) => {\n                        this.onKulEvent(e, 'pointerdown', i, node);\n                    }}\n                    role=\"tab\"\n                    tabIndex={i}\n                    title={node.description ? node.description : null}\n                >\n                    <div\n                        ref={(el) => {\n                            if (el && this.kulRipple) {\n                                this.#rippleSurface.push(el);\n                            }\n                        }}\n                    ></div>\n                    <span class=\"tab__content\">\n                        {node.icon ? (\n                            <kul-image\n                                class=\"tab__icon\"\n                                kulColor={`var(${KulThemeColorValues.PRIMARY})`}\n                                kulSizeX=\"24px\"\n                                kulSizeY=\"24px\"\n                                kulValue={node.icon}\n                            />\n                        ) : null}\n                        {node.value ? (\n                            <span class=\"tab__text-label\">{node.value}</span>\n                        ) : null}\n                    </span>\n                    <span\n                        class={`tab__indicator ${\n                            isActive ? ' tab__indicator--active' : ''\n                        }`}\n                    >\n                        <span class=\"tab__indicator-content tab__indicator-content--underline\"></span>\n                    </span>\n                </button>\n            );\n        }\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class=\"tabbar\" role=\"tablist\">\n                        <div class=\"tabbar_scroller\">\n                            <div\n                                class=\"tabbar__scroll-area\"\n                                ref={(el: HTMLElement) =>\n                                    (this.#scrollArea =\n                                        el as KulScrollOnHoverElement)\n                                }\n                            >\n                                <div class=\"tabbar__scroll-content\">\n                                    {elements}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        if (this.#scrollArea) {\n            this.#kulManager.scrollOnHover.unregister(this.#scrollArea);\n        }\n        this.#kulManager.theme.unregister(this);\n    }\n}\n"],"version":3}