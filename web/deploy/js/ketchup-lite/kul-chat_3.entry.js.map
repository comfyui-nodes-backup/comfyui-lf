{"file":"kul-chat.kul-chip.kul-tabbar.entry.js","mappings":"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","names":["__classPrivateFieldGet","__classPrivateFieldSet"],"sources":["src/components/kul-chat/chat/kul-chat-input.tsx","src/components/kul-chat/chat/kul-chat-messages.tsx","src/components/kul-chat/chat/kul-chat-chat.tsx","src/components/kul-chat/kul-chat-declarations.ts","src/components/kul-chat/settings/kul-chat-settings.tsx","src/components/kul-chat/kul-chat.scss?tag=kul-chat&encapsulation=shadow","src/components/kul-chat/kul-chat.tsx","src/components/kul-chip/kul-chip-declarations.ts","src/components/kul-chip/kul-chip.scss?tag=kul-chip&encapsulation=shadow","src/components/kul-chip/kul-chip.tsx","src/components/kul-tabbar/kul-tabbar-declarations.ts","src/components/kul-tabbar/kul-tabbar.scss?tag=kul-tabbar&encapsulation=shadow","src/components/kul-tabbar/kul-tabbar.tsx"],"sourcesContent":["import { h } from \"@stencil/core\";\n\nimport { KulButtonEventPayload } from \"../../kul-button/kul-button-declarations\";\nimport { KulProgressbarEventPayload } from \"../../kul-progressbar/kul-progressbar-declarations\";\nimport { KulChatAdapter } from \"../kul-chat-declarations\";\n\nexport const prepInputArea = (adapter: KulChatAdapter) => {\n  return (\n    <div class=\"chat__request__input\">\n      <kul-button\n        class=\"chat__request__input__button kul-full-height\"\n        id=\"settings-button\"\n        kulIcon=\"settings\"\n        kulStyling=\"flat\"\n        onKul-button-event={buttonEventHandler.bind(\n          buttonEventHandler,\n          adapter,\n        )}\n        ref={(el) => {\n          if (el) {\n            adapter.components.buttons.settings = el;\n          }\n        }}\n      ></kul-button>\n      <kul-textfield\n        class=\"chat__request__input__textarea\"\n        kulFullWidth={true}\n        kulLabel=\"What's on your mind?\"\n        kulStyling=\"textarea\"\n        ref={(el) => {\n          if (el) {\n            adapter.components.textareas.prompt = el;\n          }\n        }}\n      ></kul-textfield>\n      {prepProgressBar(adapter)}\n    </div>\n  );\n};\n\nexport const prepButtons = (adapter: KulChatAdapter) => {\n  return (\n    <div class=\"chat__request__buttons\">\n      <kul-button\n        id=\"clear-button\"\n        kulLabel=\"Clear\"\n        kulStyling={\"flat\"}\n        onKul-button-event={buttonEventHandler.bind(\n          buttonEventHandler,\n          adapter,\n        )}\n        ref={(el) => {\n          if (el) {\n            adapter.components.buttons.clear = el;\n          }\n        }}\n        title=\"Clear the textarea.\"\n      ></kul-button>\n      <kul-button\n        id=\"stt-button\"\n        class=\"chat__request__buttons__stt\"\n        kulIcon=\"keyboard_voice\"\n        kulStyling={\"icon\"}\n        onKul-button-event={buttonEventHandler.bind(\n          buttonEventHandler,\n          adapter,\n        )}\n        ref={(el) => {\n          if (el) {\n            adapter.components.buttons.stt = el;\n          }\n        }}\n        title=\"Activate Speech To Text with your browser's API (if supported).\"\n      >\n        <kul-spinner\n          kulActive={true}\n          kulDimensions=\"0.6em\"\n          kulLayout={6}\n          slot=\"spinner\"\n        ></kul-spinner>\n      </kul-button>\n      <kul-button\n        id=\"send-button\"\n        kulIcon=\"check\"\n        kulLabel=\"Send\"\n        onKul-button-event={buttonEventHandler.bind(\n          buttonEventHandler,\n          adapter,\n        )}\n        ref={(el) => {\n          if (el) {\n            adapter.components.buttons.send = el;\n          }\n        }}\n        title=\"Send your prompt (CTRL+Enter).\"\n      >\n        <kul-spinner\n          kulActive={true}\n          kulDimensions=\"0.6em\"\n          slot=\"spinner\"\n        ></kul-spinner>\n      </kul-button>\n    </div>\n  );\n};\n\nconst prepProgressBar = (adapter: KulChatAdapter) => {\n  const cssClass = {\n    chat__request__input__progressbar: true,\n    [\"kul-animated\"]: true,\n    [\"kul-striped\"]: true,\n  };\n  return (\n    <kul-progressbar\n      class={cssClass}\n      kulCenteredLabel={true}\n      kulIcon=\"data_usage\"\n      kulLabel=\"Context window\"\n      onKul-progressbar-event={progressbarEventHandler.bind(\n        progressbarEventHandler,\n        adapter,\n      )}\n      ref={(el) => {\n        if (el) {\n          adapter.components.progressbar = el;\n        }\n      }}\n    ></kul-progressbar>\n  );\n};\n\nconst buttonEventHandler = async (\n  adapter: KulChatAdapter,\n  e: CustomEvent<KulButtonEventPayload>,\n) => {\n  const { eventType, id } = e.detail;\n  const textarea = adapter.components.textareas.prompt;\n\n  switch (eventType) {\n    case \"click\":\n      switch (id) {\n        case \"clear-button\":\n          await textarea.setValue(\"\");\n          await textarea.setFocus();\n          break;\n        case \"send-button\":\n          adapter.actions.send();\n          break;\n        case \"settings-button\":\n          adapter.set.status.view(\"settings\");\n          break;\n        case \"stt-button\":\n          adapter.actions.stt();\n          break;\n      }\n  }\n};\n\nconst progressbarEventHandler = async (\n  adapter: KulChatAdapter,\n  e: CustomEvent<KulProgressbarEventPayload>,\n) => {\n  const { eventType } = e.detail;\n\n  switch (eventType) {\n    case \"ready\":\n      adapter.actions.updateTokenCount();\n      break;\n  }\n};\n","import { h, VNode } from \"@stencil/core\";\n\nimport { KulLLMChoiceMessage } from \"../../../managers/kul-llm/kul-llm-declarations\";\nimport { KulChatAdapter } from \"../kul-chat-declarations\";\n\nexport const prepMessages = (adapter: KulChatAdapter) => {\n  const elements: VNode[] = [];\n  const history = adapter.get.history();\n  const toolbarMessage = adapter.get.status.toolbarMessage();\n\n  if (history?.length > 0) {\n    history.forEach((m) => {\n      const element = (\n        <div\n          class={`chat__messages__container chat__messages__container--${m.role}`}\n          onPointerEnter={() => adapter.set.status.toolbarMessage(m)}\n          onPointerLeave={() => adapter.set.status.toolbarMessage(null)}\n        >\n          <div\n            class={`chat__messages__content chat__messages__content--${m.role}`}\n          >\n            {prepContent(m)}\n          </div>\n          {m === toolbarMessage ? prepToolbar(adapter, m) : null}\n        </div>\n      );\n      elements.push(element);\n    });\n  } else {\n    elements.push(\n      <div class=\"chat__messages__empty\">Your chat history is empty!</div>,\n    );\n  }\n\n  return elements;\n};\n\nexport const prepToolbar = (\n  adapter: KulChatAdapter,\n  m: KulLLMChoiceMessage,\n) => {\n  const cssClass = \"chat__messages__toolbar__button kul-slim\";\n  return (\n    <div class=\"chat__messages__toolbar\">\n      <kul-button\n        class={cssClass + \" kul-danger\"}\n        kulIcon=\"delete\"\n        onClick={() => adapter.actions.delete(m)}\n        title=\"Remove this message from history.\"\n      ></kul-button>\n      <kul-button\n        class={cssClass}\n        kulIcon=\"content_copy\"\n        onClick={() => navigator.clipboard.writeText(m.content)}\n        title=\"Copy text to clipboard.\"\n      ></kul-button>\n      {m.role === \"user\" ? (\n        <kul-button\n          class={cssClass}\n          kulIcon=\"refresh\"\n          onClick={() => adapter.actions.regenerate(m)}\n          title=\"Regenerate answer to this question.\"\n        ></kul-button>\n      ) : null}\n    </div>\n  );\n};\n\nexport const prepContent = (message: KulLLMChoiceMessage): VNode[] => {\n  const elements: VNode[] = [];\n  const messageContent = message.content;\n\n  const codeBlockRegex = /```(\\w+)?\\n([\\s\\S]*?)```/g;\n  let lastIndex = 0;\n\n  let match: RegExpExecArray | null;\n  while ((match = codeBlockRegex.exec(messageContent)) !== null) {\n    if (match.index > lastIndex) {\n      const textPart = messageContent.slice(lastIndex, match.index);\n      elements.push(<div class=\"paragraph\">{textPart}</div>);\n    }\n\n    const language = match[1] ? match[1].trim() : \"text\";\n    const codePart = match[2].trim();\n\n    elements.push(\n      <kul-code\n        class={\"code\"}\n        kulLanguage={language}\n        kulValue={codePart}\n      ></kul-code>,\n    );\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  if (lastIndex < messageContent.length) {\n    const remainingText = messageContent.slice(lastIndex);\n    elements.push(<div class=\"paragraph\">{remainingText}</div>);\n  }\n\n  return elements;\n};\n","import { Fragment, h } from \"@stencil/core\";\n\nimport { KulChatAdapter } from \"../kul-chat-declarations\";\nimport { prepButtons, prepInputArea } from \"./kul-chat-input\";\nimport { prepMessages } from \"./kul-chat-messages\";\n\n//#region prepChat\nexport const prepChat = (adapter: KulChatAdapter) => {\n  return (\n    <Fragment>\n      <div class=\"chat__request\">\n        {prepInputArea(adapter)}\n        {prepButtons(adapter)}\n      </div>\n      <div class={`chat__messages`}>{prepMessages(adapter)}</div>\n      <div class=\"chat__spinner-bar\">\n        <kul-spinner\n          kulBarVariant={true}\n          ref={(el) => {\n            if (el) {\n              adapter.components.spinner = el;\n            }\n          }}\n        ></kul-spinner>\n      </div>\n    </Fragment>\n  );\n};\n//#endregion\n","import { KulLLMChoiceMessage } from \"../../managers/kul-llm/kul-llm-declarations\";\nimport { KulManager } from \"../../managers/kul-manager/kul-manager\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Adapter\nexport interface KulChatAdapter {\n  actions: {\n    delete: (message: KulLLMChoiceMessage) => void;\n    disableInteractivity: (shouldDisable: boolean) => void;\n    regenerate: (message: KulLLMChoiceMessage) => void;\n    send: () => void;\n    stt: () => void;\n    updateTokenCount: () => Promise<void>;\n  };\n  components: {\n    buttons: {\n      clear: HTMLKulButtonElement;\n      send: HTMLKulButtonElement;\n      settings: HTMLKulButtonElement;\n      stt: HTMLKulButtonElement;\n    };\n    progressbar: HTMLKulProgressbarElement;\n    spinner: HTMLKulSpinnerElement;\n    textareas: {\n      prompt: HTMLKulTextfieldElement;\n      system: HTMLKulTextfieldElement;\n    };\n  };\n  emit: { event: (eventType: KulChatEvent, e?: Event) => void };\n  get: {\n    history: () => KulChatHistory;\n    manager: () => KulManager;\n    props: {\n      contextWindow: () => number;\n      endpointUrl: () => string;\n      maxTokens: () => number;\n      pollingInterval: () => number;\n      system: () => string;\n      temperature: () => number;\n    };\n    status: {\n      connection: (status: KulChatStatus) => void;\n      toolbarMessage: () => KulLLMChoiceMessage;\n      view: () => KulChatView;\n    };\n  };\n  set: {\n    props: {\n      contextWindow: (value: number) => void;\n      endpointUrl: (value: string) => void;\n      maxTokens: (value: number) => void;\n      pollingInterval: (value: number) => void;\n      system: (value: string) => void;\n      temperature: (value: number) => void;\n    };\n    status: {\n      connection: (status: KulChatStatus) => void;\n      toolbarMessage: (message: KulLLMChoiceMessage) => void;\n      view: (view: KulChatView) => void;\n    };\n  };\n}\n//#endregion\n\n//#region Events\nexport type KulChatEvent =\n  | \"config\"\n  | \"polling\"\n  | \"ready\"\n  | \"unmount\"\n  | \"update\";\nexport interface KulChatEventPayload\n  extends KulEventPayload<\"KulChat\", KulChatEvent> {\n  history: string;\n  status: KulChatStatus;\n}\n//#endregion\n\n//#region States\nexport type KulChatHistory = KulLLMChoiceMessage[];\nexport type KulChatStatus = \"connecting\" | \"offline\" | \"ready\";\nexport type KulChatView = \"chat\" | \"settings\";\n//#endregion\n\n//#region Props\nexport enum KulChatProps {\n  kulContextWindow = \"How many tokens the context window can handle, used to calculate the occupied space.\",\n  kulEndpointUrl = \"URL of the endpoint where the LLM is hosted.\",\n  kulLayout = \"Sets the layout of the chat.\",\n  kulMaxTokens = \"Maximum number of tokens allowed in the LLM's answer.\",\n  kulPollingInterval = \"How often the component checks whether the LLM endpoint is online or not.\",\n  kulSeed = \"Seed value for the LLM's answer generation.\",\n  kulStyle = \"Custom style of the component.\",\n  kulSystem = \"System message for the LLM.\",\n  kulTemperature = \"Sets the creative boundaries of the LLM.\",\n  kulValue = \"Initial history of the chat.\",\n}\nexport interface KulChatPropsInterface {\n  kulContextWindow?: number;\n  kulEndpointUrl?: string;\n  kulLayout?: KulChatLayout;\n  kulMaxTokens?: number;\n  kulPollingInterval?: number;\n  kulSeed?: number;\n  kulStyle?: string;\n  kulSystem?: string;\n  kulTemperature?: number;\n  kulValue?: KulChatHistory;\n}\nexport type KulChatLayout = \"bottom-textarea\" | \"top-textarea\";\n//#endregion\n","import { Fragment, h } from \"@stencil/core\";\n\nimport { KulButtonEventPayload } from \"../../kul-button/kul-button-declarations\";\nimport { KulTextfieldEventPayload } from \"../../kul-textfield/kul-textfield-declarations\";\nimport { KulChatAdapter } from \"../kul-chat-declarations\";\n\nexport const OPTIONS_IDS = {\n  contextWindow: \"context-option\",\n  endpointUrl: \"endpoint-option\",\n  maxTokens: \"maxtokens-option\",\n  polling: \"polling-option\",\n  system: \"system-option\",\n  temperature: \"temperature-option\",\n};\n\nexport const prepSettings = (adapter: KulChatAdapter) => {\n  return (\n    <Fragment>\n      {prepButton(adapter)}\n      <div class=\"settings__options\">{prepFields(adapter)}</div>\n      <kul-textfield\n        id={OPTIONS_IDS.system}\n        class=\"settings__system kul-full-height\"\n        kulLabel=\"System prompt\"\n        kulStyling=\"textarea\"\n        kulValue={adapter.get.props.system()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n        ref={(el) => {\n          if (el) {\n            adapter.components.textareas.system = el;\n          }\n        }}\n      ></kul-textfield>\n    </Fragment>\n  );\n};\n\nconst prepButton = (adapter: KulChatAdapter) => {\n  return (\n    <kul-button\n      class=\"kul-full-width\"\n      kulIcon=\"arrow_back\"\n      kulLabel=\"Back\"\n      onKul-button-event={backEventHandler.bind(backEventHandler, adapter)}\n    ></kul-button>\n  );\n};\n\nconst prepFields = (adapter: KulChatAdapter) => {\n  return (\n    <Fragment>\n      <kul-textfield\n        id={OPTIONS_IDS.contextWindow}\n        kulHtmlAttributes={{\n          min: 10,\n          step: 100,\n          type: \"number\",\n        }}\n        kulIcon=\"data_usage\"\n        kulLabel=\"Context window length\"\n        kulValue={String(adapter.get.props.contextWindow()).valueOf()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n      ></kul-textfield>\n      <kul-textfield\n        id={OPTIONS_IDS.temperature}\n        kulHtmlAttributes={{\n          min: 0,\n          step: 0.1,\n          type: \"number\",\n        }}\n        kulIcon=\"thermometer\"\n        kulLabel=\"Temperature\"\n        kulValue={String(adapter.get.props.temperature()).valueOf()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n      ></kul-textfield>\n      <kul-textfield\n        id={OPTIONS_IDS.endpointUrl}\n        kulIcon=\"http\"\n        kulLabel=\"Endpoint URL\"\n        kulValue={adapter.get.props.endpointUrl()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n      ></kul-textfield>\n      <kul-textfield\n        id={OPTIONS_IDS.maxTokens}\n        kulHtmlAttributes={{\n          min: 10,\n          step: 100,\n          type: \"number\",\n        }}\n        kulIcon=\"plus_one\"\n        kulLabel=\"Max tokens count\"\n        kulValue={String(adapter.get.props.maxTokens()).valueOf()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n      ></kul-textfield>\n      <kul-textfield\n        id={OPTIONS_IDS.polling}\n        kulHtmlAttributes={{\n          min: 10,\n          step: 10,\n          type: \"number\",\n        }}\n        kulIcon=\"timer\"\n        kulLabel=\"Polling interval\"\n        kulValue={String(adapter.get.props.pollingInterval()).valueOf()}\n        onKul-textfield-event={textfieldEventHandler.bind(\n          textfieldEventHandler,\n          adapter,\n        )}\n      ></kul-textfield>\n    </Fragment>\n  );\n};\n\nconst backEventHandler = (\n  adapter: KulChatAdapter,\n  e: CustomEvent<KulButtonEventPayload>,\n) => {\n  const { eventType } = e.detail;\n\n  switch (eventType) {\n    case \"click\":\n      adapter.emit.event(\"config\");\n      adapter.set.status.view(\"chat\");\n      break;\n  }\n};\n\nconst textfieldEventHandler = (\n  adapter: KulChatAdapter,\n  e: CustomEvent<KulTextfieldEventPayload>,\n) => {\n  const { eventType, id, value } = e.detail;\n\n  switch (eventType) {\n    case \"change\":\n      switch (id) {\n        case OPTIONS_IDS.contextWindow:\n          adapter.set.props.contextWindow(parseInt(value));\n          break;\n        case OPTIONS_IDS.endpointUrl:\n          adapter.set.props.endpointUrl(value);\n          break;\n        case OPTIONS_IDS.maxTokens:\n          adapter.set.props.maxTokens(parseInt(value));\n          break;\n        case OPTIONS_IDS.polling:\n          adapter.set.props.pollingInterval(parseInt(value));\n          break;\n        case OPTIONS_IDS.system:\n          adapter.set.props.system(value);\n          break;\n        case OPTIONS_IDS.temperature:\n          adapter.set.props.temperature(parseFloat(value));\n          break;\n      }\n      break;\n  }\n};\n","@import \"./styles/kul-chat-main.scss\";\n@import \"./styles/kul-chat-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  Fragment,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { prepChat } from \"./chat/kul-chat-chat\";\nimport {\n  KulChatAdapter,\n  KulChatEvent,\n  KulChatEventPayload,\n  KulChatHistory,\n  KulChatLayout,\n  KulChatProps,\n  KulChatStatus,\n  KulChatView,\n} from \"./kul-chat-declarations\";\nimport { prepSettings } from \"./settings/kul-chat-settings\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport {\n  KulLLMChoiceMessage,\n  KulLLMRequest,\n} from \"../../managers/kul-llm/kul-llm-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-chat\",\n  styleUrl: \"kul-chat.scss\",\n  shadow: true,\n})\nexport class KulChat {\n  /**\n   * References the root HTML element of the component (<kul-chat>).\n   */\n  @Element() rootElement: HTMLKulChatElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * History of the messages.\n   */\n  @State() history: KulChatHistory = [];\n  /**\n   * State of the connection.\n   */\n  @State() status: KulChatStatus = \"connecting\";\n  /**\n   * Message currently hovered (to display toolbar)\n   */\n  @State() toolbarMessage: KulLLMChoiceMessage;\n  /**\n   * State of the connection.\n   */\n  @State() view: KulChatView = \"chat\";\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * How many tokens the context window can handle, used to calculate the occupied space.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulContextWindow = 8192;\n  /**\n   * Enables customization of the component's style.\n   * @default \"\" - No custom style applied by default.\n   */\n  @Prop({ mutable: true }) kulEndpointUrl = \"http://localhost:5001\";\n  /**\n   * Sets the layout of the chat.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulLayout: KulChatLayout =\n    \"top-textarea\";\n  /**\n   * The maximum amount of tokens allowed in the LLM's answer.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulMaxTokens = 250;\n  /**\n   * How often the component checks whether the LLM endpoint is online or not.\n   * @default 10000\n   */\n  @Prop({ mutable: false }) kulPollingInterval = 10000;\n  /**\n   * The seed of the LLM's answer.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulSeed = -1;\n  /**\n   * Enables customization of the component's style.\n   * @default \"\" - No custom style applied by default.\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * System message for the LLM.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulSystem =\n    \"You are a helpful and cheerful assistant eager to help the user out with his tasks.\";\n  /**\n   * Sets the creative boundaries of the LLM.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulTemperature = 0.7;\n  /**\n   * Sets the initial history of the chat.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulValue: KulChatHistory = [];\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n  #statusinterval: NodeJS.Timeout;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-chat-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulChatEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulChatEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      history: JSON.stringify(this.history) || \"\",\n      status: this.status,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*                L i s t e n e r s                */\n  /*-------------------------------------------------*/\n\n  @Listen(\"keydown\")\n  listenKeydown(e: KeyboardEvent) {\n    switch (e.key) {\n      case \"Enter\":\n        if (e.ctrlKey) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.#adapter.actions.send();\n        }\n        break;\n      default:\n        e.stopPropagation();\n    }\n  }\n\n  /*-------------------------------------------------*/\n  /*                 W a t c h e r s                 */\n  /*-------------------------------------------------*/\n\n  @Watch(\"kulSystem\")\n  async updateTokensCount() {\n    const progressbar = this.#adapter.components.progressbar;\n    const system = this.#adapter.components.textareas.system;\n    if (!this.kulContextWindow || !progressbar) {\n      return;\n    }\n    let count = this.kulSystem ? this.kulSystem.length / 4 : 0;\n    this.history.forEach((m) => (count += m.content.length));\n    const estimated = count / 4;\n    const value = (estimated / this.kulContextWindow) * 100;\n    requestAnimationFrame(() => {\n      if (progressbar) {\n        if (value > 90) {\n          progressbar.classList.add(\"kul-danger\");\n        } else {\n          progressbar.classList.remove(\"kul-danger\");\n        }\n        progressbar.kulValue = value;\n        progressbar.title = `Estimated tokens used: ${estimated}/${this.kulContextWindow}`;\n      }\n      if (system) {\n        system.setValue(this.kulSystem);\n      }\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Retrieves the debug information reflecting the current state of the component.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Returns the full history as a string.\n   * @returns {Promise<string>} Full history of the chat.\n   */\n  @Method()\n  async getHistory(): Promise<string> {\n    try {\n      return JSON.stringify(this.history);\n    } catch {\n      return \"\";\n    }\n  }\n  /**\n   * Returns the last message as a string.\n   * @returns {Promise<string>} The last message of the history.\n   */\n  @Method()\n  async getLastMessage(): Promise<string> {\n    return this.history?.slice(-1)?.[0]?.content ?? \"\";\n  }\n  /**\n   * Retrieves the properties of the component, with optional descriptions.\n   * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n   * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulChatProps, descriptions);\n  }\n  /**\n   * Triggers a re-render of the component to reflect any state changes.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Sets the history of the component through a string.\n   */\n  @Method()\n  async setHistory(history: string): Promise<void> {\n    try {\n      const cb = () => (this.history = JSON.parse(history));\n      this.#updateHistory(cb);\n    } catch {}\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #adapter: KulChatAdapter = {\n    actions: {\n      delete: (m) => {\n        const index = this.history.indexOf(m);\n        if (index !== -1) {\n          const cb = () => this.history.splice(index, 1);\n          this.#updateHistory(cb);\n          this.refresh();\n        }\n      },\n      disableInteractivity: (shouldDisable) => {\n        this.#adapter.components.buttons.send.kulShowSpinner = shouldDisable;\n        this.#adapter.components.textareas.prompt.kulDisabled = shouldDisable;\n        this.#adapter.components.buttons.stt.kulDisabled = shouldDisable;\n      },\n      regenerate: (m) => {\n        const index = this.history.indexOf(m);\n        if (index !== -1) {\n          const cb = () => (this.history = this.history.slice(0, index + 1));\n          this.#updateHistory(cb);\n          this.#sendPrompt();\n        }\n      },\n      send: async () => {\n        const textarea = this.#adapter.components.textareas.prompt;\n        await textarea.setBlur();\n        const prompt = await textarea.getValue();\n        if (prompt) {\n          const newMessage: KulLLMChoiceMessage = {\n            role: \"user\",\n            content: prompt,\n          };\n          const cb = () => (this.history = [...this.history, newMessage]);\n          this.#updateHistory(cb);\n          this.#sendPrompt();\n        }\n      },\n      stt: () =>\n        this.#kulManager.llm.speechToText(\n          this.#adapter.components.textareas.prompt,\n          this.#adapter.components.buttons.stt,\n        ),\n      updateTokenCount: async () => this.updateTokensCount(),\n    },\n    components: {\n      buttons: {\n        clear: null,\n        send: null,\n        settings: null,\n        stt: null,\n      },\n      progressbar: null,\n      spinner: null,\n      textareas: { prompt: null, system: null },\n    },\n    emit: {\n      event: (eventType, e = new CustomEvent(eventType)) => {\n        this.onKulEvent(e, eventType);\n      },\n    },\n    get: {\n      history: () => this.history,\n      manager: () => this.#kulManager,\n      status: {\n        connection: () => this.status,\n        toolbarMessage: () => this.toolbarMessage,\n        view: () => this.view,\n      },\n      props: {\n        contextWindow: () => this.kulContextWindow,\n        endpointUrl: () => this.kulEndpointUrl,\n        maxTokens: () => this.kulMaxTokens,\n        pollingInterval: () => this.kulPollingInterval,\n        system: () => this.kulSystem,\n        temperature: () => this.kulTemperature,\n      },\n    },\n    set: {\n      props: {\n        contextWindow: (value) => (this.kulContextWindow = value),\n        endpointUrl: (value) => (this.kulEndpointUrl = value),\n        maxTokens: (value) => (this.kulMaxTokens = value),\n        pollingInterval: (value) => (this.kulPollingInterval = value),\n        system: (value) => (this.kulSystem = value),\n        temperature: (value) => (this.kulTemperature = value),\n      },\n      status: {\n        connection: (status) => (this.status = status),\n        toolbarMessage: (element) => (this.toolbarMessage = element),\n        view: (view) => (this.view = view),\n      },\n    },\n  };\n\n  async #checkLLMStatus() {\n    if (this.status === \"offline\") {\n      this.status = \"connecting\";\n    }\n    try {\n      const response = await this.#kulManager.llm.poll(this.kulEndpointUrl);\n\n      if (!response.ok) {\n        this.status = \"offline\";\n      } else {\n        this.status = \"ready\";\n      }\n    } catch (error) {\n      this.status = \"offline\";\n    }\n    this.onKulEvent(new CustomEvent(\"polling\"), \"polling\");\n  }\n\n  #prepConnecting: () => VNode[] = () => {\n    return (\n      <Fragment>\n        <div class=\"spinner\">\n          <kul-spinner kulActive={true} kulLayout={6} kulDimensions=\"7px\" />\n        </div>\n        <div class=\"chat__title\">Just a moment.</div>\n        <div class=\"chat__text\">Contacting your LLM endpoint...</div>\n      </Fragment>\n    );\n  };\n\n  #prepOffline: () => VNode[] = () => {\n    return (\n      <Fragment>\n        <div class=\"chat__error\">\n          <kul-image kulValue=\"hotel\" kulSizeX=\"4em\" kulSizeY=\"4em\"></kul-image>\n          <div class=\"chat__title\">Zzz...</div>\n          <div class=\"chat__text\">The LLM endpoint seems to be offline!</div>\n        </div>\n        <kul-button\n          class=\"chat__config kul-full-width\"\n          kulIcon=\"wrench\"\n          kulLabel=\"Configuration\"\n          kulStyling=\"flat\"\n          onKul-button-event={(e) => {\n            const { eventType } = e.detail;\n            switch (eventType) {\n              case \"click\":\n                this.#adapter.set.status.view(\"settings\");\n                break;\n            }\n          }}\n        ></kul-button>\n      </Fragment>\n    );\n  };\n\n  async #sendPrompt() {\n    const disabler = this.#adapter.actions.disableInteractivity;\n    const textarea = this.#adapter.components.textareas.prompt;\n    this.#adapter.components.spinner.kulActive = true;\n    requestAnimationFrame(() => disabler(true));\n\n    const request: KulLLMRequest = {\n      temperature: this.kulTemperature,\n      max_tokens: this.kulMaxTokens,\n      seed: this.kulSeed,\n      messages: this.history.map((msg) => ({\n        role: msg.role,\n        content: msg.content,\n      })),\n    };\n\n    if (this.kulSystem) {\n      request.messages.unshift({\n        role: \"system\",\n        content: this.kulSystem,\n      });\n    }\n\n    try {\n      const response = await this.#kulManager.llm.fetch(\n        request,\n        this.kulEndpointUrl,\n      );\n      const message = response.choices?.[0]?.message?.content;\n      const llmMessage: KulLLMChoiceMessage = {\n        role: \"assistant\",\n        content: message,\n      };\n      const cb = () => this.history.push(llmMessage);\n      this.#updateHistory(cb);\n      await this.refresh();\n      disabler(false);\n      this.#adapter.components.spinner.kulActive = false;\n      await textarea.setValue(\"\");\n      await textarea.setFocus();\n    } catch (error) {\n      console.error(\"Error calling LLM:\", error);\n      const cb = () => this.history.pop();\n      this.#updateHistory(cb);\n    }\n  }\n\n  #updateHistory(cb: () => unknown) {\n    cb();\n    this.#adapter.actions.updateTokenCount();\n    this.onKulEvent(new CustomEvent(\"update\"), \"update\");\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n    if (this.kulValue) {\n      try {\n        const parsedValue =\n          typeof this.kulValue === \"string\"\n            ? JSON.parse(this.kulValue)\n            : this.kulValue;\n        const cb = () => (this.history = parsedValue);\n        this.#updateHistory(cb);\n      } catch (error) {\n        this.#kulManager.debug.logs.new(\n          this,\n          \"Couldn't set value for chat history\",\n          \"warning\",\n        );\n      }\n    }\n  }\n\n  componentDidLoad() {\n    this.#statusinterval = setInterval(() => {\n      this.#checkLLMStatus();\n    }, this.kulPollingInterval);\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#checkLLMStatus();\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.kulStyle && (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        )}\n        <div id={KUL_WRAPPER_ID}>\n          <div\n            class={`${this.view} ${this.view}--${this.kulLayout} ${this.view}--${this.status}`}\n          >\n            {this.view === \"settings\"\n              ? prepSettings(this.#adapter)\n              : this.status === \"ready\"\n                ? prepChat(this.#adapter)\n                : this.status === \"connecting\"\n                  ? this.#prepConnecting()\n                  : this.#prepOffline()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    clearInterval(this.#statusinterval);\n    this.#kulManager.theme.unregister(this);\n  }\n}\n","import {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulChipEvent =\n  | \"blur\"\n  | \"click\"\n  | \"delete\"\n  | \"focus\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulChipEventPayload\n  extends KulEventPayload<\"KulChip\", KulChipEvent> {\n  node: KulDataNode;\n  selectedNodes: Set<KulDataNode>;\n}\n//#endregion\n\n//#region Internal usage\nexport interface KulChipEventArguments {\n  expansion?: boolean;\n  node?: KulDataNode;\n}\n//#endregion\n\n//#region Props\nexport enum KulChipProps {\n  kulData = \"The data of the chip chip.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulStyle = \"Custom style of the component.\",\n  kulStyling = 'Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".',\n}\nexport interface KulChipPropsInterface {\n  kulData?: KulDataDataset;\n  kulRipple?: boolean;\n  kulStyle?: string;\n  kulStyling?: KulChipStyling;\n}\nexport type KulChipStyling = \"choice\" | \"filter\" | \"input\" | \"standard\";\n//#endregion\n","@import \"./styles/kul-chip-main.scss\";\n@import \"./styles/kul-chip-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  getAssetPath,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\n\nimport {\n  KulChipEvent,\n  KulChipEventArguments,\n  KulChipEventPayload,\n  KulChipProps,\n  KulChipStyling,\n} from \"./kul-chip-declarations\";\nimport {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject, KulDataCyAttributes } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-chip\",\n  styleUrl: \"kul-chip.scss\",\n  shadow: true,\n})\nexport class KulChip {\n  /**\n   * References the root HTML element of the component (<kul-chip>).\n   */\n  @Element() rootElement: HTMLKulChipElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * Set of expanded nodes.\n   */\n  @State() expandedNodes: Set<KulDataNode> = new Set();\n  /**\n   * Children of a collapsed node.\n   */\n  @State() hiddenNodes: Set<KulDataNode> = new Set();\n  /**\n   * The selected chip items.\n   * @default []\n   */\n  @State() selectedNodes: Set<KulDataNode> = new Set();\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * The data of the chip list.\n   * @default []\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulStyle = \"\";\n  /**\n   * Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulStyling: KulChipStyling = \"standard\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #nodeItems: VNode[] = [];\n  #kulManager = kulManagerInstance();\n  #rippleSurface: HTMLElement[] = [];\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-chip-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulChipEventPayload>;\n\n  onKulEvent(\n    e: Event | CustomEvent,\n    eventType: KulChipEvent,\n    args?: KulChipEventArguments,\n  ) {\n    const { expansion, node } = args || {};\n    switch (eventType) {\n      case \"click\":\n        if (expansion && this.#hasChildren(node)) {\n          if (this.expandedNodes.has(node)) {\n            this.expandedNodes.delete(node);\n          } else {\n            this.expandedNodes.add(node);\n          }\n          this.expandedNodes = new Set(this.expandedNodes);\n        } else if (node) {\n          if (this.selectedNodes.has(node)) {\n            this.selectedNodes.delete(node);\n          } else {\n            this.selectedNodes.add(node);\n          }\n          this.selectedNodes = new Set(this.selectedNodes);\n        }\n        break;\n      case \"delete\":\n        const nodeIndex = this.kulData?.nodes?.indexOf(node);\n        if (nodeIndex > -1) {\n          this.kulData.nodes.splice(nodeIndex, 1);\n          this.refresh();\n        }\n        break;\n      case \"pointerdown\":\n        if (this.kulRipple && this.#isClickable()) {\n          this.#kulManager.theme.ripple.trigger(\n            e as PointerEvent,\n            this.#rippleSurface[node.id],\n          );\n        }\n        break;\n    }\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      node,\n      selectedNodes: this.selectedNodes,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the chip of props with their description.\n   * @returns {Promise<GenericObject>} Chip of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulChipProps, descriptions);\n  }\n  /**\n   * Returns the selected nodes.\n   * @returns {Promise<KulDataNode[]>} Selected nodes.\n   */\n  @Method()\n  async getSelectedNodes(): Promise<Set<KulDataNode>> {\n    return this.selectedNodes;\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Selects one or more nodes in the chip component.\n   * @param {KulDataNode[] | string[]} nodes - An array of KulDataNode objects or node IDs to be selected.\n   * @returns {Promise<void>}\n   */\n  @Method()\n  async setSelectedNodes(\n    nodes: (KulDataNode[] | string[]) & Array<any>,\n  ): Promise<void> {\n    const nodesToAdd: Set<KulDataNode> = new Set();\n\n    const isStringArray =\n      Array.isArray(nodes) && nodes.every((item) => typeof item === \"string\");\n\n    this.kulData?.nodes?.forEach((n: KulDataNode) => {\n      if (isStringArray) {\n        if (typeof n.id === \"string\" && nodes.includes(n.id)) {\n          nodesToAdd.add(n);\n        }\n      } else {\n        if (nodes.includes(n)) {\n          nodesToAdd.add(n);\n        }\n      }\n    });\n    this.selectedNodes = nodesToAdd;\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #hasChildren(node: KulDataNode) {\n    return !!(node.children && node.children.length);\n  }\n\n  #hasIconOnly(node: KulDataNode) {\n    return !!(node.icon && !node.value);\n  }\n\n  #isChoice() {\n    return this.kulStyling === \"choice\";\n  }\n\n  #isClickable() {\n    return this.kulStyling === \"choice\" || this.kulStyling === \"filter\";\n  }\n\n  #isExpanded(node: KulDataNode) {\n    return this.expandedNodes.has(node);\n  }\n\n  #isFilter() {\n    return this.kulStyling === \"filter\";\n  }\n\n  #isInput() {\n    return this.kulStyling === \"input\";\n  }\n\n  #isSelected(node: KulDataNode) {\n    return this.selectedNodes.has(node);\n  }\n\n  #prepChip(node: KulDataNode, i: number) {\n    const className = {\n      chip: true,\n      \"chip--only-icon\": this.#hasIconOnly(node),\n      \"chip--selected\": this.#isSelected(node),\n    };\n    return (\n      <div\n        class={className}\n        data-value={node.id}\n        onClick={(e) => {\n          this.onKulEvent(e, \"click\", { node });\n        }}\n        role=\"row\"\n        title={node.description ?? \"\"}\n      >\n        {this.#prepRipple(node)}\n        <span class=\"indent\"></span>\n        {this.#prepIcons(node)}\n        <span\n          role=\"button\"\n          tabindex={i}\n          class=\"chip__primary-action\"\n          data-cy={KulDataCyAttributes.INPUT}\n          onBlur={(e) => {\n            this.onKulEvent(e, \"blur\", { node });\n          }}\n          onFocus={(e) => {\n            this.onKulEvent(e, \"focus\", { node });\n          }}\n        >\n          <span class=\"chip__text\">{node.value}</span>\n        </span>\n        {this.#isInput() && this.#prepDeleteIcon(node)}\n      </div>\n    );\n  }\n\n  #prepChipSet() {\n    const elements: VNode[] = [];\n\n    const nodeCount = this.kulData?.nodes?.length;\n    for (let i = 0; nodeCount && i < nodeCount; i++) {\n      this.#nodeItems = [];\n      const node = this.kulData.nodes[i];\n      this.#prepNode(node, 0);\n      elements.push(<div class=\"node\">{this.#nodeItems}</div>);\n    }\n\n    return elements;\n  }\n\n  #prepDeleteIcon(node: KulDataNode) {\n    const path = getAssetPath(`./assets/svg/clear.svg`);\n    const style = {\n      mask: `url('${path}') no-repeat center`,\n      webkitMask: `url('${path}') no-repeat center`,\n    };\n    return (\n      <div\n        class=\"chip__icon chip__icon--trailing\"\n        data-cy={KulDataCyAttributes.BUTTON}\n        key={node.id + \"_delete\"}\n        onClick={(e) => {\n          this.onKulEvent(e, \"delete\", { node });\n        }}\n        style={style}\n      ></div>\n    );\n  }\n\n  #prepIcons(node: KulDataNode) {\n    const icons: VNode[] = [];\n\n    const className = {\n      chip__icon: true,\n      \"chip__icon--leading\": true,\n      \"chip__icon--leading-hidden\":\n        this.kulStyling === \"filter\" && this.#isSelected(node),\n    };\n\n    if (node.icon) {\n      const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n      const style = {\n        mask: `url('${path}') no-repeat center`,\n        webkitMask: `url('${path}') no-repeat center`,\n      };\n      icons.push(<div class={className} style={style}></div>);\n    }\n\n    if (this.#isFilter()) {\n      icons.push(\n        <span class=\"chip__checkmark\">\n          <svg class=\"chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n            <path\n              class=\"chip__checkmark-path\"\n              fill=\"none\"\n              stroke=\"black\"\n              d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n            />\n          </svg>\n        </span>,\n      );\n    }\n\n    return icons;\n  }\n\n  #prepNode(node: KulDataNode, indent: number) {\n    const className = {\n      \"chip-wrapper\": true,\n      \"chip-wrapper--hidden-children\":\n        this.#hasChildren(node) && !this.#showChildren(node),\n    };\n    const indentStyle = {\n      [\"--kul_chip_indent_offset\"]: indent.toString(),\n    };\n\n    this.#nodeItems.push(\n      <div class={className}>\n        <div class=\"indent\" style={indentStyle}></div>\n        {this.#hasChildren(node) ? (\n          <div\n            class={`node__expand ${this.#isExpanded(node) ? \"node__expand--expanded\" : \"\"}`}\n            onClick={(e) => {\n              this.onKulEvent(e, \"click\", {\n                expansion: true,\n                node,\n              });\n            }}\n          ></div>\n        ) : indent ? (\n          <div class={`node__expand node__expand--placeholder`}></div>\n        ) : null}\n        {this.#prepChip(node, indent)}\n      </div>,\n    );\n\n    if (this.#showChildren(node)) {\n      for (let index = 0; index < node.children.length; index++) {\n        if (node.children[index]) {\n          this.#prepNode(node.children[index], indent + 1);\n        }\n      }\n    }\n  }\n\n  #prepRipple(node: KulDataNode) {\n    if (this.kulRipple && this.#isClickable()) {\n      return (\n        <div\n          onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\", { node })}\n          ref={(el) => {\n            if (el && this.kulRipple) {\n              this.#rippleSurface[node.id] = el;\n            }\n          }}\n        ></div>\n      );\n    }\n  }\n\n  #showChildren(node: KulDataNode) {\n    return this.expandedNodes.has(node);\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    if (this.#rippleSurface?.length) {\n      this.#rippleSurface.forEach((el) => {\n        this.#kulManager.theme.ripple.setup(el);\n      });\n    }\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    if (Object.keys(this.#rippleSurface).length) {\n      for (const key in this.#rippleSurface) {\n        if (Object.prototype.hasOwnProperty.call(this.#rippleSurface, key)) {\n          const surface = this.#rippleSurface[key];\n          this.#kulManager.theme.ripple.setup(surface);\n        }\n      }\n    }\n\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    this.#nodeItems = [];\n    const className = {\n      \"chip-set\": true,\n      \"chip-set--choice\": this.#isChoice(),\n      \"chip-set--filter\": this.#isFilter(),\n      \"chip-set--input\": this.#isInput(),\n    };\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          <div class={className} role=\"grid\">\n            {this.#prepChipSet()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n","import {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulTabbarEvent = \"click\" | \"pointerdown\" | \"ready\" | \"unmount\";\nexport interface KulTabbarEventPayload\n  extends KulEventPayload<\"KulTabbar\", KulTabbarEvent> {\n  index?: number;\n  node?: KulDataNode;\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulTabbarProps {\n  kulData = \"Actual data of the component.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulStyle = \"Custom style of the component.\",\n  kulValue = \"Sets the initial selected node's index.\",\n}\nexport interface KulTabbarPropsInterface {\n  kulData?: KulDataDataset;\n  kulRipple?: boolean;\n  kulStyle?: string;\n  kulValue?: number;\n}\n/*-------------------------------------------------*/\n/*                    S t a t e                    */\n/*-------------------------------------------------*/\nexport interface KulTabbarState {\n  index?: number;\n  node?: KulDataNode;\n}\n","@import \"./styles/kul-tabbar-main.scss\";\n@import \"./styles/kul-tabbar-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\n\nimport {\n  KulTabbarEventPayload,\n  KulTabbarEvent,\n  KulTabbarProps,\n  KulTabbarState,\n} from \"./kul-tabbar-declarations\";\nimport {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { KulScrollOnHoverElement } from \"../../managers/kul-scroll-on-hover/kul-scroll-on-hover-declarations\";\nimport { KulThemeColorValues } from \"../../managers/kul-theme/kul-theme-declarations\";\nimport { GenericObject, KulDataCyAttributes } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-tabbar\",\n  styleUrl: \"kul-tabbar.scss\",\n  shadow: true,\n})\nexport class KulTabbar {\n  /**\n   * References the root HTML element of the component (<kul-tabbar>).\n   */\n  @Element() rootElement: HTMLKulTabbarElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The node currently selected.\n   */\n  @State() value: KulTabbarState = null;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * Actual data of the component.\n   * @default null\n   */\n  @Prop() kulData: KulDataDataset = null;\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * Sets the initial selected node's index.\n   * @default null\n   */\n  @Prop({ mutable: false, reflect: true }) kulValue: number | string = 0;\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n  #rippleSurface: HTMLElement[];\n  #scrollArea: KulScrollOnHoverElement;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes events emitted.\n   */\n  @Event({\n    eventName: \"kul-tabbar-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulTabbarEventPayload>;\n\n  onKulEvent(\n    e: Event | CustomEvent,\n    eventType: KulTabbarEvent,\n    index = 0,\n    node?: KulDataNode,\n  ) {\n    if (eventType === \"pointerdown\") {\n      if (this.kulRipple) {\n        this.#kulManager.theme.ripple.trigger(\n          e as PointerEvent,\n          this.#rippleSurface[index],\n        );\n      }\n    }\n    if (eventType === \"click\") {\n      this.value = {\n        index,\n        node,\n      };\n    }\n\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      node,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Retrieves the debug information reflecting the current state of the component.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Retrieves the properties of the component, with optional descriptions.\n   * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n   * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulTabbarProps, descriptions);\n  }\n  /**\n   * Returns the selected node and its index.\n   * @returns {Promise<KulTabbarState>} Selected node and its index.\n   */\n  @Method()\n  async getValue(): Promise<KulTabbarState> {\n    return this.value;\n  }\n  /**\n   * Triggers a re-render of the component to reflect any state changes.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Sets the value of the component based on the provided argument.\n   * @param {number | string} value - The index of the node or the id of the node.\n   * @returns {Promise<KulTabbarState>} The newly set value.\n   */\n  @Method()\n  async setValue(value: number | string): Promise<KulTabbarState> {\n    let index: number;\n    let node: KulDataNode;\n\n    if (typeof value === \"number\") {\n      index = value;\n      node = this.kulData.nodes[index];\n    } else if (typeof value === \"string\") {\n      index = this.kulData.nodes.findIndex((node) => node.id === value);\n      node = this.kulData.nodes[index];\n    }\n\n    this.value = {\n      index,\n      node,\n    };\n\n    return this.value;\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    try {\n      if (this.kulValue !== null) {\n        if (typeof this.kulValue === \"number\") {\n          this.value = {\n            index: this.kulValue,\n            node: this.kulData.nodes[this.kulValue],\n          };\n        }\n        if (typeof this.kulValue === \"string\") {\n          const node = this.kulData.nodes.find(\n            (node) => node.id === this.kulValue,\n          );\n          this.value = {\n            index: this.kulData.nodes.indexOf(node),\n            node,\n          };\n        }\n      }\n    } catch (error) {\n      this.#kulManager.debug.logs.new(\n        this,\n        \"Something went wrong while setting the initial selected value.\",\n        \"warning\",\n      );\n    }\n\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    if (this.#scrollArea) {\n      this.#kulManager.scrollOnHover.register(this.#scrollArea);\n    }\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    if (this.#rippleSurface?.length) {\n      this.#rippleSurface.forEach((el) => {\n        this.#kulManager.theme.ripple.setup(el);\n      });\n    }\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    if (!this.#kulManager.data.node.exists(this.kulData)) {\n      return;\n    }\n\n    this.#rippleSurface = [];\n    const nodes = this.kulData.nodes;\n    const elements: Array<VNode> = [];\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n      const isActive = node === this.value?.node;\n      const tabClass: Record<string, boolean> = {\n        tab: true,\n        \"tab--active\": isActive ? true : false,\n      };\n\n      elements.push(\n        <button\n          aria-selected={isActive ? true : false}\n          class={tabClass}\n          data-cy={KulDataCyAttributes.BUTTON}\n          onClick={(e) => {\n            this.onKulEvent(e, \"click\", i, node);\n          }}\n          onPointerDown={(e) => {\n            this.onKulEvent(e, \"pointerdown\", i, node);\n          }}\n          role=\"tab\"\n          tabIndex={i}\n          title={node.description ? node.description : null}\n        >\n          <div\n            ref={(el) => {\n              if (el && this.kulRipple) {\n                this.#rippleSurface.push(el);\n              }\n            }}\n          ></div>\n          <span class=\"tab__content\">\n            {node.icon ? (\n              <kul-image\n                class=\"tab__icon\"\n                kulColor={`var(${KulThemeColorValues.PRIMARY})`}\n                kulSizeX=\"24px\"\n                kulSizeY=\"24px\"\n                kulValue={node.icon}\n              />\n            ) : null}\n            {node.value ? (\n              <span class=\"tab__text-label\">{node.value}</span>\n            ) : null}\n          </span>\n          <span\n            class={`tab__indicator ${\n              isActive ? \" tab__indicator--active\" : \"\"\n            }`}\n          >\n            <span class=\"tab__indicator-content tab__indicator-content--underline\"></span>\n          </span>\n        </button>,\n      );\n    }\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          <div class=\"tabbar\" role=\"tablist\">\n            <div class=\"tabbar_scroller\">\n              <div\n                class=\"tabbar__scroll-area\"\n                ref={(el: HTMLElement) =>\n                  (this.#scrollArea = el as KulScrollOnHoverElement)\n                }\n              >\n                <div class=\"tabbar__scroll-content\">{elements}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    if (this.#scrollArea) {\n      this.#kulManager.scrollOnHover.unregister(this.#scrollArea);\n    }\n    this.#kulManager.theme.unregister(this);\n  }\n}\n"],"version":3}