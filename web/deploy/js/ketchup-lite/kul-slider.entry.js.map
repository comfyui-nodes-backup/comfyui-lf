{"file":"kul-slider.entry.js","mappings":"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","names":[],"sources":["src/components/kul-slider/kul-slider-declarations.ts","src/components/kul-slider/kul-slider.scss?tag=kul-slider&encapsulation=shadow","src/components/kul-slider/kul-slider.tsx"],"sourcesContent":["import { KulEventPayload } from '../../types/GenericTypes';\n\n//#region Events\nexport type KulSliderEvent =\n    | 'blur'\n    | 'change'\n    | 'focus'\n    | 'input'\n    | 'pointerdown'\n    | 'ready'\n    | 'unmount';\nexport interface KulSliderEventPayload\n    extends KulEventPayload<'KulSlider', KulSliderEvent> {\n    value: KulSliderValue;\n}\n//#endregion\n\n//#region State\nexport interface KulSliderValue {\n    display: number;\n    real: number;\n}\n//#endregion\n\n//#region Props\nexport enum KulSliderProps {\n    kulDisabled = 'When true, the component is disabled, preventing user interaction.',\n    kulLabel = 'Defines text to display as a label for the slider.',\n    kulLeadingLabel = 'When true, displays the label before the slider component.',\n    kulMax = 'The maximum value allowed by the slider.',\n    kulMin = 'The minimum value allowed by the slider.',\n    kulRipple = 'Adds a ripple effect when interacting with the slider.',\n    kulStep = 'Sets the increment or decrement steps for the slider.',\n    kulStyle = 'Sets a custom CSS style for the component.',\n    kulValue = 'The initial numeric value of the slider within the defined range.',\n}\nexport interface KulSliderPropsInterface {\n    kulDisabled?: boolean;\n    kulLabel?: string;\n    kulLeadingLabel?: boolean;\n    kulMax?: number;\n    kulMin?: number;\n    kulRipple?: boolean;\n    kulStep?: number;\n    kulStyle?: string;\n    kulValue?: number;\n}\n//#endregion\n","@import './styles/kul-slider-main.scss';\n@import './styles/kul-slider-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n} from '@stencil/core';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport {\n    KulDataCyAttributes,\n    type GenericObject,\n} from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport {\n    KulSliderEvent,\n    KulSliderEventPayload,\n    KulSliderProps,\n    KulSliderValue,\n} from './kul-slider-declarations';\n\n@Component({\n    tag: 'kul-slider',\n    styleUrl: 'kul-slider.scss',\n    shadow: true,\n})\nexport class KulSlider {\n    @Element() rootElement: HTMLKulSliderElement;\n    //#region States\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * The value of the component.\n     */\n    @State() value: KulSliderValue = { display: 0, real: 0 };\n    //#endregion\n\n    //#region Props\n    /**\n     * When true, the component is disabled, preventing user interaction.\n     * @default false\n     */\n    @Prop({ mutable: true, reflect: true }) kulDisabled = false;\n    /**\n     * Defines text to display as a label for the slider.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulLabel = '';\n    /**\n     * When true, displays the label before the slider component. Defaults to `false`.\n     * @default false\n     */\n    @Prop({ mutable: true, reflect: true }) kulLeadingLabel = false;\n    /**\n     * The maximum value allowed by the slider.\n     * @default 100\n     */\n    @Prop({ mutable: false }) kulMax = 100;\n    /**\n     * The minimum value allowed by the slider.\n     * @default 0\n     */\n    @Prop({ mutable: false }) kulMin = 0;\n    /**\n     * Sets the increment or decrement steps when moving the slider.\n     * @default 1\n     */\n    @Prop({ mutable: false }) kulStep = 1;\n    /**\n     * Adds a ripple effect when interacting with the slider.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom CSS style to apply to the slider component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    /**\n     * The initial numeric value for the slider within the defined range.\n     * @default 50\n     */\n    @Prop({ mutable: true, reflect: true }) kulValue = 50;\n    //#endregion\n\n    //#region Internal variables\n    #input: HTMLInputElement;\n    #kulManager = kulManagerInstance();\n    #rippleSurface: HTMLElement;\n    //#endregion\n\n    //#region Events\n    @Event({\n        eventName: 'kul-slider-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulSliderEventPayload>;\n    onKulEvent(e: Event | CustomEvent, eventType: KulSliderEvent) {\n        switch (eventType) {\n            case 'change':\n                this.setValue(+this.#input.value);\n                this.refresh();\n                break;\n            case 'input':\n                this.value.display = +this.#input.value;\n                this.refresh();\n                break;\n            case 'pointerdown':\n                if (this.kulRipple) {\n                    this.#kulManager.theme.ripple.trigger(\n                        e as PointerEvent,\n                        this.#rippleSurface\n                    );\n                }\n        }\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            value: this.value,\n        });\n    }\n    //#endregion\n\n    //#region Public methods\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's properties and descriptions.\n     * @param {boolean} descriptions - When true, includes descriptions for each property.\n     * @returns {Promise<GenericObject>} Promise resolved with an object containing the component's properties.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulSliderProps, descriptions);\n    }\n    /**\n     * Used to retrieve the component's current state.\n     * @returns {Promise<KulSliderState>} Promise resolved with the current state of the component.\n     */\n    @Method()\n    async getValue(): Promise<KulSliderValue> {\n        return this.value;\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Sets the component's state.\n     * @param {KulSliderState} value - The new state to be set on the component.\n     * @returns {Promise<void>}\n     */\n    @Method()\n    async setValue(value: number): Promise<void> {\n        this.value = { display: value, real: value };\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n    //#endregion\n\n    //#region Lifecycle hooks\n    componentWillLoad() {\n        if (this.kulValue) {\n            this.setValue(this.kulValue);\n        }\n\n        this.#kulManager.theme.register(this);\n    }\n    componentDidLoad() {\n        if (this.#rippleSurface) {\n            this.#kulManager.theme.ripple.setup(this.#rippleSurface);\n        }\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n    render() {\n        const className: Record<string, boolean> = {\n            slider: true,\n            'slider--disabled': this.kulDisabled,\n        };\n        const formClassName: Record<string, boolean> = {\n            'form-field': true,\n            'form-field--align-end': this.kulLeadingLabel,\n        };\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class={formClassName}>\n                        <div\n                            class={className}\n                            style={{\n                                '--kul_slider_value': `${((this.value.display - this.kulMin) / (this.kulMax - this.kulMin)) * 100}%`,\n                            }}\n                        >\n                            <input\n                                type=\"range\"\n                                class=\"slider__native-control\"\n                                data-cy={KulDataCyAttributes.INPUT}\n                                min={this.kulMin}\n                                max={this.kulMax}\n                                step={this.kulStep}\n                                value={this.value.real}\n                                disabled={this.kulDisabled}\n                                onBlur={(e) => {\n                                    this.onKulEvent(e, 'blur');\n                                }}\n                                onChange={(e) => {\n                                    this.onKulEvent(e, 'change');\n                                }}\n                                onFocus={(e) => {\n                                    this.onKulEvent(e, 'focus');\n                                }}\n                                onInput={(e) => {\n                                    this.onKulEvent(e, 'input');\n                                }}\n                                onPointerDown={(e) => {\n                                    this.onKulEvent(e, 'pointerdown');\n                                }}\n                                ref={(el) => {\n                                    if (el) {\n                                        this.#input = el;\n                                    }\n                                }}\n                            />\n                            <div class=\"slider__track\">\n                                <div class=\"slider__thumb-underlay\">\n                                    <div\n                                        class=\"slider__thumb\"\n                                        ref={(el) => {\n                                            if (this.kulRipple) {\n                                                this.#rippleSurface = el;\n                                            }\n                                        }}\n                                    ></div>\n                                </div>\n                            </div>\n                            <span class=\"slider__value\">\n                                {this.value.display}\n                            </span>\n                        </div>\n                        <label class=\"form-field__label\">{this.kulLabel}</label>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n    //#endregion\n}\n"],"version":3}