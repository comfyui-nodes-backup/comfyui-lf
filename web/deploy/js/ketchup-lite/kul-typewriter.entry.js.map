{"file":"kul-typewriter.entry.js","mappings":"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","names":[],"sources":["src/components/kul-typewriter/kul-typewriter-declarations.ts","src/components/kul-typewriter/kul-typewriter.scss?tag=kul-typewriter&encapsulation=shadow","src/components/kul-typewriter/kul-typewriter.tsx"],"sourcesContent":["import { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulTypewriterEvent = \"ready\" | \"unmount\";\nexport interface KulTypewriterEventPayload\n  extends KulEventPayload<\"KulTypewriter\", KulTypewriterEvent> {}\n//#endregion\n\n//#region Props\nexport enum KulTypewriterProps {\n  kulCursor = \"Sets the behavior of the bliking cursor.\",\n  kulDeleteSpeed = \"Sets the deleting speed in milliseconds.\",\n  kulLoop = \"Enables or disables looping of the text.\",\n  kulPause = \"Sets the duration of the pause after typing a complete text.\",\n  kulSpeed = \"Sets the typing speed in milliseconds.\",\n  kulStyle = \"Custom style of the component.\",\n  kulTag = \"The name of the HTML tag that will wrap the text.\",\n  kulValue = \"Sets the text or array of texts to display with the typewriter effect.\",\n}\nexport interface KulTypewriterPropsInterface {\n  kulCursor?: KulTypewriterCursor;\n  kulDeleteSpeed?: number;\n  kulLoop?: boolean;\n  kulPause?: number;\n  kulSpeed?: number;\n  kulStyle?: string;\n  kulTag?: KulTypewriterTag;\n  kulValue?: KulTypewriterValue;\n}\nexport type KulTypewriterValue = string | string[];\nexport type KulTypewriterCursor = \"enabled\" | \"disabled\" | \"auto\";\nexport type KulTypewriterTag =\n  | \"div\"\n  | \"span\"\n  | \"h1\"\n  | \"h2\"\n  | \"h3\"\n  | \"h4\"\n  | \"h5\"\n  | \"h6\"\n  | \"pre\"\n  | \"code\"\n  | \"p\";\n//#endregion\n","@import \"styles/kul-typewriter-main.scss\";\n@import \"styles/kul-typewriter-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\n\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\nimport {\n  KulTypewriterCursor,\n  KulTypewriterEvent,\n  KulTypewriterEventPayload,\n  KulTypewriterProps,\n  KulTypewriterTag,\n  KulTypewriterValue,\n} from \"./kul-typewriter-declarations\";\n\n@Component({\n  tag: \"kul-typewriter\",\n  styleUrl: \"kul-typewriter.scss\",\n  shadow: true,\n})\nexport class KulTypewriter {\n  /**\n   * References the root HTML element of the component (<kul-typewriter>).\n   */\n  @Element() rootElement: HTMLKulTypewriterElement;\n\n  //#region States\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The current text being displayed as it types.\n   */\n  @State() displayedText = \"\";\n  /**\n   * Controls whether the component is in the process of deleting text.\n   */\n  @State() isDeleting = false;\n  /**\n   * Tracks the current index of the text array.\n   */\n  @State() currentTextIndex = 0;\n  //#endregion\n\n  //#region Props\n  /**\n   * Sets the behavior of the bliking cursor.\n   * @default true\n   */\n  @Prop({ mutable: true }) kulCursor: KulTypewriterCursor = \"auto\";\n  /**\n   * Sets the deleting speed in milliseconds.\n   * @default 50\n   */\n  @Prop({ mutable: true }) kulDeleteSpeed = 50;\n  /**\n   * Enables or disables looping of the text.\n   * @default false\n   */\n  @Prop({ mutable: true }) kulLoop = false;\n  /**\n   * Sets the duration of the pause after typing a complete text.\n   * @default 1000\n   */\n  @Prop({ mutable: true }) kulPause = 500;\n  /**\n   * Sets the typing speed in milliseconds.\n   * @default 100\n   */\n  @Prop({ mutable: true }) kulSpeed = 50;\n  /**\n   * Customizes the style of the component. This property allows you to apply a custom CSS style to the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulStyle = \"\";\n  /**\n   * The name of the HTML tag that will wrap the text.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulTag: KulTypewriterTag = \"p\";\n  /**\n   * Sets the text or array of texts to display with the typewriter effect.\n   * @default \"\"\n   */\n  @Prop({ mutable: true }) kulValue: KulTypewriterValue = \"\";\n  //#endregion\n\n  //#region Internal variables\n  #kulManager = kulManagerInstance();\n  #timeout: NodeJS.Timeout;\n  #texts: string[] = [];\n  //#endregion\n\n  //#region Events\n  @Event({\n    eventName: \"kul-typewriter-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulTypewriterEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulTypewriterEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      id: this.rootElement.id,\n      originalEvent: e,\n      eventType,\n    });\n  }\n  //#endregion\n\n  //#region Watchers\n  @Watch(\"kulValue\")\n  handleKulValueChange() {\n    this.#initializeTexts();\n    this.#resetTyping(); // This now animates the deletion before switching values\n  }\n  //#endregion\n\n  //#region Public methods\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulTypewriterProps, descriptions);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n  //#endregion\n\n  //#region Private methods\n  #initializeTexts() {\n    this.#texts = Array.isArray(this.kulValue)\n      ? this.kulValue\n      : [this.kulValue];\n  }\n  #startTyping() {\n    const currentText = this.#texts[this.currentTextIndex] || \"\";\n\n    if (this.isDeleting) {\n      this.displayedText = currentText.substring(\n        0,\n        this.displayedText.length - 1,\n      );\n    } else {\n      this.displayedText = currentText.substring(\n        0,\n        this.displayedText.length + 1,\n      );\n    }\n\n    if (!this.isDeleting && this.displayedText === currentText) {\n      this.#timeout = setTimeout(() => {\n        if (this.kulLoop) this.isDeleting = true;\n      }, this.kulPause);\n    } else if (this.isDeleting && this.displayedText === \"\") {\n      this.isDeleting = false;\n      this.currentTextIndex = (this.currentTextIndex + 1) % this.#texts.length;\n    } else {\n      const delay = this.isDeleting ? this.kulDeleteSpeed : this.kulSpeed;\n      this.#timeout = setTimeout(() => this.#startTyping(), delay);\n    }\n  }\n  #resetTyping() {\n    clearTimeout(this.#timeout);\n\n    if (this.displayedText) {\n      this.isDeleting = true;\n      this.#deleteText(() => {\n        this.#completeReset();\n      });\n    } else {\n      this.#completeReset();\n    }\n  }\n  #deleteText(callback: () => void) {\n    if (this.displayedText.length > 0) {\n      this.displayedText = this.displayedText.slice(0, -1);\n\n      this.#timeout = setTimeout(() => {\n        this.#deleteText(callback);\n      }, this.kulDeleteSpeed);\n    } else {\n      callback();\n    }\n  }\n  #completeReset() {\n    this.isDeleting = false;\n    this.currentTextIndex = 0;\n    this.#startTyping();\n  }\n  #prepText() {\n    const shouldShowCursor =\n      this.kulCursor === \"enabled\" ||\n      (this.kulCursor === \"auto\" &&\n        !this.isDeleting &&\n        this.displayedText !== this.#texts[this.currentTextIndex]);\n    const TagName = this.kulTag || \"div\";\n    return (\n      <TagName>\n        <span>{this.displayedText || \"\\u00A0\"}</span>\n        {shouldShowCursor ? <span class=\"cursor\">|</span> : null}\n      </TagName>\n    );\n  }\n  //#endregion\n\n  //#region Lifecycle hooks\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n    this.#initializeTexts();\n  }\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    requestAnimationFrame(async () => this.#startTyping());\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n  render() {\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>{this.#prepText()}</div>\n      </Host>\n    );\n  }\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n    clearTimeout(this.#timeout);\n  }\n  //#endregion\n}\n"],"version":3}