{"file":"kul-accordion.entry.js","mappings":"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","names":[],"sources":["src/components/kul-accordion/kul-accordion-declarations.ts","src/components/kul-accordion/kul-accordion.scss?tag=kul-accordion&encapsulation=shadow","src/components/kul-accordion/kul-accordion.tsx"],"sourcesContent":["import { KulDataDataset } from '../../managers/kul-data/kul-data-declarations';\nimport { KulEventPayload } from '../../types/GenericTypes';\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulAccordionEvent = 'click' | 'pointerdown' | 'ready' | 'unmount';\nexport interface KulAccordionEventPayload\n    extends KulEventPayload<'KulAccordion', KulAccordionEvent> {}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulAccordionProps {\n    kulData = 'Actual data of the accordion.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulStyle = 'Sets a custom CSS style for the component.',\n}\nexport interface KulAccordionPropsInterface {\n    kulData?: KulDataDataset;\n    kulRipple?: boolean;\n    kulStyle?: string;\n}\n","@import './styles/kul-accordion-main.scss';\n@import './styles/kul-accordion-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    getAssetPath,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulDataCyAttributes,\n    type GenericObject,\n} from '../../types/GenericTypes';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport {\n    KulAccordionEvent,\n    KulAccordionEventPayload,\n    KulAccordionProps,\n} from './kul-accordion-declarations';\n\n@Component({\n    tag: 'kul-accordion',\n    styleUrl: 'kul-accordion.scss',\n    shadow: true,\n})\nexport class KulAccordion {\n    /**\n     * References the root HTML element of the component (<kul-accordion>).\n     */\n    @Element() rootElement: HTMLKulAccordionElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Set of expanded nodes.\n     */\n    @State() expandedNodes: Set<KulDataNode> = new Set();\n    /**\n     * Selected nodes.\n     */\n    @State() selectedNodes: Set<KulDataNode> = new Set();\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * Actual data of the accordion.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n    #rippleSurface: { [id: string]: HTMLElement } = {};\n    #slotsNames: string[] = [];\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes event emitted.\n     */\n    @Event({\n        eventName: 'kul-accordion-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulAccordionEventPayload>;\n\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulAccordionEvent,\n        node?: KulDataNode\n    ) {\n        switch (eventType) {\n            case 'pointerdown':\n                if (this.kulRipple) {\n                    this.#kulManager.theme.ripple.trigger(\n                        e as PointerEvent,\n                        this.#rippleSurface[node.id]\n                    );\n                }\n                break;\n        }\n\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's properties and descriptions.\n     * @param {boolean} descriptions - When true, includes descriptions for each property.\n     * @returns {Promise<GenericObject>} Promise resolved with an object containing the component's properties.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulAccordionProps, descriptions);\n    }\n    /**\n     * Returns the selected nodes.\n     * @returns {Promise<KulDataNode[]>} Selected nodes.\n     */\n    @Method()\n    async getSelectedNodes(): Promise<Set<KulDataNode>> {\n        return this.selectedNodes;\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * This method activates or deactivates an node.\n     * @param {string} id - Id of the node.\n     */\n    @Method()\n    async toggleNode(id: string, e?: Event) {\n        const node = this.kulData.nodes.find((n) => n.id === id);\n        if (!node) {\n            return;\n        }\n        if (this.#isExpandible(node)) {\n            if (this.#isExpanded(node)) {\n                this.expandedNodes.delete(node);\n            } else {\n                this.expandedNodes.add(node);\n            }\n        } else if (this.#isSelected(node)) {\n            this.selectedNodes.delete(node);\n        } else {\n            this.selectedNodes.add(node);\n        }\n\n        if (!this.#isExpandible(node)) {\n            this.onKulEvent(e || new CustomEvent('click'), 'click');\n        }\n        this.refresh();\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #isExpanded(node: KulDataNode): boolean {\n        return this.expandedNodes.has(node);\n    }\n\n    #isExpandible(node: KulDataNode): boolean {\n        return this.#slotsNames.includes(node.id);\n    }\n\n    #isSelected(node: KulDataNode): boolean {\n        return this.selectedNodes.has(node);\n    }\n\n    #prepIcon(icon: string) {\n        const path = getAssetPath(`./assets/svg/${icon}.svg`);\n        const style = {\n            mask: `url('${path}') no-repeat center`,\n            webkitMask: `url('${path}') no-repeat center`,\n        };\n        return <div class={'node__icon'} style={style}></div>;\n    }\n\n    #prepAccordion(): VNode[] {\n        const nodes: VNode[] = [];\n        const slots: Array<HTMLElement> = Array.prototype.slice.call(\n            this.rootElement.children,\n            0\n        );\n        this.#slotsNames = [];\n        for (let index = 0; index < slots.length; index++) {\n            const slot = slots[index];\n            this.#slotsNames.push(slot.slot);\n        }\n\n        for (let i = 0; i < this.kulData.nodes.length; i++) {\n            const node = this.kulData.nodes[i];\n            const isExpanded = this.#isExpanded(node);\n            const isExpandible = this.#isExpandible(node);\n            const isSelected = this.#isSelected(node);\n            const headerClassName = {\n                node__header: true,\n                'node__header--selected':\n                    !isExpandible && isSelected ? true : false,\n                'node__header--expanded':\n                    isExpandible && isExpanded ? true : false,\n            };\n            const contentClassname: { [className: string]: boolean } = {\n                node__content: true,\n                'node__content--selected': isSelected ? true : false,\n            };\n            nodes.push(\n                <div class=\"node\">\n                    <div\n                        tabindex=\"1\"\n                        title={node.description}\n                        class={headerClassName}\n                        data-cy={\n                            isExpandible\n                                ? undefined\n                                : KulDataCyAttributes.BUTTON\n                        }\n                        onClick={(e) => this.toggleNode(node.id, e)}\n                        onPointerDown={(e) => {\n                            this.onKulEvent(e, 'pointerdown', node);\n                        }}\n                    >\n                        <div\n                            ref={(el) => {\n                                if (el && this.kulRipple) {\n                                    this.#rippleSurface[node.id] = el;\n                                }\n                            }}\n                        ></div>\n                        {node.icon ? this.#prepIcon(node.icon) : null}\n                        <span class=\"node__text\">{node.value}</span>\n                        {isExpandible ? (\n                            <div\n                                class={`node__expand ${\n                                    isExpanded ? 'node__expand--expanded' : ''\n                                } `}\n                            ></div>\n                        ) : null}\n                    </div>\n                    {isExpanded ? (\n                        <div class={contentClassname}>\n                            <slot name={node.id}></slot>\n                        </div>\n                    ) : null}\n                </div>\n            );\n        }\n        return nodes;\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        if (Object.keys(this.#rippleSurface).length) {\n            for (const key in this.#rippleSurface) {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        this.#rippleSurface,\n                        key\n                    )\n                ) {\n                    const surface = this.#rippleSurface[key];\n                    this.#kulManager.theme.ripple.setup(surface);\n                }\n            }\n        }\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        this.#rippleSurface = {};\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class=\"accordion\">{this.#prepAccordion()}</div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n}\n"],"version":3}