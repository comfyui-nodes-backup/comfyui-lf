{"file":"kul-card.entry.js","mappings":"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","names":[],"sources":["src/components/kul-card/kul-card-declarations.ts","src/components/kul-card/helpers/kul-card-defaults.ts","src/components/kul-card/layouts/kul-card-keywords-layout.tsx","src/components/kul-card/layouts/kul-card-material-layout.tsx","src/components/kul-card/layouts/kul-card-upload-layout.tsx","src/components/kul-card/layouts/kul-card-debug-layout.tsx","src/components/kul-card/helpers/kul-card-layout-hub.ts","src/components/kul-card/kul-card.scss?tag=kul-card&encapsulation=shadow","src/components/kul-card/kul-card.tsx"],"sourcesContent":["import { KulEventPayload } from '../../types/GenericTypes';\nimport {\n    KulDataDataset,\n    KulDataShapeEventDispatcher,\n    KulDataShapesMap,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulCard } from './kul-card';\n\n/*-------------------------------------------------*/\n/*                  A d a p t e r                  */\n/*-------------------------------------------------*/\nexport interface KulCardAdapter {\n    actions: {\n        dispatchEvent: KulDataShapeEventDispatcher;\n    };\n    get: {\n        card: () => KulCard;\n        shapes: () => KulDataShapesMap;\n    };\n}\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulCardEvent =\n    | 'click'\n    | 'contextmenu'\n    | 'kul-event'\n    | 'pointerdown'\n    | 'ready'\n    | 'unmount';\nexport interface KulCardEventPayload\n    extends KulEventPayload<'KulCard', KulCardEvent> {}\n/*-------------------------------------------------*/\n/*                 I n t e r n a l                 */\n/*-------------------------------------------------*/\nexport enum KulCardCSSClasses {\n    HAS_ACTIONS = 'has-actions',\n    HAS_CONTENT = 'has-content',\n}\n\nexport enum KulCardShapesIds {\n    CLEAR = 'clear',\n    THEME = 'theme',\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulCardProps {\n    kulData = 'The actual data of the card.',\n    kulLayout = 'Sets the layout.',\n    kulSizeX = 'The width of the card, defaults to 100%. Accepts any valid CSS format (px, %, vw, etc.).',\n    kulSizeY = 'The height of the card, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).',\n    kulStyle = 'Custom style of the component.',\n}\nexport interface KulCardPropsInterface {\n    kulData?: KulDataDataset;\n    kulLayout?: KulCardLayout;\n    kulSizeX?: string;\n    kulSizeY?: string;\n    kulStyle?: string;\n}\nexport type KulCardLayout = 'debug' | 'keywords' | 'material' | 'upload';\n","import {\n    KulDataCell,\n    KulDataNode,\n    KulDataShapeDefaults,\n    KulDataShapes,\n} from '../../../managers/kul-data/kul-data-declarations';\nimport { kulManagerInstance } from '../../../managers/kul-manager/kul-manager';\nimport { KulCardLayout, KulCardShapesIds } from '../kul-card-declarations';\n\nconst getThemes = () => {\n    const nodes: KulDataNode[] = [];\n    kulManagerInstance()\n        .theme.getThemes()\n        .forEach((t) => {\n            const char0 = t.charAt(0).toUpperCase();\n            nodes.push({\n                id: t,\n                value: `${char0}${t.substring(1)}`,\n            });\n        });\n\n    return nodes;\n};\n\nexport const DEFAULTS: {\n    [L in KulCardLayout]: KulDataShapeDefaults;\n} = {\n    debug: {\n        button: () => [\n            {\n                htmlProps: {\n                    className: 'kul-full-width kul-danger',\n                    id: KulCardShapesIds.CLEAR,\n                },\n                kulIcon: 'refresh',\n                kulLabel: 'Clear logs',\n            },\n            {\n                htmlProps: {\n                    className: 'kul-full-width',\n                    id: KulCardShapesIds.THEME,\n                },\n                kulData: {\n                    nodes: [\n                        {\n                            icon: 'style',\n                            id: 'root',\n                            value: 'Random theme',\n                            children: getThemes(),\n                        },\n                    ],\n                },\n            },\n        ],\n        code: () => [{ kulLanguage: 'markdown' }],\n        switch: () => [\n            {\n                kulLeadingLabel: true,\n                kulLabel: 'Toggle debug',\n                kulValue: kulManagerInstance().debug.isEnabled(),\n            },\n        ],\n    },\n    keywords: {\n        button: () => [\n            {\n                htmlProps: {\n                    className: 'kul-full-width',\n                },\n                kulIcon: 'content_copy',\n                kulLabel: 'Copy selected',\n                kulStyling: 'flat',\n            },\n        ],\n        chart: () => [\n            {\n                kulLegend: 'hidden',\n                kulTypes: ['bar'],\n            },\n        ],\n        chip: () => [\n            {\n                kulStyle: '#kul-component .chip-set { height: auto; }',\n                kulStyling: 'filter',\n            },\n        ],\n    },\n    material: {\n        image: () => [\n            {\n                htmlProps: {\n                    className: 'kul-cover',\n                },\n                kulSizeX: '100%',\n                kulSizeY: '100%',\n            },\n        ],\n    },\n    upload: {\n        button: () => [\n            {\n                htmlProps: {\n                    className: 'kul-full-width',\n                },\n                kulIcon: 'upload',\n                kulLabel: 'Upload',\n            },\n        ],\n    },\n};\n","import { h, VNode } from '@stencil/core';\nimport { KulCardAdapter } from '../kul-card-declarations';\nimport { KulButtonEventPayload } from '../../kul-button/kul-button-declarations';\nimport { DEFAULTS } from '../helpers/kul-card-defaults';\nimport { kulManagerInstance } from '../../../managers/kul-manager/kul-manager';\n\nexport function getKeywordsLayout(adapter: KulCardAdapter): VNode {\n    const card = adapter.get.card();\n    const shapes = adapter.get.shapes();\n    const eventDispatcher = adapter.actions.dispatchEvent;\n    const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n    const buttonEventHandler = async (\n        e: CustomEvent<KulButtonEventPayload>\n    ) => {\n        const { comp, eventType } = e.detail;\n        const chipEl = chips?.ref?.[0] as HTMLKulChipElement;\n\n        if (chipEl && eventType === 'pointerdown') {\n            comp.setMessage();\n            if (chipEl) {\n                const selectedChips: string[] = [];\n                (await chipEl.getSelectedNodes()).forEach((n) => {\n                    selectedChips.push(n.id);\n                });\n                navigator.clipboard.writeText(selectedChips.join(', '));\n            }\n        }\n    };\n\n    const buttons = decorator(\n        'button',\n        shapes.button,\n        eventDispatcher,\n        DEFAULTS.keywords.button(),\n        buttonEventHandler\n    );\n    const charts = decorator(\n        'chart',\n        shapes.chart,\n        eventDispatcher,\n        DEFAULTS.keywords.chart()\n    );\n    const chips = decorator(\n        'chip',\n        shapes.chip,\n        eventDispatcher,\n        DEFAULTS.keywords.chip()\n    );\n\n    const className = {\n        [`${card.kulLayout}-layout`]: true,\n    };\n\n    return (\n        <div class={className}>\n            {charts?.element?.length && (\n                <div class=\"section-1 chart\">{charts.element[0]}</div>\n            )}\n            {chips?.element?.length && (\n                <div class=\"section-2 chip\">{chips.element[0]}</div>\n            )}\n            {buttons?.element?.length && (\n                <div class=\"section-3 button\">{buttons.element[0]}</div>\n            )}\n        </div>\n    );\n}\n","import { h, VNode } from '@stencil/core';\nimport { kulManagerInstance } from '../../../managers/kul-manager/kul-manager';\nimport { RIPPLE_SURFACE_CLASS } from '../../../variables/GenericVariables';\nimport { KulCardAdapter, KulCardCSSClasses } from '../kul-card-declarations';\nimport { KulDataCyAttributes } from '../../../types/GenericTypes';\nimport { DEFAULTS } from '../helpers/kul-card-defaults';\n\nexport function getMaterialLayout(adapter: KulCardAdapter): VNode {\n    const card = adapter.get.card();\n    const shapes = adapter.get.shapes();\n    const eventDispatcher = adapter.actions.dispatchEvent;\n    const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n    const buttons = decorator('button', shapes.button, eventDispatcher);\n    const images = decorator(\n        'image',\n        shapes.image,\n        eventDispatcher,\n        DEFAULTS.material.image()\n    );\n    const texts = decorator('text', shapes.text, eventDispatcher);\n\n    const coverIndex = 0;\n    const cover: VNode = images.element?.length\n        ? images.element[coverIndex]\n        : null;\n\n    const titleIndex = 0;\n    const title = texts.element?.length ? shapes.text[titleIndex].value : null;\n\n    const subtitleIndex = 1;\n    const subtitle =\n        texts.element?.length > subtitleIndex\n            ? shapes.text[subtitleIndex].value\n            : null;\n\n    const descriptionIndex = 2;\n    const description =\n        texts.element?.length > descriptionIndex\n            ? shapes.text[descriptionIndex].value\n            : undefined;\n\n    const className = {\n        [`${card.kulLayout}-layout`]: true,\n        [KulCardCSSClasses.HAS_ACTIONS]: !!buttons.element?.length,\n    };\n\n    return (\n        <div class={className}>\n            <div\n                class={RIPPLE_SURFACE_CLASS}\n                data-cy={KulDataCyAttributes.RIPPLE}\n                onPointerDown={(e) => {\n                    kulManagerInstance().theme.ripple.trigger(\n                        e as PointerEvent,\n                        e.currentTarget as HTMLElement\n                    );\n                }}\n            >\n                <div class=\"section-1\">{cover}</div>\n                <div class=\"section-2\">\n                    <div class=\"sub-2 title\">{title}</div>\n                    <div class=\"sub-2 subtitle\">{subtitle}</div>\n                    <div class=\"sub-2 description\">{description}</div>\n                </div>\n            </div>\n            {buttons.element?.length ? (\n                <div class=\"section-3\">{buttons.element}</div>\n            ) : null}\n        </div>\n    );\n}\n","import { h, VNode } from '@stencil/core';\nimport { KulCardAdapter } from '../kul-card-declarations';\nimport { DEFAULTS } from '../helpers/kul-card-defaults';\nimport { kulManagerInstance } from '../../../managers/kul-manager/kul-manager';\n\nexport function getUploadLayout(adapter: KulCardAdapter): VNode {\n    const card = adapter.get.card();\n    const shapes = adapter.get.shapes();\n    const eventDispatcher = adapter.actions.dispatchEvent;\n    const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n    const buttons = decorator(\n        'button',\n        shapes.button,\n        eventDispatcher,\n        DEFAULTS.upload.button()\n    );\n    const uploads = decorator('upload', shapes.upload, eventDispatcher);\n\n    const className = {\n        [`${card.kulLayout}-layout`]: true,\n    };\n\n    return (\n        <div class={className}>\n            {uploads?.element?.length && (\n                <div class=\"section-1 upload\">{uploads.element[0]}</div>\n            )}\n            {buttons?.element?.length && (\n                <div class=\"section-2 button\">{buttons.element[0]}</div>\n            )}\n        </div>\n    );\n}\n","import { h, VNode } from '@stencil/core';\nimport { KulCardAdapter, KulCardShapesIds } from '../kul-card-declarations';\nimport { kulManagerInstance } from '../../../managers/kul-manager/kul-manager';\nimport { KulButtonEventPayload } from '../../kul-button/kul-button-declarations';\nimport { KulListEventPayload } from '../../kul-list/kul-list-declarations';\nimport { KulCodeEventPayload } from '../../kul-code/kul-code-declarations';\nimport { DEFAULTS } from '../helpers/kul-card-defaults';\nimport { KulSwitchEventPayload } from '../../kul-switch/kul-switch-declarations';\n\nexport function getDebugLayout(adapter: KulCardAdapter): VNode {\n    const card = adapter.get.card();\n    const shapes = adapter.get.shapes();\n    const eventDispatcher = adapter.actions.dispatchEvent;\n    const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n    const buttons = decorator(\n        'button',\n        shapes.button,\n        eventDispatcher,\n        DEFAULTS.debug.button(),\n        buttonEventHandler\n    );\n    const codes = decorator(\n        'code',\n        shapes.code,\n        eventDispatcher,\n        DEFAULTS.debug.code(),\n        codeEventHandler\n    );\n    const switches = decorator(\n        'switch',\n        shapes.switch,\n        eventDispatcher,\n        DEFAULTS.debug.switch(),\n        switchEventHandler\n    );\n\n    const className = {\n        [`${card.kulLayout}-layout`]: true,\n    };\n\n    return (\n        <div class={className}>\n            {switches?.element?.length && (\n                <div class=\"section-1 switch\">{switches.element[0]}</div>\n            )}\n            {codes?.element?.length && (\n                <div class=\"section-2 code\">{codes.element[0]}</div>\n            )}\n            {buttons?.element?.length && (\n                <div class=\"section-3 button\">{buttons.element[0]}</div>\n            )}\n            {buttons?.element?.length && (\n                <div class=\"section-4 button\">{buttons.element[1]}</div>\n            )}\n        </div>\n    );\n}\n\nconst buttonEventHandler = (e: CustomEvent<KulButtonEventPayload>) => {\n    const { eventType, id, originalEvent } = e.detail;\n\n    switch (id) {\n        case KulCardShapesIds.CLEAR:\n            break;\n\n        case KulCardShapesIds.THEME:\n            break;\n    }\n\n    switch (eventType) {\n        case 'click':\n            switch (id) {\n                case KulCardShapesIds.CLEAR:\n                    kulManagerInstance().debug.logs.dump();\n                    break;\n                case KulCardShapesIds.THEME:\n                    kulManagerInstance().theme.randomTheme();\n                    break;\n            }\n            break;\n        case 'kul-event':\n            switch (id) {\n                case KulCardShapesIds.THEME:\n                    listEventHandler(\n                        originalEvent as CustomEvent<KulListEventPayload>\n                    );\n                    break;\n            }\n            break;\n    }\n};\n\nconst codeEventHandler = (e: CustomEvent<KulCodeEventPayload>) => {\n    const { comp, eventType } = e.detail;\n\n    switch (eventType) {\n        case 'ready':\n            kulManagerInstance().debug.register(comp);\n            break;\n        case 'unmount':\n            kulManagerInstance().debug.unregister(comp);\n            break;\n    }\n};\n\nconst listEventHandler = (e: CustomEvent<KulListEventPayload>) => {\n    const { eventType, node } = e.detail;\n\n    switch (eventType) {\n        case 'click':\n            kulManagerInstance().theme.set(node.id);\n            break;\n    }\n};\n\nconst switchEventHandler = (e: CustomEvent<KulSwitchEventPayload>) => {\n    const { comp, eventType, value } = e.detail;\n    const boolValue = value === 'on' ? true : false;\n\n    switch (eventType) {\n        case 'change':\n            kulManagerInstance().debug.toggle(boolValue, false);\n            break;\n        case 'ready':\n            kulManagerInstance().debug.register(comp);\n            break;\n        case 'unmount':\n            kulManagerInstance().debug.unregister(comp);\n            break;\n    }\n};\n","import { VNode } from '@stencil/core';\nimport { KulCardAdapter, KulCardLayout } from '../kul-card-declarations';\nimport { getKeywordsLayout } from '../layouts/kul-card-keywords-layout';\nimport { getMaterialLayout } from '../layouts/kul-card-material-layout';\nimport { getUploadLayout } from '../layouts/kul-card-upload-layout';\nimport { getDebugLayout } from '../layouts/kul-card-debug-layout';\n\nexport const LAYOUT_HUB: {\n    [K in KulCardLayout]: (adapter: KulCardAdapter) => VNode;\n} = {\n    debug: (adapter) => getDebugLayout(adapter),\n    keywords: (adapter) => getKeywordsLayout(adapter),\n    material: (adapter) => getMaterialLayout(adapter),\n    upload: (adapter) => getUploadLayout(adapter),\n};\n","@import './styles/kul-card-main';\n@import './styles/kul-card-classes';\n\n:host {\n  /**\n * @prop --kul-card-backdrop: Sets the backdrop color of the component when visible.\n * Defaults to rgba(0, 0, 0, 0.32).\n */\n  --kul_card_backdrop: var(--kul-card-backdrop, rgba(0, 0, 0, 0.32));\n\n  display: block;\n  font-size: var(--kul-font-size);\n  height: var(--kul_card_height);\n  min-height: var(--kul_card_height);\n  min-width: var(--kul_card_width);\n  outline: none;\n  position: relative;\n  width: var(--kul_card_width);\n}\n\n#kul-component {\n  height: 100%;\n  width: 100%;\n}\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n} from '@stencil/core';\nimport type { GenericMap, GenericObject } from '../../types/GenericTypes';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport {\n    KulCardProps,\n    KulCardEvent,\n    KulCardEventPayload,\n    KulCardAdapter,\n    KulCardLayout,\n} from './kul-card-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport {\n    KulDataDataset,\n    KulDataShapesMap,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { LAYOUT_HUB } from './helpers/kul-card-layout-hub';\n\n@Component({\n    tag: 'kul-card',\n    styleUrl: 'kul-card.scss',\n    shadow: true,\n})\nexport class KulCard {\n    /**\n     * References the root HTML element of the component (<kul-card>).\n     */\n    @Element() rootElement: HTMLKulCardElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * The shapes of the component.\n     * @default \"\"\n     *\n     * @see KulDataShapesMap - For a list of possible shapes.\n     */\n    @State() shapes: KulDataShapesMap;\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * The actual data of the card.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * Sets the layout.\n     * @default \"material\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulLayout: KulCardLayout =\n        'material';\n    /**\n     * The width of the card, defaults to 100%. Accepts any valid CSS format (px, %, vw, etc.).\n     * @default \"100%\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulSizeX = '100%';\n    /**\n     * The height of the card, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).\n     * @default \"100%\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulSizeY = '100%';\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Triggered when an event is fired.\n     */\n    @Event({\n        eventName: 'kul-card-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulCardEventPayload>;\n\n    onKulEvent(e: Event | CustomEvent, eventType: KulCardEvent): void {\n        this.kulEvent.emit({\n            comp: this,\n            id: this.rootElement.id,\n            eventType,\n            originalEvent: e,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's props values.\n     * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n     * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulCardProps, descriptions);\n    }\n    /**\n     * Used to retrieve component's shapes.\n     * @returns {Promise<KulDataShapesMap>} Map of shapes.\n     */\n    @Method()\n    async getShapes(): Promise<KulDataShapesMap> {\n        return this.shapes;\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #adapter: KulCardAdapter = {\n        actions: {\n            dispatchEvent: async (e) => {\n                this.onKulEvent(e, 'kul-event');\n            },\n        },\n        get: { card: () => this, shapes: () => this.shapes },\n    };\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.language.register(this);\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        if (this.kulData) {\n            this.shapes = this.#kulManager.data.cell.shapes.getAll(\n                this.kulData\n            );\n        }\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        if (!this.kulData && this.rootElement.children.length < 1) {\n            return;\n        }\n\n        const style: GenericMap = {\n            '--kul_card_height': this.kulSizeY ? this.kulSizeY : '100%',\n            '--kul_card_width': this.kulSizeX ? this.kulSizeX : '100%',\n        };\n\n        return (\n            <Host style={style}>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div\n                    id={KUL_WRAPPER_ID}\n                    onClick={(e) => this.onKulEvent(e, 'click')}\n                    onContextMenu={(e) => this.onKulEvent(e, 'contextmenu')}\n                    onPointerDown={(e) => this.onKulEvent(e, 'pointerdown')}\n                >\n                    {LAYOUT_HUB[this.kulLayout.toLowerCase()](this.#adapter)}\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        this.#kulManager.language.unregister(this);\n        this.#kulManager.theme.unregister(this);\n    }\n}\n"],"version":3}