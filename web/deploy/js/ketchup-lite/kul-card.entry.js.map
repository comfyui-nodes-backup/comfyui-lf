{"file":"kul-card.entry.js","mappings":"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","names":[],"sources":["src/components/kul-card/kul-card-declarations.ts","src/components/kul-card/helpers/kul-card-defaults.ts","src/components/kul-card/layouts/kul-card-debug-layout.tsx","src/components/kul-card/layouts/kul-card-keywords-layout.tsx","src/components/kul-card/layouts/kul-card-material-layout.tsx","src/components/kul-card/layouts/kul-card-upload-layout.tsx","src/components/kul-card/helpers/kul-card-layout-hub.ts","src/components/kul-card/kul-card.scss?tag=kul-card&encapsulation=shadow","src/components/kul-card/kul-card.tsx"],"sourcesContent":["import { KulCard } from \"./kul-card\";\nimport {\n  KulDataDataset,\n  KulDataShapeEventDispatcher,\n  KulDataShapesMap,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                  A d a p t e r                  */\n/*-------------------------------------------------*/\nexport interface KulCardAdapter {\n  actions: {\n    dispatchEvent: KulDataShapeEventDispatcher;\n  };\n  get: {\n    card: () => KulCard;\n    shapes: () => KulDataShapesMap;\n  };\n}\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulCardEvent =\n  | \"click\"\n  | \"contextmenu\"\n  | \"kul-event\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulCardEventPayload\n  extends KulEventPayload<\"KulCard\", KulCardEvent> {}\n/*-------------------------------------------------*/\n/*                 I n t e r n a l                 */\n/*-------------------------------------------------*/\nexport enum KulCardCSSClasses {\n  HAS_ACTIONS = \"has-actions\",\n  HAS_CONTENT = \"has-content\",\n}\n\nexport enum KulCardShapesIds {\n  CLEAR = \"clear\",\n  THEME = \"theme\",\n}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulCardProps {\n  kulData = \"The actual data of the card.\",\n  kulLayout = \"Sets the layout.\",\n  kulSizeX = \"The width of the card, defaults to 100%. Accepts any valid CSS format (px, %, vw, etc.).\",\n  kulSizeY = \"The height of the card, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).\",\n  kulStyle = \"Custom style of the component.\",\n}\nexport interface KulCardPropsInterface {\n  kulData?: KulDataDataset;\n  kulLayout?: KulCardLayout;\n  kulSizeX?: string;\n  kulSizeY?: string;\n  kulStyle?: string;\n}\nexport type KulCardLayout = \"debug\" | \"keywords\" | \"material\" | \"upload\";\n","import {\n  KulDataNode,\n  KulDataShapeDefaults,\n} from \"../../../managers/kul-data/kul-data-declarations\";\nimport { kulManagerInstance } from \"../../../managers/kul-manager/kul-manager\";\nimport { KulCardLayout, KulCardShapesIds } from \"../kul-card-declarations\";\n\nconst getThemes = () => {\n  const nodes: KulDataNode[] = [];\n  kulManagerInstance()\n    .theme.getThemes()\n    .forEach((t) => {\n      const char0 = t.charAt(0).toUpperCase();\n      nodes.push({\n        id: t,\n        value: `${char0}${t.substring(1)}`,\n      });\n    });\n\n  return nodes;\n};\n\nexport const DEFAULTS: {\n  [L in KulCardLayout]: KulDataShapeDefaults;\n} = {\n  debug: {\n    button: () => [\n      {\n        htmlProps: {\n          className: \"kul-full-width kul-danger\",\n          id: KulCardShapesIds.CLEAR,\n        },\n        kulIcon: \"refresh\",\n        kulLabel: \"Clear logs\",\n      },\n      {\n        htmlProps: {\n          className: \"kul-full-width\",\n          id: KulCardShapesIds.THEME,\n        },\n        kulData: {\n          nodes: [\n            {\n              icon: \"style\",\n              id: \"root\",\n              value: \"Random theme\",\n              children: getThemes(),\n            },\n          ],\n        },\n      },\n    ],\n    code: () => [{ kulLanguage: \"markdown\" }],\n    toggle: () => [\n      {\n        kulLeadingLabel: true,\n        kulLabel: \"Toggle debug\",\n        kulValue: kulManagerInstance().debug.isEnabled(),\n      },\n    ],\n  },\n  keywords: {\n    button: () => [\n      {\n        htmlProps: {\n          className: \"kul-full-width\",\n        },\n        kulIcon: \"content_copy\",\n        kulLabel: \"Copy selected\",\n        kulStyling: \"flat\",\n      },\n    ],\n    chart: () => [\n      {\n        kulLegend: \"hidden\",\n        kulTypes: [\"bar\"],\n      },\n    ],\n    chip: () => [\n      {\n        kulStyle: \"#kul-component .chip-set { height: auto; }\",\n        kulStyling: \"filter\",\n      },\n    ],\n  },\n  material: {\n    image: () => [\n      {\n        htmlProps: {\n          className: \"kul-cover\",\n        },\n        kulSizeX: \"100%\",\n        kulSizeY: \"100%\",\n      },\n    ],\n  },\n  upload: {\n    button: () => [\n      {\n        htmlProps: {\n          className: \"kul-full-width\",\n        },\n        kulIcon: \"upload\",\n        kulLabel: \"Upload\",\n      },\n    ],\n  },\n};\n","import { h, VNode } from \"@stencil/core\";\n\nimport { kulManagerInstance } from \"../../../managers/kul-manager/kul-manager\";\nimport { KulButtonEventPayload } from \"../../kul-button/kul-button-declarations\";\nimport { KulCodeEventPayload } from \"../../kul-code/kul-code-declarations\";\nimport { KulListEventPayload } from \"../../kul-list/kul-list-declarations\";\nimport { KulToggleEventPayload } from \"../../kul-toggle/kul-toggle-declarations\";\nimport { DEFAULTS } from \"../helpers/kul-card-defaults\";\nimport { KulCardAdapter, KulCardShapesIds } from \"../kul-card-declarations\";\n\nexport function getDebugLayout(adapter: KulCardAdapter): VNode {\n  const card = adapter.get.card();\n  const shapes = adapter.get.shapes();\n  const eventDispatcher = adapter.actions.dispatchEvent;\n  const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n  const buttons = decorator(\n    \"button\",\n    shapes.button,\n    eventDispatcher,\n    DEFAULTS.debug.button(),\n    buttonEventHandler,\n  );\n  const codes = decorator(\n    \"code\",\n    shapes.code,\n    eventDispatcher,\n    DEFAULTS.debug.code(),\n    codeEventHandler,\n  );\n  const togglees = decorator(\n    \"toggle\",\n    shapes.toggle,\n    eventDispatcher,\n    DEFAULTS.debug.toggle(),\n    toggleEventHandler,\n  );\n\n  const className = {\n    [`${card.kulLayout}-layout`]: true,\n  };\n\n  return (\n    <div class={className}>\n      {togglees?.element?.length && (\n        <div class=\"section-1 toggle\">{togglees.element[0]}</div>\n      )}\n      {codes?.element?.length && (\n        <div class=\"section-2 code\">{codes.element[0]}</div>\n      )}\n      {buttons?.element?.length && (\n        <div class=\"section-3 button\">{buttons.element[0]}</div>\n      )}\n      {buttons?.element?.length && (\n        <div class=\"section-4 button\">{buttons.element[1]}</div>\n      )}\n    </div>\n  );\n}\n\nconst buttonEventHandler = (e: CustomEvent<KulButtonEventPayload>) => {\n  const { eventType, id, originalEvent } = e.detail;\n\n  switch (id) {\n    case KulCardShapesIds.CLEAR:\n      break;\n\n    case KulCardShapesIds.THEME:\n      break;\n  }\n\n  switch (eventType) {\n    case \"click\":\n      switch (id) {\n        case KulCardShapesIds.CLEAR:\n          kulManagerInstance().debug.logs.dump();\n          break;\n        case KulCardShapesIds.THEME:\n          kulManagerInstance().theme.randomTheme();\n          break;\n      }\n      break;\n    case \"kul-event\":\n      switch (id) {\n        case KulCardShapesIds.THEME:\n          listEventHandler(originalEvent as CustomEvent<KulListEventPayload>);\n          break;\n      }\n      break;\n  }\n};\n\nconst codeEventHandler = (e: CustomEvent<KulCodeEventPayload>) => {\n  const { comp, eventType } = e.detail;\n\n  switch (eventType) {\n    case \"ready\":\n      kulManagerInstance().debug.register(comp);\n      break;\n    case \"unmount\":\n      kulManagerInstance().debug.unregister(comp);\n      break;\n  }\n};\n\nconst listEventHandler = (e: CustomEvent<KulListEventPayload>) => {\n  const { eventType, node } = e.detail;\n\n  switch (eventType) {\n    case \"click\":\n      kulManagerInstance().theme.set(node.id);\n      break;\n  }\n};\n\nconst toggleEventHandler = (e: CustomEvent<KulToggleEventPayload>) => {\n  const { comp, eventType, value } = e.detail;\n  const boolValue = value === \"on\" ? true : false;\n\n  switch (eventType) {\n    case \"change\":\n      kulManagerInstance().debug.toggle(boolValue, false);\n      break;\n    case \"ready\":\n      kulManagerInstance().debug.register(comp);\n      break;\n    case \"unmount\":\n      kulManagerInstance().debug.unregister(comp);\n      break;\n  }\n};\n","import { h, VNode } from \"@stencil/core\";\n\nimport { kulManagerInstance } from \"../../../managers/kul-manager/kul-manager\";\nimport { KulButtonEventPayload } from \"../../kul-button/kul-button-declarations\";\nimport { DEFAULTS } from \"../helpers/kul-card-defaults\";\nimport { KulCardAdapter } from \"../kul-card-declarations\";\n\nexport function getKeywordsLayout(adapter: KulCardAdapter): VNode {\n  const card = adapter.get.card();\n  const shapes = adapter.get.shapes();\n  const eventDispatcher = adapter.actions.dispatchEvent;\n  const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n  const buttonEventHandler = async (e: CustomEvent<KulButtonEventPayload>) => {\n    const { comp, eventType } = e.detail;\n    const chipEl = chips?.ref?.[0] as HTMLKulChipElement;\n\n    if (chipEl && eventType === \"pointerdown\") {\n      comp.setMessage();\n      if (chipEl) {\n        const selectedChips: string[] = [];\n        (await chipEl.getSelectedNodes()).forEach((n) => {\n          selectedChips.push(n.id);\n        });\n        navigator.clipboard.writeText(selectedChips.join(\", \"));\n      }\n    }\n  };\n\n  const buttons = decorator(\n    \"button\",\n    shapes.button,\n    eventDispatcher,\n    DEFAULTS.keywords.button(),\n    buttonEventHandler,\n  );\n  const charts = decorator(\n    \"chart\",\n    shapes.chart,\n    eventDispatcher,\n    DEFAULTS.keywords.chart(),\n  );\n  const chips = decorator(\n    \"chip\",\n    shapes.chip,\n    eventDispatcher,\n    DEFAULTS.keywords.chip(),\n  );\n\n  const className = {\n    [`${card.kulLayout}-layout`]: true,\n  };\n\n  return (\n    <div class={className}>\n      {charts?.element?.length && (\n        <div class=\"section-1 chart\">{charts.element[0]}</div>\n      )}\n      {chips?.element?.length && (\n        <div class=\"section-2 chip\">{chips.element[0]}</div>\n      )}\n      {buttons?.element?.length && (\n        <div class=\"section-3 button\">{buttons.element[0]}</div>\n      )}\n    </div>\n  );\n}\n","import { h, VNode } from \"@stencil/core\";\n\nimport { kulManagerInstance } from \"../../../managers/kul-manager/kul-manager\";\nimport { KulDataCyAttributes } from \"../../../types/GenericTypes\";\nimport { RIPPLE_SURFACE_CLASS } from \"../../../variables/GenericVariables\";\nimport { DEFAULTS } from \"../helpers/kul-card-defaults\";\nimport { KulCardAdapter, KulCardCSSClasses } from \"../kul-card-declarations\";\n\n//#region Material layout\nexport function getMaterialLayout(adapter: KulCardAdapter): VNode {\n  const card = adapter.get.card();\n  const shapes = adapter.get.shapes();\n  const eventDispatcher = adapter.actions.dispatchEvent;\n  const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n  const buttons = decorator(\"button\", shapes.button, eventDispatcher);\n  const images = decorator(\n    \"image\",\n    shapes.image,\n    eventDispatcher,\n    DEFAULTS.material.image(),\n  );\n  const texts = decorator(\"text\", shapes.text, eventDispatcher);\n\n  const coverIndex = 0;\n  const cover: VNode = images.element?.length\n    ? images.element[coverIndex]\n    : null;\n\n  const titleIndex = 0;\n  const title = texts.element?.length ? shapes.text[titleIndex].value : null;\n\n  const subtitleIndex = 1;\n  const subtitle =\n    texts.element?.length > subtitleIndex\n      ? shapes.text[subtitleIndex].value\n      : null;\n\n  const descriptionIndex = 2;\n  const description =\n    texts.element?.length > descriptionIndex\n      ? shapes.text[descriptionIndex].value\n      : undefined;\n\n  const className = {\n    [`${card.kulLayout}-layout`]: true,\n    [KulCardCSSClasses.HAS_ACTIONS]: !!buttons.element?.length,\n  };\n\n  return (\n    <div class={className}>\n      <div\n        class={RIPPLE_SURFACE_CLASS}\n        data-cy={KulDataCyAttributes.RIPPLE}\n        onPointerDown={(e) => {\n          kulManagerInstance().theme.ripple.trigger(\n            e as PointerEvent,\n            e.currentTarget as HTMLElement,\n          );\n        }}\n      >\n        <div class=\"section-1\">{cover}</div>\n        <div class=\"section-2\">\n          <div class=\"sub-2 title\">{title}</div>\n          <div class=\"sub-2 subtitle\">{subtitle}</div>\n          <div class=\"sub-2 description\">{description}</div>\n        </div>\n      </div>\n      {buttons.element?.length ? (\n        <div class=\"section-3\">{buttons.element}</div>\n      ) : null}\n    </div>\n  );\n}\n//#endregion\n","import { h, VNode } from \"@stencil/core\";\n\nimport { kulManagerInstance } from \"../../../managers/kul-manager/kul-manager\";\nimport { DEFAULTS } from \"../helpers/kul-card-defaults\";\nimport { KulCardAdapter } from \"../kul-card-declarations\";\n\nexport function getUploadLayout(adapter: KulCardAdapter): VNode {\n  const card = adapter.get.card();\n  const shapes = adapter.get.shapes();\n  const eventDispatcher = adapter.actions.dispatchEvent;\n  const decorator = kulManagerInstance().data.cell.shapes.decorate;\n\n  const buttons = decorator(\n    \"button\",\n    shapes.button,\n    eventDispatcher,\n    DEFAULTS.upload.button(),\n  );\n  const uploads = decorator(\"upload\", shapes.upload, eventDispatcher);\n\n  const className = {\n    [`${card.kulLayout}-layout`]: true,\n  };\n\n  return (\n    <div class={className}>\n      {uploads?.element?.length && (\n        <div class=\"section-1 upload\">{uploads.element[0]}</div>\n      )}\n      {buttons?.element?.length && (\n        <div class=\"section-2 button\">{buttons.element[0]}</div>\n      )}\n    </div>\n  );\n}\n","import { VNode } from \"@stencil/core\";\n\nimport { KulCardAdapter, KulCardLayout } from \"../kul-card-declarations\";\nimport { getDebugLayout } from \"../layouts/kul-card-debug-layout\";\nimport { getKeywordsLayout } from \"../layouts/kul-card-keywords-layout\";\nimport { getMaterialLayout } from \"../layouts/kul-card-material-layout\";\nimport { getUploadLayout } from \"../layouts/kul-card-upload-layout\";\n\nexport const LAYOUT_HUB: {\n  [K in KulCardLayout]: (adapter: KulCardAdapter) => VNode;\n} = {\n  debug: (adapter) => getDebugLayout(adapter),\n  keywords: (adapter) => getKeywordsLayout(adapter),\n  material: (adapter) => getMaterialLayout(adapter),\n  upload: (adapter) => getUploadLayout(adapter),\n};\n","@import \"./styles/kul-card-main\";\n@import \"./styles/kul-card-classes\";\n\n:host {\n  /**\n * @prop --kul-card-backdrop: Sets the backdrop color of the component when visible.\n * Defaults to rgba(0, 0, 0, 0.32).\n */\n  --kul_card_backdrop: var(--kul-card-backdrop, rgba(0, 0, 0, 0.32));\n\n  display: block;\n  font-size: var(--kul-font-size);\n  height: var(--kul_card_height);\n  min-height: var(--kul_card_height);\n  min-width: var(--kul_card_width);\n  outline: none;\n  position: relative;\n  width: var(--kul_card_width);\n}\n\n#kul-component {\n  height: 100%;\n  width: 100%;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from \"@stencil/core\";\n\nimport { LAYOUT_HUB } from \"./helpers/kul-card-layout-hub\";\nimport {\n  KulCardProps,\n  KulCardEvent,\n  KulCardEventPayload,\n  KulCardAdapter,\n  KulCardLayout,\n} from \"./kul-card-declarations\";\nimport {\n  KulDataDataset,\n  KulDataShapesMap,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport type { GenericMap, GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-card\",\n  styleUrl: \"kul-card.scss\",\n  shadow: true,\n})\nexport class KulCard {\n  /**\n   * References the root HTML element of the component (<kul-card>).\n   */\n  @Element() rootElement: HTMLKulCardElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * The shapes of the component.\n   * @default \"\"\n   *\n   * @see KulDataShapesMap - For a list of possible shapes.\n   */\n  @State() shapes: KulDataShapesMap;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * The actual data of the card.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * Sets the layout.\n   * @default \"material\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulLayout: KulCardLayout = \"material\";\n  /**\n   * The width of the card, defaults to 100%. Accepts any valid CSS format (px, %, vw, etc.).\n   * @default \"100%\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulSizeX = \"100%\";\n  /**\n   * The height of the card, defaults to 100%. Accepts any valid CSS format (px, %, vh, etc.).\n   * @default \"100%\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulSizeY = \"100%\";\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Triggered when an event is fired.\n   */\n  @Event({\n    eventName: \"kul-card-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulCardEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulCardEvent): void {\n    this.kulEvent.emit({\n      comp: this,\n      id: this.rootElement.id,\n      eventType,\n      originalEvent: e,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulCardProps, descriptions);\n  }\n  /**\n   * Used to retrieve component's shapes.\n   * @returns {Promise<KulDataShapesMap>} Map of shapes.\n   */\n  @Method()\n  async getShapes(): Promise<KulDataShapesMap> {\n    return this.shapes;\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #adapter: KulCardAdapter = {\n    actions: {\n      dispatchEvent: async (e) => {\n        this.onKulEvent(e, \"kul-event\");\n      },\n    },\n    get: { card: () => this, shapes: () => this.shapes },\n  };\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.language.register(this);\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    if (this.kulData) {\n      this.shapes = this.#kulManager.data.cell.shapes.getAll(this.kulData);\n    }\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    if (!this.kulData && this.rootElement.children.length < 1) {\n      return;\n    }\n\n    const style: GenericMap = {\n      \"--kul_card_height\": this.kulSizeY ? this.kulSizeY : \"100%\",\n      \"--kul_card_width\": this.kulSizeX ? this.kulSizeX : \"100%\",\n    };\n\n    return (\n      <Host style={style}>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div\n          id={KUL_WRAPPER_ID}\n          onClick={(e) => this.onKulEvent(e, \"click\")}\n          onContextMenu={(e) => this.onKulEvent(e, \"contextmenu\")}\n          onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\")}\n        >\n          {LAYOUT_HUB[this.kulLayout.toLowerCase()](this.#adapter)}\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.language.unregister(this);\n    this.#kulManager.theme.unregister(this);\n  }\n}\n"],"version":3}