{"file":"kul-lazy.entry.js","mappings":"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","names":[],"sources":["src/components/kul-lazy/kul-lazy-declarations.ts","src/components/kul-lazy/kul-lazy.scss?tag=kul-lazy&encapsulation=shadow","src/components/kul-lazy/kul-lazy.tsx"],"sourcesContent":["import { KulEventPayload } from \"../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulLazyEvent = \"kul-event\" | \"load\" | \"ready\" | \"unmount\";\nexport interface KulLazyEventPayload\n  extends KulEventPayload<\"KulLazy\", KulLazyEvent> {}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulLazyProps {\n  kulComponentName = \"Sets the tag name of the component to be lazy loaded.\",\n  kulComponentProps = \"Sets the data of the component to be lazy loaded.\",\n  kulRenderMode = \"Decides when the sub-component should be rendered. By default when both the component props exist and the component is in the viewport.\",\n  kulShowPlaceholder = \"Displays an animated SVG placeholder until the component is loaded.\",\n  kulStyle = \"Custom style of the component.\",\n}\nexport interface KulLazyPropsInterface {\n  kulComponentName?: string;\n  kulComponentProps?: unknown;\n  kulRenderMode?: KulLazyRenderMode;\n  kulShowPlaceholder?: boolean;\n  kulStyle?: string;\n}\nexport type KulLazyRenderMode = \"both\" | \"props\" | \"viewport\";\n","@import \"styles/kul-lazy-main.scss\";\n@import \"styles/kul-lazy-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Prop,\n  State,\n} from \"@stencil/core\";\nimport { Method } from \"@stencil/core/internal\";\n\nimport {\n  KulLazyEvent,\n  KulLazyEventPayload,\n  KulLazyProps,\n  KulLazyRenderMode,\n} from \"./kul-lazy-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-lazy\",\n  styleUrl: \"kul-lazy.scss\",\n  shadow: true,\n})\nexport class KulLazy {\n  /**\n   * References the root HTML element of the component (<kul-lazy>).\n   */\n  @Element() rootElement: HTMLKulLazyElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * Sets whether the lazy entered the viewport or not.\n   */\n  @State() isInViewport = false;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * Sets the tag name of the component to be lazy loaded.\n   * @default \"\"\n   */\n  @Prop({ mutable: false }) kulComponentName = \"\";\n  /**\n   * Sets the data of the component to be lazy loaded.\n   * @default null\n   */\n  @Prop({ mutable: false }) kulComponentProps: unknown = null;\n  /**\n   * Decides when the sub-component should be rendered.\n   * By default when both the component props exist and the component is in the viewport.\n   * @default \"both\"\n   */\n  @Prop({ mutable: false }) kulRenderMode: KulLazyRenderMode = \"both\";\n  /**\n   * Displays an animated SVG placeholder until the component is loaded.\n   * @default true\n   */\n  @Prop({ mutable: false }) kulShowPlaceholder = true;\n  /**\n   * Customizes the style of the component. This property allows you to apply a custom CSS style to the component.\n   * @default \"\"\n   */\n  @Prop() kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #kulManager = kulManagerInstance();\n  #intObserver: IntersectionObserver = null;\n  #lazyComponent: HTMLElement = null;\n  #lazyComponentLoaded = false;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes the component's events.\n   */\n  @Event({\n    eventName: \"kul-lazy-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulLazyEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulLazyEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      id: this.rootElement.id,\n      originalEvent: e,\n      eventType,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Returns the HTMLElement of the component to lazy load.\n   * @returns {HTMLElement} Lazy loaded component.\n   */\n  @Method()\n  async getComponent(): Promise<HTMLElement> {\n    return this.#lazyComponent;\n  }\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulLazyProps, descriptions);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #setObserver(): void {\n    const callback: IntersectionObserverCallback = (\n      entries: IntersectionObserverEntry[],\n    ) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.#kulManager.debug.logs.new(\n            this,\n            \"kul-lazy entering the viewport, rendering \" +\n              this.kulComponentName +\n              \".\",\n          );\n          this.isInViewport = true;\n          this.#intObserver.unobserve(this.rootElement);\n        }\n      });\n    };\n    const options: IntersectionObserverInit = {\n      threshold: 0.25,\n    };\n    this.#intObserver = new IntersectionObserver(callback, options);\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.rootElement.addEventListener(`${this.kulComponentName}-event`, (e) => {\n      this.onKulEvent(e, \"kul-event\");\n    });\n    this.#kulManager.theme.register(this);\n    this.#setObserver();\n  }\n\n  componentDidLoad() {\n    this.#intObserver.observe(this.rootElement);\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    if (this.#lazyComponent && !this.#lazyComponentLoaded) {\n      this.#lazyComponentLoaded = true;\n      this.onKulEvent(new CustomEvent(\"load\"), \"load\");\n    }\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    let content: HTMLElement;\n    let resource: HTMLElement;\n    let className = this.kulComponentName;\n    switch (this.kulComponentName) {\n      case \"kul-button\":\n        //call_to_action.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path d=\"M42 6H6c-2.2 0-4 1.8-4 4v28c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4V10c0-2.2-1.8-4-4-4zm0 32H6v-6h36v6z\" />\n          </svg>\n        );\n        break;\n      case \"kul-card\":\n        //art_track.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path d=\"M44 26H28v-4h16v4zm0-12H28v4h16v-4zM28 34h16v-4H28v4zm-4-16v12c0 2.2-1.8 4-4 4H8c-2.2 0-4-1.8-4-4V18c0-2.2 1.8-4 4-4h12c2.2 0 4 1.8 4 4zm-3 12l-4.5-6-3.5 4.51-2.5-3.01L7 30h14z\" />\n          </svg>\n        );\n        break;\n      case \"kul-checkbox\":\n        //check_box_outline_blank.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path d=\"M38 10v28H10V10h28m0-4H10c-2.21 0-4 1.79-4 4v28c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4z\" />\n          </svg>\n        );\n        break;\n      case \"kul-chart\":\n        //chart-bar.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            version=\"1.1\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path d=\"M22,21H2V3H4V19H6V10H10V19H12V6H16V19H18V14H22V21Z\" />\n          </svg>\n        );\n        break;\n      case \"kul-image\":\n        //photo.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path d=\"M42 38V10c0-2.21-1.79-4-4-4H10c-2.21 0-4 1.79-4 4v28c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4zM17 27l5 6.01L29 24l9 12H10l7-9z\" />\n          </svg>\n        );\n        break;\n      default:\n        //art_track.svg\n        resource = (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 48 48\"\n          >\n            <path d=\"M44 26H28v-4h16v4zm0-12H28v4h16v-4zM28 34h16v-4H28v4zm-4-16v12c0 2.2-1.8 4-4 4H8c-2.2 0-4-1.8-4-4V18c0-2.2 1.8-4 4-4h12c2.2 0 4 1.8 4 4zm-3 12l-4.5-6-3.5 4.51-2.5-3.01L7 30h14z\" />\n          </svg>\n        );\n        break;\n    }\n    if (\n      (this.kulRenderMode === \"viewport\" && this.isInViewport) ||\n      (this.kulRenderMode === \"props\" && this.kulComponentProps) ||\n      (this.kulRenderMode === \"both\" &&\n        this.kulComponentProps &&\n        this.isInViewport)\n    ) {\n      const Tag = this.kulComponentName;\n      content = (\n        <Tag\n          {...(this.kulComponentProps as GenericObject)}\n          ref={(el: HTMLElement) => (this.#lazyComponent = el)}\n        ></Tag>\n      );\n      className += \" kul-loaded\";\n    } else if (this.kulShowPlaceholder) {\n      content = resource;\n      className += \" kul-to-be-loaded\";\n    }\n\n    return (\n      <Host class={className}>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>{content}</div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n    this.#intObserver?.unobserve(this.rootElement);\n  }\n}\n"],"version":3}