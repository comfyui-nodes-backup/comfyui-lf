{"file":"kul-chip.kul-tabbar.entry.js","mappings":"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","names":[],"sources":["src/components/kul-chip/kul-chip-declarations.ts","src/components/kul-chip/kul-chip.scss?tag=kul-chip&encapsulation=shadow","src/components/kul-chip/kul-chip.tsx","src/components/kul-tabbar/kul-tabbar-declarations.ts","src/components/kul-tabbar/kul-tabbar.scss?tag=kul-tabbar&encapsulation=shadow","src/components/kul-tabbar/kul-tabbar.tsx"],"sourcesContent":["import {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulEventPayload } from '../../types/GenericTypes';\n\nexport type KulChipEvent =\n    | 'blur'\n    | 'click'\n    | 'focus'\n    | 'pointerdown'\n    | 'ready'\n    | 'delete';\n\nexport interface KulChipEventArguments {\n    expansion?: boolean;\n    node?: KulDataNode;\n}\n\nexport interface KulChipDataset extends KulDataDataset {}\n\nexport interface KulChipEventPayload extends KulEventPayload {\n    node: KulDataNode;\n}\n\nexport enum KulChipProps {\n    kulData = 'The data of the chip chip.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulStyle = 'Custom style of the component.',\n    kulStyling = 'Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".',\n}\n\nexport interface KulChipPropsInterface {\n    kulData?: KulDataDataset;\n    kulRipple?: boolean;\n    kulStyle?: string;\n    kulStyling?: KulChipStyling;\n}\n\nexport type KulChipStyling = 'choice' | 'filter' | 'input' | 'standard';\n","@import './styles/kul-chip-main.scss';\n@import './styles/kul-chip-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    getAssetPath,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport {\n    KulChipEvent,\n    KulChipEventArguments,\n    KulChipEventPayload,\n    KulChipProps,\n    KulChipStyling,\n} from './kul-chip-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject, KulDataCyAttributes } from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KulDebugComponentInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\n\n@Component({\n    tag: 'kul-chip',\n    styleUrl: 'kul-chip.scss',\n    shadow: true,\n})\nexport class KulChip {\n    /**\n     * References the root HTML element of the component (<kul-chip>).\n     */\n    @Element() rootElement: HTMLKulChipElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugComponentInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Set of expanded nodes.\n     */\n    @State() expandedNodes: Set<KulDataNode> = new Set();\n    /**\n     * Children of a collapsed node.\n     */\n    @State() hiddenNodes: Set<KulDataNode> = new Set();\n    /**\n     * The selected chip items.\n     * @default []\n     */\n    @State() selectedNodes: Set<KulDataNode> = new Set();\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * The data of the chip list.\n     * @default []\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulStyle = '';\n    /**\n     * Styling of the chip component, includes: \"choice\", \"input\", \"filter\" and \"standard\".\n     * @default \"\"\n     */\n    @Prop({ mutable: true }) kulStyling: KulChipStyling = 'standard';\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #nodeItems: VNode[] = [];\n    #kulManager = kulManagerInstance();\n    #rippleSurface: HTMLElement[] = [];\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes event emitted.\n     */\n    @Event({\n        eventName: 'kul-chip-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulChipEventPayload>;\n\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulChipEvent,\n        args?: KulChipEventArguments\n    ) {\n        const { expansion, node } = args || {};\n        switch (eventType) {\n            case 'click':\n                if (expansion && this.#hasChildren(node)) {\n                    if (this.expandedNodes.has(node)) {\n                        this.expandedNodes.delete(node);\n                    } else {\n                        this.expandedNodes.add(node);\n                    }\n                    this.expandedNodes = new Set(this.expandedNodes);\n                } else if (node) {\n                    if (this.selectedNodes.has(node)) {\n                        this.selectedNodes.delete(node);\n                    } else {\n                        this.selectedNodes.add(node);\n                    }\n                    this.selectedNodes = new Set(this.selectedNodes);\n                }\n                break;\n            case 'delete':\n                const nodeIndex = this.kulData?.nodes?.indexOf(node);\n                if (nodeIndex > -1) {\n                    this.kulData.nodes.splice(nodeIndex, 1);\n                    this.refresh();\n                }\n                break;\n            case 'pointerdown':\n                if (this.kulRipple && this.#isClickable()) {\n                    this.#kulManager.theme.ripple.trigger(\n                        e as PointerEvent,\n                        this.#rippleSurface[node.id]\n                    );\n                }\n                break;\n        }\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            node,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugComponentInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugComponentInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's props values.\n     * @param {boolean} descriptions - When provided and true, the result will be the chip of props with their description.\n     * @returns {Promise<GenericObject>} Chip of props as object, each key will be a prop.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulChipProps, descriptions);\n    }\n    /**\n     * Returns the selected nodes.\n     * @returns {Promise<KulChipNode[]>} Selected nodes.\n     */\n    @Method()\n    async getSelected(): Promise<Set<KulDataNode>> {\n        return this.selectedNodes;\n    }\n    /**\n     * Selects one or more nodes in the chip component.\n     * @param {KulDataNode[] | string[]} nodes - An array of KulDataNode objects or node IDs to be selected.\n     * @returns {Promise<void>}\n     */\n    @Method()\n    async selectNodes(\n        nodes: (KulDataNode[] | string[]) & Array<any>\n    ): Promise<void> {\n        const nodesToAdd: Set<KulDataNode> = new Set();\n\n        const isStringArray =\n            Array.isArray(nodes) &&\n            nodes.every((item) => typeof item === 'string');\n\n        this.kulData?.nodes?.forEach((n: KulDataNode) => {\n            if (isStringArray) {\n                if (typeof n.id === 'string' && nodes.includes(n.id)) {\n                    nodesToAdd.add(n);\n                }\n            } else {\n                if (nodes.includes(n)) {\n                    nodesToAdd.add(n);\n                }\n            }\n        });\n        this.selectedNodes = nodesToAdd;\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n\n    /*-------------------------------------------------*/\n    /*           P r i v a t e   M e t h o d s         */\n    /*-------------------------------------------------*/\n\n    #hasChildren(node: KulDataNode) {\n        return !!(node.children && node.children.length);\n    }\n\n    #hasIconOnly(node: KulDataNode) {\n        return !!(node.icon && !node.value);\n    }\n\n    #isChoice() {\n        return this.kulStyling === 'choice';\n    }\n\n    #isClickable() {\n        return this.kulStyling === 'choice' || this.kulStyling === 'filter';\n    }\n\n    #isExpanded(node: KulDataNode) {\n        return this.expandedNodes.has(node);\n    }\n\n    #isFilter() {\n        return this.kulStyling === 'filter';\n    }\n\n    #isInput() {\n        return this.kulStyling === 'input';\n    }\n\n    #isSelected(node: KulDataNode) {\n        return this.selectedNodes.has(node);\n    }\n\n    #prepChip(node: KulDataNode, i: number) {\n        const className = {\n            chip: true,\n            'chip--only-icon': this.#hasIconOnly(node),\n            'chip--selected': this.#isSelected(node),\n        };\n        return (\n            <div\n                class={className}\n                data-value={node.id}\n                onClick={(e) => {\n                    this.onKulEvent(e, 'click', { node });\n                }}\n                role=\"row\"\n                title={node.description ?? ''}\n            >\n                {this.#prepRipple(node)}\n                <span class=\"indent\"></span>\n                {this.#prepIcons(node)}\n                <span\n                    role=\"button\"\n                    tabindex={i}\n                    class=\"chip__primary-action\"\n                    data-cy={KulDataCyAttributes.INPUT}\n                    onBlur={(e) => {\n                        this.onKulEvent(e, 'blur', { node });\n                    }}\n                    onFocus={(e) => {\n                        this.onKulEvent(e, 'focus', { node });\n                    }}\n                >\n                    <span class=\"chip__text\">{node.value}</span>\n                </span>\n                {this.#isInput() && this.#prepDeleteIcon(node)}\n            </div>\n        );\n    }\n\n    #prepChipSet() {\n        const elements: VNode[] = [];\n\n        const nodeCount = this.kulData?.nodes?.length;\n        for (let i = 0; nodeCount && i < nodeCount; i++) {\n            this.#nodeItems = [];\n            const node = this.kulData.nodes[i];\n            this.#prepNode(node, 0);\n            elements.push(<div class=\"node\">{this.#nodeItems}</div>);\n        }\n\n        return elements;\n    }\n\n    #prepDeleteIcon(node: KulDataNode) {\n        const path = getAssetPath(`./assets/svg/clear.svg`);\n        const style = {\n            mask: `url('${path}') no-repeat center`,\n            webkitMask: `url('${path}') no-repeat center`,\n        };\n        return (\n            <div\n                class=\"chip__icon chip__icon--trailing\"\n                data-cy={KulDataCyAttributes.BUTTON}\n                key={node.id + '_delete'}\n                onClick={(e) => {\n                    this.onKulEvent(e, 'delete', { node });\n                }}\n                style={style}\n            ></div>\n        );\n    }\n\n    #prepIcons(node: KulDataNode) {\n        const icons: VNode[] = [];\n\n        const className = {\n            chip__icon: true,\n            'chip__icon--leading': true,\n            'chip__icon--leading-hidden':\n                this.kulStyling === 'filter' && this.#isSelected(node),\n        };\n\n        if (node.icon) {\n            const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n            const style = {\n                mask: `url('${path}') no-repeat center`,\n                webkitMask: `url('${path}') no-repeat center`,\n            };\n            icons.push(<div class={className} style={style}></div>);\n        }\n\n        if (this.#isFilter()) {\n            icons.push(\n                <span class=\"chip__checkmark\">\n                    <svg class=\"chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n                        <path\n                            class=\"chip__checkmark-path\"\n                            fill=\"none\"\n                            stroke=\"black\"\n                            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n                        />\n                    </svg>\n                </span>\n            );\n        }\n\n        return icons;\n    }\n\n    #prepNode(node: KulDataNode, indent: number) {\n        const className = {\n            'chip-wrapper': true,\n            'chip-wrapper--hidden-children':\n                this.#hasChildren(node) && !this.#showChildren(node),\n        };\n        const indentStyle = {\n            ['--kul_chip_indent_offset']: indent.toString(),\n        };\n\n        this.#nodeItems.push(\n            <div class={className}>\n                <div class=\"indent\" style={indentStyle}></div>\n                {this.#hasChildren(node) ? (\n                    <div\n                        class={`node__expand ${this.#isExpanded(node) ? 'node__expand--expanded' : ''}`}\n                        onClick={(e) => {\n                            this.onKulEvent(e, 'click', {\n                                expansion: true,\n                                node,\n                            });\n                        }}\n                    ></div>\n                ) : indent ? (\n                    <div class={`node__expand node__expand--placeholder`}></div>\n                ) : null}\n                {this.#prepChip(node, indent)}\n            </div>\n        );\n\n        if (this.#showChildren(node)) {\n            for (let index = 0; index < node.children.length; index++) {\n                if (node.children[index]) {\n                    this.#prepNode(node.children[index], indent + 1);\n                }\n            }\n        }\n    }\n\n    #prepRipple(node: KulDataNode) {\n        if (this.kulRipple && this.#isClickable()) {\n            return (\n                <div\n                    onPointerDown={(e) =>\n                        this.onKulEvent(e, 'pointerdown', { node })\n                    }\n                    ref={(el) => {\n                        if (el && this.kulRipple) {\n                            this.#rippleSurface[node.id] = el;\n                        }\n                    }}\n                ></div>\n            );\n        }\n    }\n\n    #showChildren(node: KulDataNode) {\n        return this.expandedNodes.has(node);\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        if (this.#rippleSurface?.length) {\n            this.#rippleSurface.forEach((el) => {\n                this.#kulManager.theme.ripple.setup(el);\n            });\n        }\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        if (Object.keys(this.#rippleSurface).length) {\n            for (const key in this.#rippleSurface) {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        this.#rippleSurface,\n                        key\n                    )\n                ) {\n                    const surface = this.#rippleSurface[key];\n                    this.#kulManager.theme.ripple.setup(surface);\n                }\n            }\n        }\n\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        this.#nodeItems = [];\n        const className = {\n            'chip-set': true,\n            'chip-set--choice': this.#isChoice(),\n            'chip-set--filter': this.#isFilter(),\n            'chip-set--input': this.#isInput(),\n        };\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class={className} role=\"grid\">\n                        {this.#prepChipSet()}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n}\n","import { KulDataDataset, KulDataNode, KulEventPayload } from '../../components';\n\nexport type KulTabbarEvent = 'click' | 'pointerdown' | 'ready';\n\nexport interface KulTabbarEventPayload extends KulEventPayload {\n    index?: number;\n    node?: KulDataNode;\n}\n\nexport enum KulTabbarProps {\n    kulData = 'Actual data of the component.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulStyle = 'Custom style of the component.',\n    kulValue = \"Sets the initial selected node's index.\",\n}\n\nexport interface KulTabbarPropsInterface {\n    kulData?: KulDataDataset;\n    kulRipple?: boolean;\n    kulStyle?: string;\n    kulValue?: number;\n}\n\nexport interface KulTabbarState {\n    index?: number;\n    node?: KulDataNode;\n}\n","@import './styles/kul-tabbar-main.scss';\n@import './styles/kul-tabbar-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulTabbarEventPayload,\n    KulTabbarEvent,\n    KulTabbarProps,\n    KulTabbarState,\n} from './kul-tabbar-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject, KulDataCyAttributes } from '../../types/GenericTypes';\nimport { KulScrollOnHoverElement } from '../../managers/kul-scroll-on-hover/kul-scroll-on-hover-declarations';\nimport { KulThemeColorValues } from '../../managers/kul-theme/kul-theme-declarations';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugComponentInfo } from '../../components';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\n\n@Component({\n    tag: 'kul-tabbar',\n    styleUrl: 'kul-tabbar.scss',\n    shadow: true,\n})\nexport class KulTabbar {\n    /**\n     * References the root HTML element of the component (<kul-tabbar>).\n     */\n    @Element() rootElement: HTMLElement;\n\n    /*-------------------------------------------------*/\n    /*                   S t a t e s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugComponentInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * The node currently selected.\n     */\n    @State() value: KulTabbarState = null;\n\n    /*-------------------------------------------------*/\n    /*                    P r o p s                    */\n    /*-------------------------------------------------*/\n\n    /**\n     * Actual data of the component.\n     * @default null\n     */\n    @Prop() kulData: KulDataDataset = null;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    /**\n     * Sets the initial selected node's index.\n     * @default null\n     */\n    @Prop({ mutable: true, reflect: true }) kulValue: number = null;\n\n    /*-------------------------------------------------*/\n    /*       I n t e r n a l   V a r i a b l e s       */\n    /*-------------------------------------------------*/\n\n    #kulManager = kulManagerInstance();\n    #rippleSurface: HTMLElement[];\n    #scrollArea: KulScrollOnHoverElement;\n\n    /*-------------------------------------------------*/\n    /*                   E v e n t s                   */\n    /*-------------------------------------------------*/\n\n    /**\n     * Describes events emitted.\n     */\n    @Event({\n        eventName: 'kul-tabbar-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulTabbarEventPayload>;\n\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulTabbarEvent,\n        index = 0,\n        node?: KulDataNode\n    ) {\n        if (eventType === 'pointerdown') {\n            if (this.kulRipple) {\n                this.#kulManager.theme.ripple.trigger(\n                    e as PointerEvent,\n                    this.#rippleSurface[index]\n                );\n            }\n        }\n        if (eventType === 'click') {\n            this.value = {\n                index,\n                node,\n            };\n        }\n\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            node,\n        });\n    }\n\n    /*-------------------------------------------------*/\n    /*           P u b l i c   M e t h o d s           */\n    /*-------------------------------------------------*/\n\n    /**\n     * Retrieves the debug information reflecting the current state of the component.\n     * @returns {Promise<KulDebugComponentInfo>} A promise that resolves to a KulDebugComponentInfo object containing debug information.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugComponentInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Retrieves the properties of the component, with optional descriptions.\n     * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n     * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulTabbarProps, descriptions);\n    }\n    /**\n     * Returns the selected node and its index.\n     * @returns {Promise<KulTabbarState>} Selected node and its index.\n     */\n    @Method()\n    async getValue(): Promise<KulTabbarState> {\n        return this.value;\n    }\n    /**\n     * Triggers a re-render of the component to reflect any state changes.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Sets the value of the component based on the provided argument.\n     * @param {number | string} value - The index of the node or the id of the node.\n     * @returns {Promise<KulTabbarState>} The newly set value.\n     */\n    @Method()\n    async setValue(value: number | string): Promise<KulTabbarState> {\n        let index: number;\n        let node: KulDataNode;\n\n        if (typeof value === 'number') {\n            index = value;\n            node = this.kulData.nodes[index];\n        } else if (typeof value === 'string') {\n            index = this.kulData.nodes.findIndex((node) => node.id === value);\n            node = this.kulData.nodes[index];\n        }\n\n        this.value = {\n            index,\n            node,\n        };\n\n        return this.value;\n    }\n\n    /*-------------------------------------------------*/\n    /*          L i f e c y c l e   H o o k s          */\n    /*-------------------------------------------------*/\n\n    componentWillLoad() {\n        if (this.kulValue !== null) {\n            this.value = this.kulData[this.kulValue];\n        }\n\n        this.#kulManager.theme.register(this);\n    }\n\n    componentDidLoad() {\n        if (this.#rippleSurface?.length) {\n            this.#rippleSurface.forEach((el) => {\n                this.#kulManager.theme.ripple.setup(el);\n            });\n        }\n        if (this.#scrollArea) {\n            this.#kulManager.scrollOnHover.register(this.#scrollArea);\n        }\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n\n    render() {\n        if (!this.#kulManager.data.node.exists(this.kulData)) {\n            return;\n        }\n\n        this.#rippleSurface = [];\n        const nodes = this.kulData.nodes;\n        const elements: Array<VNode> = [];\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const isActive = node === this.value?.node;\n            const tabClass: Record<string, boolean> = {\n                tab: true,\n                'tab--active': isActive ? true : false,\n            };\n\n            elements.push(\n                <button\n                    aria-selected={isActive ? true : false}\n                    class={tabClass}\n                    data-cy={KulDataCyAttributes.BUTTON}\n                    onClick={(e) => {\n                        this.onKulEvent(e, 'click', i, node);\n                    }}\n                    onPointerDown={(e) => {\n                        this.onKulEvent(e, 'pointerdown', i, node);\n                    }}\n                    role=\"tab\"\n                    tabIndex={i}\n                    title={node.description ? node.description : null}\n                >\n                    <div\n                        ref={(el) => {\n                            if (el && this.kulRipple) {\n                                this.#rippleSurface.push(el);\n                            }\n                        }}\n                    ></div>\n                    <span class=\"tab__content\">\n                        {node.icon ? (\n                            <kul-image\n                                class=\"tab__icon\"\n                                kulColor={`var(${KulThemeColorValues.PRIMARY})`}\n                                kulSizeX=\"24px\"\n                                kulSizeY=\"24px\"\n                                kulValue={node.icon}\n                            />\n                        ) : null}\n                        {node.value ? (\n                            <span class=\"tab__text-label\">{node.value}</span>\n                        ) : null}\n                    </span>\n                    <span\n                        class={`tab__indicator ${\n                            isActive ? ' tab__indicator--active' : ''\n                        }`}\n                    >\n                        <span class=\"tab__indicator-content tab__indicator-content--underline\"></span>\n                    </span>\n                </button>\n            );\n        }\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class=\"tabbar\" role=\"tablist\">\n                        <div class=\"tabbar_scroller\">\n                            <div\n                                class=\"tabbar__scroll-area\"\n                                ref={(el: HTMLElement) =>\n                                    (this.#scrollArea =\n                                        el as KulScrollOnHoverElement)\n                                }\n                            >\n                                <div class=\"tabbar__scroll-content\">\n                                    {elements}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n\n    disconnectedCallback() {\n        if (this.#scrollArea) {\n            this.#kulManager.scrollOnHover.unregister(this.#scrollArea);\n        }\n        this.#kulManager.theme.unregister(this);\n    }\n}\n"],"version":3}