{"file":"kul-carousel.entry.js","mappings":"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","names":[],"sources":["src/components/kul-carousel/helpers/kul-carousel-actions.tsx","src/components/kul-carousel/helpers/kul-carousel-components.tsx","src/components/kul-carousel/kul-carousel-declarations.ts","src/components/kul-carousel/kul-carousel.scss?tag=kul-carousel&encapsulation=shadow","src/components/kul-carousel/kul-carousel.tsx"],"sourcesContent":["import { KulCarouselAdapterActions } from \"../kul-carousel-declarations\";\n\nexport const ACTIONS: KulCarouselAdapterActions = {\n  autoplay: {\n    start(adapter) {\n      const carousel = adapter.get.carousel();\n\n      if (carousel.kulAutoPlay && carousel.kulInterval > 0) {\n        adapter.set.interval(\n          setInterval(() => {\n            adapter.actions.next(adapter);\n          }, carousel.kulInterval),\n        );\n      }\n    },\n\n    stop(adapter) {\n      const interval = adapter.get.interval();\n\n      if (interval) {\n        clearInterval(interval);\n        adapter.set.interval(null);\n      }\n    },\n  },\n  next: (adapter) => {\n    const currentIndex = adapter.get.state.currentIndex();\n    const totalSlides = adapter.get.totalSlides();\n\n    adapter.set.state.currentIndex((currentIndex + 1) % totalSlides);\n  },\n  previous: (adapter) => {\n    const currentIndex = adapter.get.state.currentIndex();\n    const totalSlides = adapter.get.totalSlides();\n\n    adapter.set.state.currentIndex(\n      (currentIndex - 1 + totalSlides) % totalSlides,\n    );\n  },\n  toSlide: (adapter, value) => {\n    adapter.set.state.currentIndex(value);\n  },\n};\n","import { h } from \"@stencil/core\";\n\nimport { KulCarouselAdapterComponents } from \"../kul-carousel-declarations\";\n\nconst BACK_ICON = \"chevron_left\";\nconst FORWARD_ICON = \"chevron_right\";\n\nexport const COMPONENTS: KulCarouselAdapterComponents = {\n  back: (adapter) => {\n    return (\n      <kul-button\n        class=\"kul-full-height\"\n        id={BACK_ICON}\n        kulIcon=\"chevron_left\"\n        onClick={() => adapter.actions.previous(adapter)}\n        title=\"View previous slide.\"\n      ></kul-button>\n    );\n  },\n  forward: (adapter) => {\n    return (\n      <kul-button\n        class=\"kul-full-height\"\n        id={BACK_ICON}\n        kulIcon={FORWARD_ICON}\n        onClick={() => adapter.actions.next(adapter)}\n        title=\"View next slide.\"\n      ></kul-button>\n    );\n  },\n};\n","import { VNode } from \"@stencil/core\";\n\nimport { KulCarousel } from \"./kul-carousel\";\nimport {\n  KulDataDataset,\n  KulDataShapes,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulManager } from \"../../managers/kul-manager/kul-manager\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                  A d a p t e r                  */\n/*-------------------------------------------------*/\nexport interface KulCarouselAdapter {\n  actions: KulCarouselAdapterActions;\n  components: KulCarouselAdapterComponents;\n  get: KulCarouselAdapterGetters;\n  set: KulCarouselAdapterSetters;\n}\nexport interface KulCarouselAdapterActions {\n  autoplay: {\n    start: (adapter: KulCarouselAdapter) => void;\n    stop: (adapter: KulCarouselAdapter) => void;\n  };\n  next: (adapter: KulCarouselAdapter) => void;\n  previous: (adapter: KulCarouselAdapter) => void;\n  toSlide: (adapter: KulCarouselAdapter, value: number) => void;\n}\nexport interface KulCarouselAdapterComponents {\n  back: (adapter: KulCarouselAdapter) => VNode;\n  forward: (adapter: KulCarouselAdapter) => VNode;\n}\nexport interface KulCarouselAdapterGetters {\n  carousel: () => KulCarousel;\n  interval: () => NodeJS.Timeout;\n  manager: () => KulManager;\n  state: {\n    currentIndex: () => number;\n  };\n  totalSlides: () => number;\n}\nexport interface KulCarouselAdapterSetters {\n  interval: (value: NodeJS.Timeout) => void;\n  state: { currentIndex: (value: number) => void };\n}\n/*-------------------------------------------------*/\n/*                   E v e n t s                   */\n/*-------------------------------------------------*/\nexport type KulCarouselEvent = \"kul-event\" | \"ready\" | \"unmount\";\nexport interface KulCarouselEventPayload\n  extends KulEventPayload<\"KulCarousel\", KulCarouselEvent> {}\n/*-------------------------------------------------*/\n/*                    P r o p s                    */\n/*-------------------------------------------------*/\nexport enum KulCarouselProps {\n  kulAutoPlay = \"Enable or disable autoplay for the carousel.\",\n  kulData = \"Actual data to carousel.\",\n  kulInterval = \"Interval in milliseconds for autoplay.\",\n  kulShape = \"Sets the type of shapes to compare.\",\n  kulStyle = \"Sets a custom CSS style for the component.\",\n}\nexport interface KulCarouselPropsInterface {\n  kulAutoPlay?: boolean;\n  kulData?: KulDataDataset;\n  kulInterval?: number;\n  kulShape?: KulDataShapes;\n  kulStyle?: string;\n}\n","@import \"./styles/kul-carousel-main.scss\";\n@import \"./styles/kul-carousel-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  Fragment,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { ACTIONS } from \"./helpers/kul-carousel-actions\";\nimport { COMPONENTS } from \"./helpers/kul-carousel-components\";\nimport {\n  KulCarouselAdapter,\n  KulCarouselEvent,\n  KulCarouselEventPayload,\n  KulCarouselProps,\n} from \"./kul-carousel-declarations\";\nimport {\n  KulDataCell,\n  KulDataDataset,\n  KulDataShapes,\n  KulDataShapesMap,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-carousel\",\n  styleUrl: \"kul-carousel.scss\",\n  shadow: true,\n})\nexport class KulCarousel {\n  /**\n   * References the root HTML element of the component (<kul-carousel>).\n   */\n  @Element() rootElement: HTMLKulCarouselElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * Tracks the current index of the displayed item.\n   * @default 0\n   */\n  @State() currentIndex = 0;\n  /**\n   * Collection of shapes/cells to display in the carousel.\n   * @default {}\n   */\n  @State() shapes: KulDataShapesMap = {};\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * Actual data of the carousel.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * Enable or disable autoplay for the carousel.\n   * @default false\n   */\n  @Prop() kulAutoPlay = false;\n  /**\n   * Interval in milliseconds for autoplay.\n   * @default 3000\n   */\n  @Prop() kulInterval = 3000;\n  /**\n   * Sets the type of shapes to compare.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulShape: KulDataShapes = \"image\";\n  /**\n   * Custom style of the component.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #interval: NodeJS.Timeout;\n  #kulManager = kulManagerInstance();\n  #lastSwipeTime = 0;\n  #swipeThrottleDelay = 300;\n  #touchStartX = 0;\n  #touchEndX = 0;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-carousel-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulCarouselEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulCarouselEvent) {\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*                 W a t c h e r s                 */\n  /*-------------------------------------------------*/\n\n  @Watch(\"kulData\")\n  @Watch(\"kulShape\")\n  async updateShapes() {\n    try {\n      this.shapes = this.#kulManager.data.cell.shapes.getAll(this.kulData);\n    } catch (error) {\n      this.#kulManager.debug.logs.new(\n        this,\n        \"Error updating shapes: \" + error,\n        \"error\",\n      );\n    }\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Fetches debug information of the component's current state.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Used to retrieve component's props values.\n   * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n   * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulCarouselProps, descriptions);\n  }\n  /**\n   * Changes the slide to the specified index if it's within bounds.\n   * @param {number} index - The number of the slide to go to.\n   */\n  @Method()\n  async goToSlide(index: number) {\n    this.#adapter.actions.toSlide(this.#adapter, index);\n  }\n  /**\n   * Advances to the next slide, looping back to the start if at the end.\n   */\n  @Method()\n  async nextSlide() {\n    this.#adapter.actions.next(this.#adapter);\n  }\n  /**\n   * Moves to the previous slide, looping to the last slide if at the beginning.\n   */\n  @Method()\n  async prevSlide() {\n    this.#adapter.actions.previous(this.#adapter);\n  }\n  /**\n   * This method is used to trigger a new render of the component.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*                   M e t h o d s                 */\n  /*-------------------------------------------------*/\n\n  #adapter: KulCarouselAdapter = {\n    actions: ACTIONS,\n    components: COMPONENTS,\n    get: {\n      carousel: () => this,\n      interval: () => this.#interval,\n      manager: () => this.#kulManager,\n      state: { currentIndex: () => this.currentIndex },\n      totalSlides: () => this.#getTotalSlides(),\n    },\n    set: {\n      interval: (value) => (this.#interval = value),\n      state: { currentIndex: (value) => (this.currentIndex = value) },\n    },\n  };\n\n  #getTotalSlides() {\n    return this.shapes?.[this.kulShape]?.length || 0;\n  }\n\n  #hasShapes() {\n    return !!this.shapes?.[this.kulShape];\n  }\n\n  #prepCarousel(): VNode {\n    if (this.#hasShapes()) {\n      const shapes = this.shapes[this.kulShape];\n      if (shapes?.length) {\n        return (\n          <Fragment>\n            <div class=\"carousel__track\" role=\"region\" aria-live=\"polite\">\n              {this.#prepSlide()}\n            </div>\n            <div class=\"carousel__controls\">\n              {this.#adapter.components.back(this.#adapter)}\n              {this.#adapter.components.forward(this.#adapter)}\n            </div>\n            <div class=\"carousel__indicators-wrapper\">\n              <div class=\"carousel__indicators\">{this.#prepIndicators()}</div>\n            </div>\n          </Fragment>\n        );\n      }\n    }\n  }\n\n  #prepIndicators(): VNode[] {\n    const totalSlides = this.#getTotalSlides();\n    const maxIndicators = 9;\n    const halfMax = Math.floor(maxIndicators / 2);\n\n    let start = Math.max(0, this.currentIndex - halfMax);\n    let end = Math.min(totalSlides, start + maxIndicators);\n\n    if (end === totalSlides) {\n      start = Math.max(0, end - maxIndicators);\n    }\n\n    const indicators = [];\n\n    if (start > 0) {\n      const className = {\n        carousel__chevron: true,\n        \"carousel__chevron--left\": true,\n      };\n      indicators.push(\n        <span\n          class={className}\n          onClick={() => this.#adapter.actions.toSlide(this.#adapter, 0)}\n          title={`Jump to the first slide (#${0})`}\n        >\n          «\n        </span>,\n      );\n    }\n\n    this.shapes[this.kulShape]\n      ?.slice(start, end)\n      .forEach((_: Partial<KulDataCell<KulDataShapes>>, index: number) => {\n        const actualIndex = start + index;\n        const isCurrent = actualIndex === this.currentIndex;\n        const isFirst = actualIndex === start;\n        const isLast = actualIndex === end - 1;\n\n        const className = {\n          carousel__indicator: true,\n          \"carousel__indicator--active\": isCurrent,\n          \"carousel__indicator--small\": (isFirst || isLast) && !isCurrent,\n        };\n        indicators.push(\n          <span\n            class={className}\n            onClick={() =>\n              this.#adapter.actions.toSlide(this.#adapter, actualIndex)\n            }\n            title={`#${index}`}\n          />,\n        );\n      });\n\n    if (end < totalSlides) {\n      const className = {\n        carousel__chevron: true,\n        \"carousel__chevron--right\": true,\n      };\n      indicators.push(\n        <span\n          class={className}\n          onClick={() =>\n            this.#adapter.actions.toSlide(this.#adapter, totalSlides - 1)\n          }\n          title={`Jump to the last slide (#${totalSlides - 1})`}\n        >\n          »\n        </span>,\n      );\n    }\n\n    return indicators;\n  }\n\n  #prepSlide(): VNode {\n    const props: Partial<KulDataCell<KulDataShapes>>[] = this.shapes[\n      this.kulShape\n    ].map(() => ({\n      htmlProps: {\n        className: \"kul-fit\",\n      },\n    }));\n\n    const decoratedShapes = this.#kulManager.data.cell.shapes.decorate(\n      this.kulShape,\n      this.shapes[this.kulShape],\n      async (e) => this.onKulEvent(e, \"kul-event\"),\n      props,\n    ).element;\n\n    return (\n      <div class=\"carousel__slide\" data-index={this.currentIndex}>\n        <Fragment>{decoratedShapes[this.currentIndex]}</Fragment>\n      </div>\n    );\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n    this.updateShapes();\n    if (this.kulAutoPlay) {\n      this.#adapter.actions.autoplay.start(this.#adapter);\n    }\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          <div\n            class=\"carousel\"\n            onTouchStart={(e) => (this.#touchStartX = e.touches[0].clientX)}\n            onTouchMove={() => {\n              const swipeDistance = this.#touchEndX - this.#touchStartX;\n              const swipeThreshold = 50;\n\n              const currentTime = performance.now();\n\n              if (\n                Math.abs(swipeDistance) > swipeThreshold &&\n                currentTime - this.#lastSwipeTime > this.#swipeThrottleDelay\n              ) {\n                this.#lastSwipeTime = currentTime;\n                if (swipeDistance > 0) {\n                  this.#adapter.actions.previous(this.#adapter);\n                } else {\n                  this.#adapter.actions.next(this.#adapter);\n                }\n              }\n            }}\n            onTouchEnd={(e) => (this.#touchEndX = e.touches[0].clientX)}\n          >\n            {this.#prepCarousel()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n    this.#adapter.actions.autoplay.stop(this.#adapter);\n  }\n}\n"],"version":3}