{"file":"kul-carousel.entry.js","mappings":"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","names":[],"sources":["src/components/kul-carousel/helpers/kul-carousel-actions.tsx","src/components/kul-carousel/helpers/kul-carousel-components.tsx","src/components/kul-carousel/kul-carousel-declarations.ts","src/components/kul-carousel/kul-carousel.scss?tag=kul-carousel&encapsulation=shadow","src/components/kul-carousel/kul-carousel.tsx"],"sourcesContent":["import { KulCarouselAdapterActions } from '../kul-carousel-declarations';\n\nexport const ACTIONS: KulCarouselAdapterActions = {\n    //#region Autoplay\n    autoplay: {\n        start(adapter) {\n            const carousel = adapter.get.carousel();\n\n            if (carousel.kulAutoPlay && carousel.kulInterval > 0) {\n                adapter.set.interval(\n                    setInterval(() => {\n                        adapter.actions.next(adapter);\n                    }, carousel.kulInterval)\n                );\n            }\n        },\n\n        stop(adapter) {\n            const interval = adapter.get.interval();\n\n            if (interval) {\n                clearInterval(interval);\n                adapter.set.interval(null);\n            }\n        },\n    },\n    //#endregion\n\n    //#region Next\n    next: (adapter) => {\n        const currentIndex = adapter.get.state.currentIndex();\n        const totalSlides = adapter.get.totalSlides();\n\n        adapter.set.state.currentIndex((currentIndex + 1) % totalSlides);\n    },\n    //#endregion\n\n    //#region Previous\n    previous: (adapter) => {\n        const currentIndex = adapter.get.state.currentIndex();\n        const totalSlides = adapter.get.totalSlides();\n\n        adapter.set.state.currentIndex(\n            (currentIndex - 1 + totalSlides) % totalSlides\n        );\n    },\n    //#endregion\n\n    //#region ToSlide\n    toSlide: (adapter, value) => {\n        adapter.set.state.currentIndex(value);\n    },\n    //#endregion\n};\n","import { h } from '@stencil/core';\nimport { KulCarouselAdapterComponents } from '../kul-carousel-declarations';\n\nconst BACK_ICON = 'chevron_left';\nconst FORWARD_ICON = 'chevron_right';\n\nexport const COMPONENTS: KulCarouselAdapterComponents = {\n    //#region Back\n    back: (adapter) => {\n        return (\n            <kul-button\n                class=\"kul-full-height\"\n                id={BACK_ICON}\n                kulIcon=\"chevron_left\"\n                onClick={() => adapter.actions.previous(adapter)}\n                title=\"View previous slide.\"\n            ></kul-button>\n        );\n    },\n    //#endregion\n\n    //#region Forward\n    forward: (adapter) => {\n        return (\n            <kul-button\n                class=\"kul-full-height\"\n                id={BACK_ICON}\n                kulIcon={FORWARD_ICON}\n                onClick={() => adapter.actions.next(adapter)}\n                title=\"View next slide.\"\n            ></kul-button>\n        );\n    },\n    //#endregion\n};\n","import { VNode } from '@stencil/core';\nimport {\n    KulDataDataset,\n    KulDataShapes,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulManager } from '../../managers/kul-manager/kul-manager';\nimport { KulEventPayload } from '../../types/GenericTypes';\nimport { KulCarousel } from './kul-carousel';\n\n//#region Adapter\nexport interface KulCarouselAdapter {\n    actions: KulCarouselAdapterActions;\n    components: KulCarouselAdapterComponents;\n    get: KulCarouselAdapterGetters;\n    set: KulCarouselAdapterSetters;\n}\nexport interface KulCarouselAdapterActions {\n    autoplay: {\n        start: (adapter: KulCarouselAdapter) => void;\n        stop: (adapter: KulCarouselAdapter) => void;\n    };\n    next: (adapter: KulCarouselAdapter) => void;\n    previous: (adapter: KulCarouselAdapter) => void;\n    toSlide: (adapter: KulCarouselAdapter, value: number) => void;\n}\nexport interface KulCarouselAdapterComponents {\n    back: (adapter: KulCarouselAdapter) => VNode;\n    forward: (adapter: KulCarouselAdapter) => VNode;\n}\nexport interface KulCarouselAdapterGetters {\n    carousel: () => KulCarousel;\n    interval: () => NodeJS.Timeout;\n    manager: () => KulManager;\n    state: {\n        currentIndex: () => number;\n    };\n    totalSlides: () => number;\n}\nexport interface KulCarouselAdapterSetters {\n    interval: (value: NodeJS.Timeout) => void;\n    state: { currentIndex: (value: number) => void };\n}\n//#endregion\n\n//#region Events\nexport type KulCarouselEvent = 'kul-event' | 'ready' | 'unmount';\nexport interface KulCarouselEventPayload\n    extends KulEventPayload<'KulCarousel', KulCarouselEvent> {}\n//#endregion\n\n//#region Props\nexport enum KulCarouselProps {\n    kulAutoPlay = 'Enable or disable autoplay for the carousel.',\n    kulData = 'Actual data to carousel.',\n    kulInterval = 'Interval in milliseconds for autoplay.',\n    kulShape = 'Sets the type of shapes to compare.',\n    kulStyle = 'Sets a custom CSS style for the component.',\n}\nexport interface KulCarouselPropsInterface {\n    kulAutoPlay?: boolean;\n    kulData?: KulDataDataset;\n    kulInterval?: number;\n    kulShape?: KulDataShapes;\n    kulStyle?: string;\n}\n//#endregion\n","@import './styles/kul-carousel-main.scss';\n@import './styles/kul-carousel-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    Fragment,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n    Watch,\n} from '@stencil/core';\nimport {\n    KulDataCell,\n    KulDataDataset,\n    KulDataShapes,\n    KulDataShapesMap,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject } from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport { ACTIONS } from './helpers/kul-carousel-actions';\nimport { COMPONENTS } from './helpers/kul-carousel-components';\nimport {\n    KulCarouselAdapter,\n    KulCarouselEvent,\n    KulCarouselEventPayload,\n    KulCarouselProps,\n} from './kul-carousel-declarations';\n\n@Component({\n    tag: 'kul-carousel',\n    styleUrl: 'kul-carousel.scss',\n    shadow: true,\n})\nexport class KulCarousel {\n    /**\n     * References the root HTML element of the component (<kul-carousel>).\n     */\n    @Element() rootElement: HTMLKulCarouselElement;\n\n    //#region States\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Tracks the current index of the displayed item.\n     * @default 0\n     */\n    @State() currentIndex = 0;\n    /**\n     * Collection of shapes/cells to display in the carousel.\n     * @default {}\n     */\n    @State() shapes: KulDataShapesMap = {};\n    //#endregion\n    //#region Props\n    /**\n     * Actual data of the carousel.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * Enable or disable autoplay for the carousel.\n     * @default false\n     */\n    @Prop() kulAutoPlay = false;\n    /**\n     * Interval in milliseconds for autoplay.\n     * @default 3000\n     */\n    @Prop() kulInterval = 3000;\n    /**\n     * Sets the type of shapes to compare.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulShape: KulDataShapes = 'image';\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    //#endregion\n    //#region Internal variables\n    #interval: NodeJS.Timeout;\n    #kulManager = kulManagerInstance();\n    #lastSwipeTime = 0;\n    #swipeThrottleDelay = 300;\n    #touchStartX = 0;\n    #touchEndX = 0;\n    //#endregion\n    //#region Events\n    @Event({\n        eventName: 'kul-carousel-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulCarouselEventPayload>;\n    onKulEvent(e: Event | CustomEvent, eventType: KulCarouselEvent) {\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n        });\n    }\n    //#endregion\n    //#region Watchers\n    @Watch('kulData')\n    @Watch('kulShape')\n    async updateShapes() {\n        try {\n            this.shapes = this.#kulManager.data.cell.shapes.getAll(\n                this.kulData\n            );\n        } catch (error) {\n            this.#kulManager.debug.logs.new(\n                this,\n                'Error updating shapes: ' + error,\n                'error'\n            );\n        }\n    }\n    //#endregion\n    //#region Public methods\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's props values.\n     * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n     * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulCarouselProps, descriptions);\n    }\n    /**\n     * Changes the slide to the specified index if it's within bounds.\n     * @param {number} index - The number of the slide to go to.\n     */\n    @Method()\n    async goToSlide(index: number) {\n        this.#adapter.actions.toSlide(this.#adapter, index);\n    }\n    /**\n     * Advances to the next slide, looping back to the start if at the end.\n     */\n    @Method()\n    async nextSlide() {\n        this.#adapter.actions.next(this.#adapter);\n    }\n    /**\n     * Moves to the previous slide, looping to the last slide if at the beginning.\n     */\n    @Method()\n    async prevSlide() {\n        this.#adapter.actions.previous(this.#adapter);\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n    //#endregion\n    //#region Private methods\n    #adapter: KulCarouselAdapter = {\n        actions: ACTIONS,\n        components: COMPONENTS,\n        get: {\n            carousel: () => this,\n            interval: () => this.#interval,\n            manager: () => this.#kulManager,\n            state: { currentIndex: () => this.currentIndex },\n            totalSlides: () => this.#getTotalSlides(),\n        },\n        set: {\n            interval: (value) => (this.#interval = value),\n            state: { currentIndex: (value) => (this.currentIndex = value) },\n        },\n    };\n    #getTotalSlides() {\n        return this.shapes?.[this.kulShape]?.length || 0;\n    }\n    #hasShapes() {\n        return !!this.shapes?.[this.kulShape];\n    }\n    #prepCarousel(): VNode {\n        if (this.#hasShapes()) {\n            const shapes = this.shapes[this.kulShape];\n            if (shapes?.length) {\n                return (\n                    <Fragment>\n                        <div\n                            class=\"carousel__track\"\n                            role=\"region\"\n                            aria-live=\"polite\"\n                        >\n                            {this.#prepSlide()}\n                        </div>\n                        <div class=\"carousel__controls\">\n                            {this.#adapter.components.back(this.#adapter)}\n                            {this.#adapter.components.forward(this.#adapter)}\n                        </div>\n                        <div class=\"carousel__indicators-wrapper\">\n                            <div class=\"carousel__indicators\">\n                                {this.#prepIndicators()}\n                            </div>\n                        </div>\n                    </Fragment>\n                );\n            }\n        }\n    }\n    #prepIndicators(): VNode[] {\n        const totalSlides = this.#getTotalSlides();\n        const maxIndicators = 9;\n        const halfMax = Math.floor(maxIndicators / 2);\n\n        let start = Math.max(0, this.currentIndex - halfMax);\n        let end = Math.min(totalSlides, start + maxIndicators);\n\n        if (end === totalSlides) {\n            start = Math.max(0, end - maxIndicators);\n        }\n\n        const indicators = [];\n\n        if (start > 0) {\n            const className = {\n                carousel__chevron: true,\n                'carousel__chevron--left': true,\n            };\n            indicators.push(\n                <span\n                    class={className}\n                    onClick={() =>\n                        this.#adapter.actions.toSlide(this.#adapter, 0)\n                    }\n                    title={`Jump to the first slide (#${0})`}\n                >\n                    «\n                </span>\n            );\n        }\n\n        this.shapes[this.kulShape]\n            ?.slice(start, end)\n            .forEach(\n                (_: Partial<KulDataCell<KulDataShapes>>, index: number) => {\n                    const actualIndex = start + index;\n                    const isCurrent = actualIndex === this.currentIndex;\n                    const isFirst = actualIndex === start;\n                    const isLast = actualIndex === end - 1;\n\n                    const className = {\n                        carousel__indicator: true,\n                        'carousel__indicator--active': isCurrent,\n                        'carousel__indicator--small':\n                            (isFirst || isLast) && !isCurrent,\n                    };\n                    indicators.push(\n                        <span\n                            class={className}\n                            onClick={() =>\n                                this.#adapter.actions.toSlide(\n                                    this.#adapter,\n                                    actualIndex\n                                )\n                            }\n                            title={`#${index}`}\n                        />\n                    );\n                }\n            );\n\n        if (end < totalSlides) {\n            const className = {\n                carousel__chevron: true,\n                'carousel__chevron--right': true,\n            };\n            indicators.push(\n                <span\n                    class={className}\n                    onClick={() =>\n                        this.#adapter.actions.toSlide(\n                            this.#adapter,\n                            totalSlides - 1\n                        )\n                    }\n                    title={`Jump to the last slide (#${totalSlides - 1})`}\n                >\n                    »\n                </span>\n            );\n        }\n\n        return indicators;\n    }\n    #prepSlide(): VNode {\n        const props: Partial<KulDataCell<KulDataShapes>>[] = this.shapes[\n            this.kulShape\n        ].map(() => ({\n            htmlProps: {\n                className: 'kul-fit',\n            },\n        }));\n\n        const decoratedShapes = this.#kulManager.data.cell.shapes.decorate(\n            this.kulShape,\n            this.shapes[this.kulShape],\n            async (e) => this.onKulEvent(e, 'kul-event'),\n            props\n        ).element;\n\n        return (\n            <div class=\"carousel__slide\" data-index={this.currentIndex}>\n                <Fragment>{decoratedShapes[this.currentIndex]}</Fragment>\n            </div>\n        );\n    }\n    //#endregion\n    //#region Lifecycle hooks\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n        this.updateShapes();\n        if (this.kulAutoPlay) {\n            this.#adapter.actions.autoplay.start(this.#adapter);\n        }\n    }\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n    render() {\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div\n                        class=\"carousel\"\n                        onTouchStart={(e) =>\n                            (this.#touchStartX = e.touches[0].clientX)\n                        }\n                        onTouchMove={() => {\n                            const swipeDistance =\n                                this.#touchEndX - this.#touchStartX;\n                            const swipeThreshold = 50;\n\n                            const currentTime = performance.now();\n\n                            if (\n                                Math.abs(swipeDistance) > swipeThreshold &&\n                                currentTime - this.#lastSwipeTime >\n                                    this.#swipeThrottleDelay\n                            ) {\n                                this.#lastSwipeTime = currentTime;\n                                if (swipeDistance > 0) {\n                                    this.#adapter.actions.previous(\n                                        this.#adapter\n                                    );\n                                } else {\n                                    this.#adapter.actions.next(this.#adapter);\n                                }\n                            }\n                        }}\n                        onTouchEnd={(e) =>\n                            (this.#touchEndX = e.touches[0].clientX)\n                        }\n                    >\n                        {this.#prepCarousel()}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n        this.#adapter.actions.autoplay.stop(this.#adapter);\n    }\n    //#endregion\n}\n"],"version":3}