{"file":"kul-drawer.entry.js","mappings":";;;;AAMA;AAEA;AACA,IAAY,cAEX;AAFD,WAAY,cAAc;IACtB,6DAA2C,CAAA;AAC/C,CAAC,EAFW,cAAc,KAAd,cAAc,QAEzB;AAID;;ACfA,MAAM,YAAY,GAAG,g4GAAg4G,CAAC;AACt5G,wBAAe,YAAY;;MC2Bd,SAAS;;;;yBAU0B;YACxC,OAAO,EAAE,CAAC;YACV,WAAW,EAAE,CAAC;YACd,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;YACd,SAAS,EAAE,WAAW,CAAC,GAAG,EAAE;SAC/B;sBAKiB,KAAK;wBAQ4B,EAAE;;;;;IAIrD,WAAW,GAAG,kBAAkB,EAAE,CAAC;;;IAUnC,QAAQ,CAAsC;IAC9C,UAAU,CAAC,CAAsB,EAAE,SAAyB;QACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACf,IAAI,EAAE,IAAI;YACV,SAAS;YACT,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YACvB,aAAa,EAAE,CAAC;SACnB,CAAC,CAAC;KACN;;;;;;IAQD,MAAM,KAAK;QACP,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;KACtD;;;;;IAMD,MAAM,YAAY;QACd,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;;IAOD,MAAM,QAAQ,CAAC,YAAsB;QACjC,OAAO,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;KACvD;;;;;IAMD,MAAM,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;IAKD,MAAM,IAAI;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;KACpD;;;;IAKD,MAAM,OAAO;QACT,WAAW,CAAC,IAAI,CAAC,CAAC;KACrB;;;;IAKD,MAAM,MAAM;QACR,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;aAAM;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;;;;;IAMD,MAAM,OAAO,CAAC,KAAa,CAAC;QACxB,UAAU,CAAC;YACP,IAAI,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SAC7B,EAAE,EAAE,CAAC,CAAC;KACV;;;IAID,iBAAiB;QACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACzC;IACD,gBAAgB;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;KAC5D;IACD,mBAAmB;QACf,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;KAC/D;IACD,kBAAkB;QACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;KAC9D;IACD,MAAM;QACF,QACI,EAAC,IAAI,mEAAa,IAAI,CAAC,MAAM,IACxB,IAAI,CAAC,QAAQ,IACV,aAAO,EAAE,EAAE,YAAY,IAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CACrC,IACR,SAAS,EACb,4DACI,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,CAAC,CAAC;gBACP,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;aACvB,EACD,aAAa,EAAE,CAAC,CAAC;gBACb,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACpB,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB,EACD,YAAY,EAAE,CAAC,CAAC;gBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;aACvB,GACH,EACF,4DAAK,EAAE,EAAE,cAAc,IACnB,4DAAK,KAAK,EAAE,QAAQ,IAChB,4DAAK,KAAK,EAAE,iBAAiB,IACzB,8DAAa,CACX,CACJ,CACJ,CACH,EACT;KACL;IACD,oBAAoB;QAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KAC3C;;;;;;","names":[],"sources":["src/components/kul-drawer/kul-drawer-declarations.ts","src/components/kul-drawer/kul-drawer.scss?tag=kul-drawer&encapsulation=shadow","src/components/kul-drawer/kul-drawer.tsx"],"sourcesContent":["import { KulEventPayload } from '../../types/GenericTypes';\n\n//#region Events\nexport type KulDrawerEvent = 'close' | 'open' | 'ready' | 'unmount';\nexport interface KulDrawerEventPayload\n    extends KulEventPayload<'KulDrawer', KulDrawerEvent> {}\n//#endregion\n\n//#region Props\nexport enum KulDrawerProps {\n    kulStyle = 'Custom style of the component.',\n}\nexport interface KulDrawerPropsInterface {\n    kulStyle?: string;\n}\n//#endregion\n","@import 'styles/kul-drawer-main.scss';\n@import 'styles/kul-drawer-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n} from '@stencil/core';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject } from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport {\n    KulDrawerEvent,\n    KulDrawerEventPayload,\n    KulDrawerProps,\n} from './kul-drawer-declarations';\n\n@Component({\n    tag: 'kul-drawer',\n    styleUrl: 'kul-drawer.scss',\n    shadow: true,\n})\nexport class KulDrawer {\n    /**\n     * References the root HTML element of the component (<kul-drawer>).\n     */\n    @Element() rootElement: HTMLKulDrawerElement;\n\n    //#region States\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * True when the drawer is open.\n     * @default false\n     */\n    @State() opened = false;\n    //#endregion\n\n    //#region Props\n    /**\n     * Custom style of the component.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    //#endregion\n\n    //#region Internal variables\n    #kulManager = kulManagerInstance();\n    //#endregion\n\n    //#region Events\n    @Event({\n        eventName: 'kul-drawer-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulDrawerEventPayload>;\n    onKulEvent(e: Event | CustomEvent, eventType: KulDrawerEvent) {\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n        });\n    }\n    //#endregion\n\n    //#region Public methods\n    /**\n     * Closes the drawer.\n     */\n    @Method()\n    async close(): Promise<void> {\n        this.opened = false;\n        this.onKulEvent(new CustomEvent('close'), 'close');\n    }\n    /**\n     * Fetches debug information of the component's current state.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves with the debug information object.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Used to retrieve component's props values.\n     * @param {boolean} descriptions - When provided and true, the result will be the list of props with their description.\n     * @returns {Promise<GenericObject>} List of props as object, each key will be a prop.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulDrawerProps, descriptions);\n    }\n    /**\n     * Returns the state of the drawer.\n     * @returns {Promise<boolean>} True when opened, false when closed.\n     */\n    @Method()\n    async isOpened(): Promise<boolean> {\n        return this.opened;\n    }\n    /**\n     * Opens the drawer.\n     */\n    @Method()\n    async open(): Promise<void> {\n        this.opened = true;\n        this.onKulEvent(new CustomEvent('open'), 'open');\n    }\n    /**\n     * This method is used to trigger a new render of the component.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Opens the drawer when closed and vice-versa.\n     */\n    @Method()\n    async toggle(): Promise<void> {\n        if (this.opened) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n    //#endregion\n\n    //#region Lifecycle hooks\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n    componentDidRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n    render() {\n        return (\n            <Host kul-opened={this.opened}>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div\n                    class=\"backdrop\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }}\n                    onPointerDown={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        this.close();\n                    }}\n                    onTouchStart={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }}\n                />\n                <div id={KUL_WRAPPER_ID}>\n                    <div class={'drawer'}>\n                        <div class={`drawer__content`}>\n                            <slot></slot>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n    //#endregion\n}\n"],"version":3}