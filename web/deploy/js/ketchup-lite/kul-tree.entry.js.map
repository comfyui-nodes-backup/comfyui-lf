{"file":"kul-tree.entry.js","mappings":"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","names":[],"sources":["src/components/kul-tree/kul-tree-declarations.ts","src/components/kul-tree/node/kul-tree-node-content.tsx","src/components/kul-tree/node/kul-tree-node.tsx","src/components/kul-tree/kul-tree.scss?tag=kul-tree&encapsulation=shadow","src/components/kul-tree/kul-tree.tsx"],"sourcesContent":["import {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulEventPayload } from '../../types/GenericTypes';\n\n//#region Events\nexport type KulTreeEvent =\n    | 'click'\n    | 'kul-event'\n    | 'pointerdown'\n    | 'ready'\n    | 'unmount';\nexport interface KulTreeEventPayload\n    extends KulEventPayload<'KulTree', KulTreeEvent> {\n    node?: KulDataNode;\n}\nexport interface KulTreeEventArguments {\n    expansion?: boolean;\n    node?: KulDataNode;\n}\n//#endregion\n\n//#region Props\nexport enum KulTreeProps {\n    kulAccordionLayout = 'When enabled, the first level of depth will create an accordion-style appearance for nodes.',\n    kulData = 'Actual data of the tree.',\n    kulFilter = 'When true, displays a text field which enables filtering the dataset of the tree.',\n    kulInitialExpansionDepth = 'Sets the initial expanded nodes based on the specified depth. If the property is not provided, all nodes in the tree will be expanded.',\n    kulRipple = 'When set to true, the pointerdown event will trigger a ripple effect.',\n    kulSelectable = 'When true, nodes can be selected.',\n    kulStyle = 'Custom style of the component.',\n}\nexport interface KulTreePropsInterface {\n    kulAccordionLayout?: boolean;\n    kulData?: KulDataDataset;\n    kulFilter?: boolean;\n    kulInitialExpansionDepth?: number;\n    kulRipple?: boolean;\n    kulSelectable?: boolean;\n    kulStyle?: string;\n}\n//#endregion\n","import { FunctionalComponent, getAssetPath, h } from '@stencil/core';\nimport { KulDataNode } from '../../../managers/kul-data/kul-data-declarations';\n\nexport const TreeNodeContent: FunctionalComponent<{\n    depth?: number;\n    expanded?: boolean;\n    node?: KulDataNode;\n    type: 'dropdown' | 'expand' | 'icon' | 'padding' | 'placeholder';\n    onClickExpand?: (e: MouseEvent) => void;\n}> = ({ depth, expanded = false, node, onClickExpand, type }) => {\n    switch (type) {\n        //#region dropdown\n        case 'dropdown':\n            return (\n                <div\n                    class={`node__dropdown ${\n                        expanded ? 'node__dropdown--expanded' : ''\n                    } `}\n                ></div>\n            );\n        //#endregion\n\n        //#region expand\n        case 'expand':\n            return (\n                <div\n                    class={`node__expand ${\n                        expanded ? 'node__expand--expanded' : ''\n                    } `}\n                    onClick={onClickExpand}\n                ></div>\n            );\n        //#endregion\n\n        //#region icon\n        case 'icon':\n            const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n            const style = {\n                mask: `url('${path}') no-repeat center`,\n                webkitMask: `url('${path}') no-repeat center`,\n            };\n            return <div class={'node__icon'} style={style}></div>;\n        //#endregion\n\n        //#region padding\n        case 'padding':\n            return (\n                <div\n                    class=\"node__padding\"\n                    style={{\n                        ['--kul_tree_padding_multiplier']: depth.toString(),\n                    }}\n                ></div>\n            );\n        //#endregion\n        default:\n            return <div class={'node__expand node__expand--placeholder'}></div>;\n    }\n};\n","import { FunctionalComponent, h } from '@stencil/core';\nimport { KulDataCyAttributes } from '../../../types/GenericTypes';\nimport { TreeNodeContent } from './kul-tree-node-content';\nimport { KulTreeNodeProps } from './kul-tree-node-declarations';\n\nexport const TreeNode: FunctionalComponent<KulTreeNodeProps> = (\n    props: KulTreeNodeProps\n) => {\n    const {\n        accordionLayout,\n        depth,\n        elements,\n        events,\n        expanded,\n        node,\n        selected,\n    } = props || {};\n    const icon = node.icon ? (\n        <TreeNodeContent node={node} type=\"icon\"></TreeNodeContent>\n    ) : (\n        <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n    );\n    const classList = {\n        node: true,\n        ['node--expanded']: expanded ? true : false,\n        ['node--selected']: selected ? true : false,\n    };\n    //#region accordion layout\n    if (accordionLayout) {\n        return (\n            <div\n                class={classList}\n                data-depth={depth.toString()}\n                key={node.id}\n                onClick={events.onClickExpand}\n                onPointerDown={events.onPointerDown}\n                title={node.description}\n            >\n                <div class=\"node__content\">\n                    {elements.ripple}\n                    {icon}\n                    {elements.value}\n                    {node.children?.length ? (\n                        <TreeNodeContent\n                            expanded={expanded}\n                            node={node}\n                            type=\"dropdown\"\n                        ></TreeNodeContent>\n                    ) : (\n                        <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n                    )}\n                </div>\n            </div>\n        );\n        //#endregion\n    } else {\n        //#region standard layout\n        return (\n            <div\n                class={`node ${expanded ? 'node--expanded' : ''} ${\n                    selected ? 'node--selected' : ''\n                }`}\n                data-cy={KulDataCyAttributes.NODE}\n                data-depth={depth.toString()}\n                key={node.id}\n                onClick={events.onClick}\n                onPointerDown={events.onPointerDown}\n                title={node.description}\n            >\n                <div class=\"node__content\">\n                    {elements.ripple}\n                    <TreeNodeContent\n                        depth={depth}\n                        type=\"padding\"\n                    ></TreeNodeContent>\n                    {node.children?.length ? (\n                        <TreeNodeContent\n                            expanded={expanded}\n                            node={node}\n                            onClickExpand={events.onClickExpand}\n                            type=\"expand\"\n                        ></TreeNodeContent>\n                    ) : (\n                        <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n                    )}\n                    {icon}\n                    {elements.value}\n                </div>\n            </div>\n        );\n    }\n    //#endregion\n};\n","@import './styles/kul-tree-main.scss';\n@import './styles/kul-tree-classes.scss';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    VNode,\n} from '@stencil/core';\nimport {\n    KulDataDataset,\n    KulDataNode,\n} from '../../managers/kul-data/kul-data-declarations';\nimport { KulDebugLifecycleInfo } from '../../managers/kul-debug/kul-debug-declarations';\nimport {\n    KulLanguageGeneric,\n    KulLanguageSearch,\n} from '../../managers/kul-language/kul-language-declarations';\nimport { kulManagerInstance } from '../../managers/kul-manager/kul-manager';\nimport { GenericObject } from '../../types/GenericTypes';\nimport { getProps } from '../../utils/componentUtils';\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from '../../variables/GenericVariables';\nimport { KulTextfieldEventPayload } from '../kul-textfield/kul-textfield-declarations';\nimport {\n    KulTreeEvent,\n    KulTreeEventArguments,\n    KulTreeEventPayload,\n    KulTreeProps,\n} from './kul-tree-declarations';\nimport { TreeNode } from './node/kul-tree-node';\nimport { KulTreeNodeProps } from './node/kul-tree-node-declarations';\n\n@Component({\n    tag: 'kul-tree',\n    styleUrl: 'kul-tree.scss',\n    shadow: true,\n})\nexport class KulTree {\n    /**\n     * References the root HTML element of the component (<kul-tree>).\n     */\n    @Element() rootElement: HTMLKulTreeElement;\n\n    //#region States\n    /**\n     * Debug information.\n     */\n    @State() debugInfo: KulDebugLifecycleInfo = {\n        endTime: 0,\n        renderCount: 0,\n        renderEnd: 0,\n        renderStart: 0,\n        startTime: performance.now(),\n    };\n    /**\n     * Set of expanded nodes.\n     */\n    @State() expandedNodes: Set<KulDataNode> = new Set();\n    /**\n     * When filters are active, this set contains the nodes that don't match the filter.\n     */\n    @State() hiddenNodes: Set<KulDataNode> = new Set();\n    /**\n     * Selected node.\n     */\n    @State() selectedNode: KulDataNode = null;\n    //#endregion\n\n    //#region Props\n    /**\n     * When enabled, the first level of depth will create an accordion-style appearance for nodes.\n     * @default false\n     */\n    @Prop({ mutable: true, reflect: true }) kulAccordionLayout = true;\n    /**\n     * The actual data of the tree.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulData: KulDataDataset = null;\n    /**\n     * When true, displays a text field which enables filtering the dataset of the tree.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulFilter = true;\n    /**\n     * Sets the initial expanded nodes based on the specified depth.\n     * If the property is not provided, all nodes in the tree will be expanded.\n     * @default null\n     */\n    @Prop({ mutable: true }) kulInitialExpansionDepth: number;\n    /**\n     * When set to true, the pointerdown event will trigger a ripple effect.\n     * @default true\n     */\n    @Prop({ mutable: true, reflect: true }) kulRipple = true;\n    /**\n     * When true, nodes can be selected.\n     * @default null\n     */\n    @Prop({ mutable: true, reflect: true }) kulSelectable = true;\n    /**\n     * Enables customization of the component's style.\n     * @default \"\"\n     */\n    @Prop({ mutable: true, reflect: true }) kulStyle = '';\n    //#endregion\n\n    //#region Internal variables\n    #filterTimeout: ReturnType<typeof setTimeout>;\n    #filterValue = '';\n    #kulManager = kulManagerInstance();\n    #rippleSurface: { [id: string]: HTMLElement } = {};\n    //#endregion\n\n    //#region Events\n    @Event({\n        eventName: 'kul-tree-event',\n        composed: true,\n        cancelable: false,\n        bubbles: true,\n    })\n    kulEvent: EventEmitter<KulTreeEventPayload>;\n    onKulEvent(\n        e: Event | CustomEvent,\n        eventType: KulTreeEvent,\n        args?: KulTreeEventArguments\n    ) {\n        const { expansion, node } = args || {};\n        switch (eventType) {\n            case 'click':\n                if (expansion && node.children?.length) {\n                    if (this.expandedNodes.has(node)) {\n                        this.expandedNodes.delete(node);\n                    } else {\n                        this.expandedNodes.add(node);\n                    }\n                    this.expandedNodes = new Set(this.expandedNodes);\n                } else if (node) {\n                    this.selectedNode = node;\n                }\n                break;\n            case 'pointerdown':\n                if (this.kulRipple) {\n                    this.#kulManager.theme.ripple.trigger(\n                        e as PointerEvent,\n                        this.#rippleSurface[node.id]\n                    );\n                }\n                break;\n        }\n        this.kulEvent.emit({\n            comp: this,\n            eventType,\n            id: this.rootElement.id,\n            originalEvent: e,\n            node,\n        });\n    }\n    //#endregion\n\n    //#region Public methods\n    /**\n     * Retrieves the debug information reflecting the current state of the component.\n     * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n     */\n    @Method()\n    async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n        return this.debugInfo;\n    }\n    /**\n     * Retrieves the properties of the component, with optional descriptions.\n     * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n     * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n     */\n    @Method()\n    async getProps(descriptions?: boolean): Promise<GenericObject> {\n        return getProps(this, KulTreeProps, descriptions);\n    }\n    /**\n     * Triggers a re-render of the component to reflect any state changes.\n     */\n    @Method()\n    async refresh(): Promise<void> {\n        forceUpdate(this);\n    }\n    /**\n     * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n     * @param {number} ms - Number of milliseconds\n     */\n    @Method()\n    async unmount(ms: number = 0): Promise<void> {\n        setTimeout(() => {\n            this.onKulEvent(new CustomEvent('unmount'), 'unmount');\n            this.rootElement.remove();\n        }, ms);\n    }\n    //#endregion\n\n    //#region Private methods\n    #filter(e: CustomEvent<KulTextfieldEventPayload>) {\n        clearTimeout(this.#filterTimeout);\n        this.#filterTimeout = setTimeout(() => {\n            this.#filterValue = e.detail.inputValue?.toLowerCase();\n            if (!this.#filterValue) {\n                this.hiddenNodes = new Set();\n            } else {\n                const filter = this.#kulManager.data.node.filter(\n                    this.kulData,\n                    { value: this.#filterValue },\n                    true\n                );\n                this.hiddenNodes = new Set(filter.remainingNodes);\n                if (filter.ancestorNodes) {\n                    filter.ancestorNodes.forEach((ancestor) => {\n                        this.hiddenNodes.delete(ancestor);\n                    });\n                }\n            }\n        }, 300);\n    }\n    #prepTree(): VNode[] {\n        const elements: VNode[] = [];\n        const nodes = this.kulData.nodes;\n        for (let index = 0; index < nodes.length; index++) {\n            const node = nodes[index];\n            this.#recursive(elements, node, 0);\n        }\n        return elements.length ? (\n            elements\n        ) : this.#filterValue ? (\n            <div class=\"no-matches\">\n                <div class=\"no-matches__icon\"></div>\n                <div class=\"no-matches__text\">\n                    No matches found for \"\n                    <strong class=\"no-matches__filter\">\n                        {this.#filterValue}\n                    </strong>\n                    \".\n                </div>\n            </div>\n        ) : undefined;\n    }\n    #recursive(elements: VNode[], node: KulDataNode, depth: number) {\n        if (!this.debugInfo.endTime) {\n            if (\n                this.kulInitialExpansionDepth === null ||\n                this.kulInitialExpansionDepth === undefined ||\n                this.kulInitialExpansionDepth > depth\n            ) {\n                this.expandedNodes.add(node);\n            }\n        }\n        const isExpanded = this.#filterValue\n            ? true\n            : this.expandedNodes.has(node);\n        const isHidden = this.hiddenNodes.has(node);\n        const isSelected = this.selectedNode === node;\n        const nodeProps: KulTreeNodeProps = {\n            accordionLayout: this.kulAccordionLayout && depth === 0,\n            depth,\n            elements: {\n                ripple: (\n                    <div\n                        ref={(el) => {\n                            if (el && this.kulRipple) {\n                                this.#rippleSurface[node.id] = el;\n                            }\n                        }}\n                    ></div>\n                ),\n                value: (\n                    <div class=\"node__value\">\n                        {this.#kulManager.data.cell.stringify(node.value)}\n                    </div>\n                ),\n            },\n            events: {\n                onClick: (e) => {\n                    this.onKulEvent(e, 'click', { node });\n                },\n                onClickExpand: (e) => {\n                    this.onKulEvent(e, 'click', { expansion: true, node });\n                },\n                onPointerDown: (e) => {\n                    this.onKulEvent(e, 'pointerdown', { node });\n                },\n            },\n            expanded: isExpanded,\n            node,\n            selected: isSelected,\n        };\n\n        if (!isHidden) {\n            elements.push(<TreeNode {...nodeProps}></TreeNode>);\n            if (isExpanded) {\n                node.children?.map((child) =>\n                    this.#recursive(elements, child, depth + 1)\n                );\n            }\n        }\n    }\n    #setExpansion(node: KulDataNode) {\n        if (this.expandedNodes.has(node)) {\n            this.expandedNodes.delete(node);\n        } else {\n            this.expandedNodes.add(node);\n        }\n\n        if (node.children?.length) {\n            node.children.forEach((child) => {\n                this.#setExpansion(child);\n            });\n        }\n    }\n    //#endregion\n\n    //#region Lifecycle hooks\n    componentWillLoad() {\n        this.#kulManager.theme.register(this);\n    }\n    componentDidLoad() {\n        this.onKulEvent(new CustomEvent('ready'), 'ready');\n        this.#kulManager.debug.updateDebugInfo(this, 'did-load');\n    }\n    componentWillRender() {\n        this.#kulManager.debug.updateDebugInfo(this, 'will-render');\n    }\n    componentDidRender() {\n        if (Object.keys(this.#rippleSurface).length) {\n            for (const key in this.#rippleSurface) {\n                if (\n                    Object.prototype.hasOwnProperty.call(\n                        this.#rippleSurface,\n                        key\n                    )\n                ) {\n                    const surface = this.#rippleSurface[key];\n                    this.#kulManager.theme.ripple.setup(surface);\n                }\n            }\n        }\n\n        this.#kulManager.debug.updateDebugInfo(this, 'did-render');\n    }\n    render() {\n        const isEmpty = !!!this.kulData?.nodes?.length;\n        this.#rippleSurface = {};\n\n        return (\n            <Host>\n                {this.kulStyle ? (\n                    <style id={KUL_STYLE_ID}>\n                        {this.#kulManager.theme.setKulStyle(this)}\n                    </style>\n                ) : undefined}\n                <div id={KUL_WRAPPER_ID}>\n                    <div class=\"tree\">\n                        {this.kulFilter ? (\n                            <kul-textfield\n                                kulIcon=\"magnify\"\n                                kulFullWidth={true}\n                                kulLabel={this.#kulManager.language.translate(\n                                    KulLanguageSearch.SEARCH\n                                )}\n                                kulStyling=\"flat\"\n                                onKul-textfield-event={(e) => {\n                                    this.onKulEvent(e, 'kul-event');\n                                    if (e.detail.eventType === 'input') {\n                                        this.#filter(e);\n                                    }\n                                }}\n                            ></kul-textfield>\n                        ) : undefined}\n                        {isEmpty ? (\n                            <div class=\"empty-data\">\n                                <div class=\"empty-data__text\">\n                                    {this.#kulManager.language.translate(\n                                        KulLanguageGeneric.EMPTY_DATA\n                                    )}\n                                </div>\n                            </div>\n                        ) : (\n                            this.#prepTree()\n                        )}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n    disconnectedCallback() {\n        this.#kulManager.theme.unregister(this);\n    }\n    //#endregion\n}\n"],"version":3}