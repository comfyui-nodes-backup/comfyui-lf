{"file":"kul-tree.entry.js","mappings":"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","names":[],"sources":["src/components/kul-tree/kul-tree-declarations.ts","src/components/kul-tree/node/kul-tree-node-content.tsx","src/components/kul-tree/node/kul-tree-node.tsx","src/components/kul-tree/kul-tree.scss?tag=kul-tree&encapsulation=shadow","src/components/kul-tree/kul-tree.tsx"],"sourcesContent":["import {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulTreeEvent =\n  | \"click\"\n  | \"kul-event\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\";\nexport interface KulTreeEventPayload\n  extends KulEventPayload<\"KulTree\", KulTreeEvent> {\n  node?: KulDataNode;\n}\nexport interface KulTreeEventArguments {\n  expansion?: boolean;\n  node?: KulDataNode;\n}\n//#endregion\n\n//#region Props\nexport enum KulTreeProps {\n  kulAccordionLayout = \"When enabled, the first level of depth will create an accordion-style appearance for nodes.\",\n  kulData = \"Actual data of the tree.\",\n  kulFilter = \"When true, displays a text field which enables filtering the dataset of the tree.\",\n  kulInitialExpansionDepth = \"Sets the initial expanded nodes based on the specified depth. If the property is not provided, all nodes in the tree will be expanded.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulSelectable = \"When true, nodes can be selected.\",\n  kulStyle = \"Custom style of the component.\",\n}\nexport interface KulTreePropsInterface {\n  kulAccordionLayout?: boolean;\n  kulData?: KulDataDataset;\n  kulFilter?: boolean;\n  kulInitialExpansionDepth?: number;\n  kulRipple?: boolean;\n  kulSelectable?: boolean;\n  kulStyle?: string;\n}\n//#endregion\n","import { FunctionalComponent, getAssetPath, h } from \"@stencil/core\";\n\nimport { KulDataNode } from \"../../../managers/kul-data/kul-data-declarations\";\n\n/*-------------------------------------------------*/\n/*                C o m p o n e n t                */\n/*-------------------------------------------------*/\n\nexport const TreeNodeContent: FunctionalComponent<{\n  depth?: number;\n  expanded?: boolean;\n  node?: KulDataNode;\n  type: \"dropdown\" | \"expand\" | \"icon\" | \"padding\" | \"placeholder\";\n  onClickExpand?: (e: MouseEvent) => void;\n}> = ({ depth, expanded = false, node, onClickExpand, type }) => {\n  switch (type) {\n    case \"dropdown\":\n      return (\n        <div\n          class={`node__dropdown ${\n            expanded ? \"node__dropdown--expanded\" : \"\"\n          } `}\n        ></div>\n      );\n    case \"expand\":\n      return (\n        <div\n          class={`node__expand ${expanded ? \"node__expand--expanded\" : \"\"} `}\n          onClick={onClickExpand}\n        ></div>\n      );\n    case \"icon\":\n      const path = getAssetPath(`./assets/svg/${node.icon}.svg`);\n      const style = {\n        mask: `url('${path}') no-repeat center`,\n        webkitMask: `url('${path}') no-repeat center`,\n      };\n      return <div class={\"node__icon\"} style={style}></div>;\n    case \"padding\":\n      return (\n        <div\n          class=\"node__padding\"\n          style={{\n            [\"--kul_tree_padding_multiplier\"]: depth.toString(),\n          }}\n        ></div>\n      );\n    default:\n      return <div class={\"node__expand node__expand--placeholder\"}></div>;\n  }\n};\n","import { FunctionalComponent, h } from \"@stencil/core\";\n\nimport { TreeNodeContent } from \"./kul-tree-node-content\";\nimport { KulTreeNodeProps } from \"./kul-tree-node-declarations\";\nimport { KulDataCyAttributes } from \"../../../types/GenericTypes\";\n\n/*-------------------------------------------------*/\n/*                C o m p o n e n t                */\n/*-------------------------------------------------*/\n\nexport const TreeNode: FunctionalComponent<KulTreeNodeProps> = (\n  props: KulTreeNodeProps,\n) => {\n  const { accordionLayout, depth, elements, events, expanded, node, selected } =\n    props || {};\n  const icon = node.icon ? (\n    <TreeNodeContent node={node} type=\"icon\"></TreeNodeContent>\n  ) : (\n    <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n  );\n  const classList = {\n    node: true,\n    [\"node--expanded\"]: expanded ? true : false,\n    [\"node--selected\"]: selected ? true : false,\n  };\n  if (accordionLayout) {\n    return (\n      <div\n        class={classList}\n        data-depth={depth.toString()}\n        key={node.id}\n        onClick={events.onClickExpand}\n        onPointerDown={events.onPointerDown}\n        title={node.description}\n      >\n        <div class=\"node__content\">\n          {elements.ripple}\n          {icon}\n          {elements.value}\n          {node.children?.length ? (\n            <TreeNodeContent\n              expanded={expanded}\n              node={node}\n              type=\"dropdown\"\n            ></TreeNodeContent>\n          ) : (\n            <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n          )}\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div\n        class={`node ${expanded ? \"node--expanded\" : \"\"} ${\n          selected ? \"node--selected\" : \"\"\n        }`}\n        data-cy={KulDataCyAttributes.NODE}\n        data-depth={depth.toString()}\n        key={node.id}\n        onClick={events.onClick}\n        onPointerDown={events.onPointerDown}\n        title={node.description}\n      >\n        <div class=\"node__content\">\n          {elements.ripple}\n          <TreeNodeContent depth={depth} type=\"padding\"></TreeNodeContent>\n          {node.children?.length ? (\n            <TreeNodeContent\n              expanded={expanded}\n              node={node}\n              onClickExpand={events.onClickExpand}\n              type=\"expand\"\n            ></TreeNodeContent>\n          ) : (\n            <TreeNodeContent type=\"placeholder\"></TreeNodeContent>\n          )}\n          {icon}\n          {elements.value}\n        </div>\n      </div>\n    );\n  }\n};\n","@import \"./styles/kul-tree-main.scss\";\n@import \"./styles/kul-tree-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\n\nimport {\n  KulTreeEvent,\n  KulTreeEventArguments,\n  KulTreeEventPayload,\n  KulTreeProps,\n} from \"./kul-tree-declarations\";\nimport { TreeNode } from \"./node/kul-tree-node\";\nimport { KulTreeNodeProps } from \"./node/kul-tree-node-declarations\";\nimport {\n  KulDataDataset,\n  KulDataNode,\n} from \"../../managers/kul-data/kul-data-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport {\n  KulLanguageGeneric,\n  KulLanguageSearch,\n} from \"../../managers/kul-language/kul-language-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\nimport { KulTextfieldEventPayload } from \"../kul-textfield/kul-textfield-declarations\";\n\n@Component({\n  tag: \"kul-tree\",\n  styleUrl: \"kul-tree.scss\",\n  shadow: true,\n})\nexport class KulTree {\n  /**\n   * References the root HTML element of the component (<kul-tree>).\n   */\n  @Element() rootElement: HTMLKulTreeElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   * Set of expanded nodes.\n   */\n  @State() expandedNodes: Set<KulDataNode> = new Set();\n  /**\n   * When filters are active, this set contains the nodes that don't match the filter.\n   */\n  @State() hiddenNodes: Set<KulDataNode> = new Set();\n  /**\n   * Selected node.\n   */\n  @State() selectedNode: KulDataNode = null;\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * When enabled, the first level of depth will create an accordion-style appearance for nodes.\n   * @default false\n   */\n  @Prop({ mutable: true, reflect: true }) kulAccordionLayout = true;\n  /**\n   * The actual data of the tree.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulData: KulDataDataset = null;\n  /**\n   * When true, displays a text field which enables filtering the dataset of the tree.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulFilter = true;\n  /**\n   * Sets the initial expanded nodes based on the specified depth.\n   * If the property is not provided, all nodes in the tree will be expanded.\n   * @default null\n   */\n  @Prop({ mutable: true }) kulInitialExpansionDepth: number;\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * When true, nodes can be selected.\n   * @default null\n   */\n  @Prop({ mutable: true, reflect: true }) kulSelectable = true;\n  /**\n   * Enables customization of the component's style.\n   * @default \"\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #filterTimeout: ReturnType<typeof setTimeout>;\n  #filterValue = \"\";\n  #kulManager = kulManagerInstance();\n  #rippleSurface: { [id: string]: HTMLElement } = {};\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-tree-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulTreeEventPayload>;\n\n  onKulEvent(\n    e: Event | CustomEvent,\n    eventType: KulTreeEvent,\n    args?: KulTreeEventArguments,\n  ) {\n    const { expansion, node } = args || {};\n    switch (eventType) {\n      case \"click\":\n        if (expansion && node.children?.length) {\n          if (this.expandedNodes.has(node)) {\n            this.expandedNodes.delete(node);\n          } else {\n            this.expandedNodes.add(node);\n          }\n          this.expandedNodes = new Set(this.expandedNodes);\n        } else if (node) {\n          this.selectedNode = node;\n        }\n        break;\n      case \"pointerdown\":\n        if (this.kulRipple) {\n          this.#kulManager.theme.ripple.trigger(\n            e as PointerEvent,\n            this.#rippleSurface[node.id],\n          );\n        }\n        break;\n    }\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      node,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Retrieves the debug information reflecting the current state of the component.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Retrieves the properties of the component, with optional descriptions.\n   * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n   * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulTreeProps, descriptions);\n  }\n  /**\n   * Triggers a re-render of the component to reflect any state changes.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #filter(e: CustomEvent<KulTextfieldEventPayload>) {\n    clearTimeout(this.#filterTimeout);\n    this.#filterTimeout = setTimeout(() => {\n      this.#filterValue = e.detail.inputValue?.toLowerCase();\n      if (!this.#filterValue) {\n        this.hiddenNodes = new Set();\n      } else {\n        const filter = this.#kulManager.data.node.filter(\n          this.kulData,\n          { value: this.#filterValue },\n          true,\n        );\n        this.hiddenNodes = new Set(filter.remainingNodes);\n        if (filter.ancestorNodes) {\n          filter.ancestorNodes.forEach((ancestor) => {\n            this.hiddenNodes.delete(ancestor);\n          });\n        }\n      }\n    }, 300);\n  }\n\n  #prepTree(): VNode[] {\n    const elements: VNode[] = [];\n    const nodes = this.kulData.nodes;\n    for (let index = 0; index < nodes.length; index++) {\n      const node = nodes[index];\n      this.#recursive(elements, node, 0);\n    }\n    return elements.length ? (\n      elements\n    ) : this.#filterValue ? (\n      <div class=\"no-matches\">\n        <div class=\"no-matches__icon\"></div>\n        <div class=\"no-matches__text\">\n          No matches found for \"\n          <strong class=\"no-matches__filter\">{this.#filterValue}</strong>\n          \".\n        </div>\n      </div>\n    ) : undefined;\n  }\n\n  #recursive(elements: VNode[], node: KulDataNode, depth: number) {\n    if (!this.debugInfo.endTime) {\n      if (\n        this.kulInitialExpansionDepth === null ||\n        this.kulInitialExpansionDepth === undefined ||\n        this.kulInitialExpansionDepth > depth\n      ) {\n        this.expandedNodes.add(node);\n      }\n    }\n    const isExpanded = this.#filterValue ? true : this.expandedNodes.has(node);\n    const isHidden = this.hiddenNodes.has(node);\n    const isSelected = this.selectedNode === node;\n    const nodeProps: KulTreeNodeProps = {\n      accordionLayout: this.kulAccordionLayout && depth === 0,\n      depth,\n      elements: {\n        ripple: (\n          <div\n            ref={(el) => {\n              if (el && this.kulRipple) {\n                this.#rippleSurface[node.id] = el;\n              }\n            }}\n          ></div>\n        ),\n        value: (\n          <div class=\"node__value\">\n            {this.#kulManager.data.cell.stringify(node.value)}\n          </div>\n        ),\n      },\n      events: {\n        onClick: (e) => {\n          this.onKulEvent(e, \"click\", { node });\n        },\n        onClickExpand: (e) => {\n          this.onKulEvent(e, \"click\", { expansion: true, node });\n        },\n        onPointerDown: (e) => {\n          this.onKulEvent(e, \"pointerdown\", { node });\n        },\n      },\n      expanded: isExpanded,\n      node,\n      selected: isSelected,\n    };\n\n    if (!isHidden) {\n      elements.push(<TreeNode {...nodeProps}></TreeNode>);\n      if (isExpanded) {\n        node.children?.map((child) =>\n          this.#recursive(elements, child, depth + 1),\n        );\n      }\n    }\n  }\n\n  #setExpansion(node: KulDataNode) {\n    if (this.expandedNodes.has(node)) {\n      this.expandedNodes.delete(node);\n    } else {\n      this.expandedNodes.add(node);\n    }\n\n    if (node.children?.length) {\n      node.children.forEach((child) => {\n        this.#setExpansion(child);\n      });\n    }\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    if (Object.keys(this.#rippleSurface).length) {\n      for (const key in this.#rippleSurface) {\n        if (Object.prototype.hasOwnProperty.call(this.#rippleSurface, key)) {\n          const surface = this.#rippleSurface[key];\n          this.#kulManager.theme.ripple.setup(surface);\n        }\n      }\n    }\n\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    const isEmpty = !!!this.kulData?.nodes?.length;\n    this.#rippleSurface = {};\n\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          <div class=\"tree\">\n            {this.kulFilter ? (\n              <kul-textfield\n                kulIcon=\"magnify\"\n                kulFullWidth={true}\n                kulLabel={this.#kulManager.language.translate(\n                  KulLanguageSearch.SEARCH,\n                )}\n                kulStyling=\"flat\"\n                onKul-textfield-event={(e) => {\n                  this.onKulEvent(e, \"kul-event\");\n                  if (e.detail.eventType === \"input\") {\n                    this.#filter(e);\n                  }\n                }}\n              ></kul-textfield>\n            ) : undefined}\n            {isEmpty ? (\n              <div class=\"empty-data\">\n                <div class=\"empty-data__text\">\n                  {this.#kulManager.language.translate(\n                    KulLanguageGeneric.EMPTY_DATA,\n                  )}\n                </div>\n              </div>\n            ) : (\n              this.#prepTree()\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n"],"version":3}