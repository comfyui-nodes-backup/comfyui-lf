{"file":"kul-upload.entry.js","mappings":"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","names":[],"sources":["src/components/kul-upload/kul-upload-declarations.ts","src/components/kul-upload/kul-upload.scss?tag=kul-upload&encapsulation=shadow","src/components/kul-upload/kul-upload.tsx"],"sourcesContent":["import { KulEventPayload } from \"../../types/GenericTypes\";\n\n//#region Events\nexport type KulUploadEvent =\n  | \"delete\"\n  | \"pointerdown\"\n  | \"ready\"\n  | \"unmount\"\n  | \"upload\";\nexport interface KulUploadEventPayload\n  extends KulEventPayload<\"KulUpload\", KulUploadEvent> {\n  selectedFiles: File[];\n}\n//#endregion\n\n//#region Props\nexport enum KulUploadProps {\n  kulLabel = \"Sets the button's label.\",\n  kulRipple = \"When set to true, the pointerdown event will trigger a ripple effect.\",\n  kulStyle = \"Custom style of the component.\",\n  kulValue = \"Initializes the component with these files.\",\n}\nexport interface KulUploadPropsInterface {\n  kulLabel?: string;\n  kulRipple?: boolean;\n  kulStyle?: string;\n  kulValue?: File[];\n}\n//#endregion\n","@import \"./styles/kul-upload-main.scss\";\n@import \"./styles/kul-upload-classes.scss\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from \"@stencil/core\";\n\nimport {\n  KulUploadEventPayload,\n  KulUploadEvent,\n  KulUploadProps,\n} from \"./kul-upload-declarations\";\nimport { KulDebugLifecycleInfo } from \"../../managers/kul-debug/kul-debug-declarations\";\nimport { kulManagerInstance } from \"../../managers/kul-manager/kul-manager\";\nimport { GenericObject } from \"../../types/GenericTypes\";\nimport { getProps } from \"../../utils/componentUtils\";\nimport { KUL_STYLE_ID, KUL_WRAPPER_ID } from \"../../variables/GenericVariables\";\n\n@Component({\n  tag: \"kul-upload\",\n  styleUrl: \"kul-upload.scss\",\n  shadow: true,\n})\nexport class KulUpload {\n  /**\n   * References the root HTML element of the component (<kul-upload>).\n   */\n  @Element() rootElement: HTMLKulUploadElement;\n\n  /*-------------------------------------------------*/\n  /*                   S t a t e s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Debug information.\n   */\n  @State() debugInfo: KulDebugLifecycleInfo = {\n    endTime: 0,\n    renderCount: 0,\n    renderEnd: 0,\n    renderStart: 0,\n    startTime: performance.now(),\n  };\n  /**\n   *State holding the selected files\n   * @default []\n   */\n  @State() selectedFiles: File[] = [];\n\n  /*-------------------------------------------------*/\n  /*                    P r o p s                    */\n  /*-------------------------------------------------*/\n\n  /**\n   * Sets the button's label.\n   * @default \"Upload files...\"\n   */\n  @Prop({ mutable: true, reflect: true }) kulLabel = \"Upload files...\";\n  /**\n   * When set to true, the pointerdown event will trigger a ripple effect.\n   * @default true\n   */\n  @Prop({ mutable: true, reflect: true }) kulRipple = true;\n  /**\n   * Enables customization of the component's style.\n   * @default \"\" - No custom style applied by default.\n   */\n  @Prop({ mutable: true, reflect: true }) kulStyle = \"\";\n  /**\n   * Initializes the component with these files.\n   * @default null\n   */\n  @Prop({ mutable: false }) kulValue = null;\n\n  /*-------------------------------------------------*/\n  /*       I n t e r n a l   V a r i a b l e s       */\n  /*-------------------------------------------------*/\n\n  #input: HTMLInputElement;\n  #kulManager = kulManagerInstance();\n  #rippleSurface: HTMLElement;\n\n  /*-------------------------------------------------*/\n  /*                   E v e n t s                   */\n  /*-------------------------------------------------*/\n\n  /**\n   * Describes event emitted.\n   */\n  @Event({\n    eventName: \"kul-upload-event\",\n    composed: true,\n    cancelable: false,\n    bubbles: true,\n  })\n  kulEvent: EventEmitter<KulUploadEventPayload>;\n\n  onKulEvent(e: Event | CustomEvent, eventType: KulUploadEvent, file?: File) {\n    switch (eventType) {\n      case \"delete\":\n        this.selectedFiles = this.selectedFiles.filter((f) => f !== file);\n        break;\n\n      case \"pointerdown\":\n        if (this.kulRipple) {\n          this.#kulManager.theme.ripple.trigger(\n            e as PointerEvent,\n            this.#rippleSurface,\n          );\n        }\n        break;\n    }\n    this.kulEvent.emit({\n      comp: this,\n      eventType,\n      id: this.rootElement.id,\n      originalEvent: e,\n      selectedFiles: this.selectedFiles,\n    });\n  }\n\n  /*-------------------------------------------------*/\n  /*           P u b l i c   M e t h o d s           */\n  /*-------------------------------------------------*/\n\n  /**\n   * Retrieves the debug information reflecting the current state of the component.\n   * @returns {Promise<KulDebugLifecycleInfo>} A promise that resolves to a KulDebugLifecycleInfo object containing debug information.\n   */\n  @Method()\n  async getDebugInfo(): Promise<KulDebugLifecycleInfo> {\n    return this.debugInfo;\n  }\n  /**\n   * Retrieves the properties of the component, with optional descriptions.\n   * @param {boolean} descriptions - If true, returns properties with descriptions; otherwise, returns properties only.\n   * @returns {Promise<GenericObject>} A promise that resolves to an object where each key is a property name, optionally with its description.\n   */\n  @Method()\n  async getProps(descriptions?: boolean): Promise<GenericObject> {\n    return getProps(this, KulUploadProps, descriptions);\n  }\n  /**\n   * Returns the component's internal value.\n   */\n  @Method()\n  async getValue(): Promise<File[]> {\n    return this.selectedFiles;\n  }\n  /**\n   * Triggers a re-render of the component to reflect any state changes.\n   */\n  @Method()\n  async refresh(): Promise<void> {\n    forceUpdate(this);\n  }\n  /**\n   * Initiates the unmount sequence, which removes the component from the DOM after a delay.\n   * @param {number} ms - Number of milliseconds\n   */\n  @Method()\n  async unmount(ms: number = 0): Promise<void> {\n    setTimeout(() => {\n      this.onKulEvent(new CustomEvent(\"unmount\"), \"unmount\");\n      this.rootElement.remove();\n    }, ms);\n  }\n\n  /*-------------------------------------------------*/\n  /*           P r i v a t e   M e t h o d s         */\n  /*-------------------------------------------------*/\n\n  #formatFileSize(size: number): string {\n    const units = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    let unitIndex = 0;\n\n    if (size > 10000) {\n      size /= 1024;\n      size /= 1024;\n      unitIndex = 2;\n    } else {\n      while (size >= 1024 && unitIndex < units.length - 1) {\n        size /= 1024;\n        unitIndex++;\n      }\n    }\n\n    return `${size.toFixed(2)} ${units[unitIndex]}`;\n  }\n\n  #handleFileChange() {\n    if (this.#input.files) {\n      this.selectedFiles = Array.from(this.#input.files);\n    } else {\n      this.selectedFiles = [];\n    }\n    this.onKulEvent(new CustomEvent(\"upload\"), \"upload\");\n  }\n\n  #prepFileInfo() {\n    return this.selectedFiles.map((file, index) => (\n      <div class=\"file-info__item\" key={index}>\n        <kul-image\n          class=\"file-info__type\"\n          kulValue={\n            file.type.includes(\"image\")\n              ? \"image\"\n              : file.type.includes(\"audio\")\n                ? \"audiotrack\"\n                : file.type.includes(\"video\")\n                  ? \"movie\"\n                  : \"file\"\n          }\n          kulSizeX=\"24px\"\n          kulSizeY=\"24px\"\n          title={file.type}\n        ></kul-image>\n        <span class=\"file-info__name\" title={file.name}>\n          {file.name}\n        </span>\n        <span class=\"file-info__size\" title={file.size.toString()}>\n          {this.#formatFileSize(file.size)}\n        </span>\n        <kul-button\n          class=\"file-info__clear\"\n          kulIcon={\"clear\"}\n          kulStyling=\"flat\"\n          onClick={(e) => {\n            this.onKulEvent(e, \"delete\", file);\n          }}\n          title=\"Remove\"\n        ></kul-button>\n      </div>\n    ));\n  }\n\n  /*-------------------------------------------------*/\n  /*          L i f e c y c l e   H o o k s          */\n  /*-------------------------------------------------*/\n\n  componentWillLoad() {\n    this.#kulManager.theme.register(this);\n    if (Array.isArray(this.kulValue)) {\n      this.selectedFiles = this.kulValue;\n    }\n  }\n\n  componentDidLoad() {\n    this.onKulEvent(new CustomEvent(\"ready\"), \"ready\");\n    if (this.#rippleSurface) {\n      this.#kulManager.theme.ripple.setup(this.#rippleSurface);\n    }\n    this.#kulManager.debug.updateDebugInfo(this, \"did-load\");\n  }\n\n  componentWillRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"will-render\");\n  }\n\n  componentDidRender() {\n    this.#kulManager.debug.updateDebugInfo(this, \"did-render\");\n  }\n\n  render() {\n    const hasSelectedFiles = this.selectedFiles && this.selectedFiles.length;\n    return (\n      <Host>\n        {this.kulStyle ? (\n          <style id={KUL_STYLE_ID}>\n            {this.#kulManager.theme.setKulStyle(this)}\n          </style>\n        ) : undefined}\n        <div id={KUL_WRAPPER_ID}>\n          <div\n            class={`wrapper ${\n              this.selectedFiles && this.selectedFiles.length\n                ? \"wrapper--with-info\"\n                : \"\"\n            }`}\n          >\n            <div\n              class=\"file-upload\"\n              onPointerDown={(e) => this.onKulEvent(e, \"pointerdown\")}\n            >\n              <input\n                class=\"file-upload__input\"\n                id=\"upload-input\"\n                multiple\n                onChange={() => this.#handleFileChange()}\n                ref={(el) => {\n                  this.#input = el;\n                }}\n                type=\"file\"\n              />\n              <label\n                class=\"file-upload__label\"\n                htmlFor=\"upload-input\"\n                ref={(el) => {\n                  if (this.kulRipple) {\n                    this.#rippleSurface = el;\n                  }\n                }}\n              >\n                <div class=\"file-upload__text\">{this.kulLabel}</div>\n              </label>\n            </div>\n            <div class=\"file-info\">\n              {hasSelectedFiles ? this.#prepFileInfo() : undefined}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  disconnectedCallback() {\n    this.#kulManager.theme.unregister(this);\n  }\n}\n"],"version":3}